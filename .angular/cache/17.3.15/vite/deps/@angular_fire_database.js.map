{
  "version": 3,
  "sources": ["../../../../../node_modules/rxfire/database/index.esm.js", "../../../../../node_modules/@angular/fire/fesm2022/angular-fire-database.mjs"],
  "sourcesContent": ["import { Observable, merge, of, from } from 'rxjs';\nimport { delay, map, switchMap, scan, distinctUntilChanged, withLatestFrom, skipWhile } from 'rxjs/operators';\nimport { onChildAdded, onChildRemoved, onChildChanged, onChildMoved, onValue, off, get as get$1 } from 'firebase/database';\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nvar _a;\nvar ListenEvent;\n(function (ListenEvent) {\n    ListenEvent[\"added\"] = \"child_added\";\n    ListenEvent[\"removed\"] = \"child_removed\";\n    ListenEvent[\"changed\"] = \"child_changed\";\n    ListenEvent[\"moved\"] = \"child_moved\";\n    ListenEvent[\"value\"] = \"value\";\n})(ListenEvent || (ListenEvent = {}));\nvar ListenerMethods = Object.freeze((_a = {},\n    _a[ListenEvent.added] = onChildAdded,\n    _a[ListenEvent.removed] = onChildRemoved,\n    _a[ListenEvent.changed] = onChildChanged,\n    _a[ListenEvent.moved] = onChildMoved,\n    _a[ListenEvent.value] = onValue,\n    _a));\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Create an observable from a Database Reference or Database Query.\n * @param ref Database Reference\n * @param event Listen event type ('value', 'added', 'changed', 'removed', 'moved')\n */\nfunction fromRef(ref, event) {\n    return new Observable(function (subscriber) {\n        var fn = ListenerMethods[event](ref, function (snapshot, prevKey) {\n            subscriber.next({ snapshot: snapshot, prevKey: prevKey, event: event });\n        }, subscriber.error.bind(subscriber));\n        return {\n            unsubscribe: function () {\n                off(ref, event, fn);\n            },\n        };\n    }).pipe(\n    // Ensures subscribe on observable is async. This handles\n    // a quirk in the SDK where on/once callbacks can happen\n    // synchronously.\n    delay(0));\n}\n\n/******************************************************************************\r\nCopyright (c) Microsoft Corporation.\r\n\r\nPermission to use, copy, modify, and/or distribute this software for any\r\npurpose with or without fee is hereby granted.\r\n\r\nTHE SOFTWARE IS PROVIDED \"AS IS\" AND THE AUTHOR DISCLAIMS ALL WARRANTIES WITH\r\nREGARD TO THIS SOFTWARE INCLUDING ALL IMPLIED WARRANTIES OF MERCHANTABILITY\r\nAND FITNESS. IN NO EVENT SHALL THE AUTHOR BE LIABLE FOR ANY SPECIAL, DIRECT,\r\nINDIRECT, OR CONSEQUENTIAL DAMAGES OR ANY DAMAGES WHATSOEVER RESULTING FROM\r\nLOSS OF USE, DATA OR PROFITS, WHETHER IN AN ACTION OF CONTRACT, NEGLIGENCE OR\r\nOTHER TORTIOUS ACTION, ARISING OUT OF OR IN CONNECTION WITH THE USE OR\r\nPERFORMANCE OF THIS SOFTWARE.\r\n***************************************************************************** */\r\n\r\nvar __assign = function() {\r\n    __assign = Object.assign || function __assign(t) {\r\n        for (var s, i = 1, n = arguments.length; i < n; i++) {\r\n            s = arguments[i];\r\n            for (var p in s) if (Object.prototype.hasOwnProperty.call(s, p)) t[p] = s[p];\r\n        }\r\n        return t;\r\n    };\r\n    return __assign.apply(this, arguments);\r\n};\r\n\r\nfunction __spreadArray(to, from, pack) {\r\n    if (pack || arguments.length === 2) for (var i = 0, l = from.length, ar; i < l; i++) {\r\n        if (ar || !(i in from)) {\r\n            if (!ar) ar = Array.prototype.slice.call(from, 0, i);\r\n            ar[i] = from[i];\r\n        }\r\n    }\r\n    return to.concat(ar || Array.prototype.slice.call(from));\r\n}\r\n\r\ntypeof SuppressedError === \"function\" ? SuppressedError : function (error, suppressed, message) {\r\n    var e = new Error(message);\r\n    return e.name = \"SuppressedError\", e.error = error, e.suppressed = suppressed, e;\r\n};\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Check the length of the provided array. If it is empty return an array\n * that is populated with all the Realtime Database child events.\n * @param events\n */\nfunction validateEventsArray(events) {\n    if (events == null || events.length === 0) {\n        events = [\n            ListenEvent.added,\n            ListenEvent.removed,\n            ListenEvent.changed,\n            ListenEvent.moved,\n        ];\n    }\n    return events;\n}\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\n/**\n * Get the snapshot changes of an object\n * @param query\n */\nfunction object(query) {\n    return fromRef(query, ListenEvent.value);\n}\n/**\n * Get an array of object values, optionally with a mapped key\n * @param query object ref or query\n * @param keyField map the object key to a specific field\n */\nfunction objectVal(query, options) {\n    if (options === void 0) { options = {}; }\n    return fromRef(query, ListenEvent.value).pipe(map(function (change) { return changeToData(change, options); }));\n}\nfunction changeToData(change, options) {\n    var _a;\n    if (options === void 0) { options = {}; }\n    var val = change.snapshot.val();\n    // match the behavior of the JS SDK when the snapshot doesn't exist\n    if (!change.snapshot.exists()) {\n        return val;\n    }\n    // val can be a primitive type\n    if (typeof val !== 'object') {\n        return val;\n    }\n    return __assign(__assign({}, val), (options.keyField ? (_a = {}, _a[options.keyField] = change.snapshot.key, _a) : null));\n}\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction stateChanges(query, options) {\n    if (options === void 0) { options = {}; }\n    var events = validateEventsArray(options.events);\n    var childEvent$ = events.map(function (event) { return fromRef(query, event); });\n    return merge.apply(void 0, childEvent$);\n}\nfunction get(query) {\n    return from(get$1(query)).pipe(map(function (snapshot) {\n        var event = ListenEvent.value;\n        return { snapshot: snapshot, prevKey: null, event: event };\n    }));\n}\nfunction list(query, options) {\n    if (options === void 0) { options = {}; }\n    var events = validateEventsArray(options.events);\n    return get(query).pipe(switchMap(function (change) {\n        var childEvent$ = [of(change)];\n        events.forEach(function (event) {\n            childEvent$.push(fromRef(query, event));\n        });\n        return merge.apply(void 0, childEvent$).pipe(scan(buildView, []));\n    }), distinctUntilChanged());\n}\n/**\n * Get an object mapped to its value, and optionally its key\n * @param query object ref or query\n * @param keyField map the object key to a specific field\n */\nfunction listVal(query, options) {\n    if (options === void 0) { options = {}; }\n    return list(query).pipe(map(function (arr) {\n        return arr.map(function (change) { return changeToData(change, options); });\n    }));\n}\nfunction positionFor(changes, key) {\n    var len = changes.length;\n    for (var i = 0; i < len; i++) {\n        if (changes[i].snapshot.key === key) {\n            return i;\n        }\n    }\n    return -1;\n}\nfunction positionAfter(changes, prevKey) {\n    if (prevKey == null) {\n        return 0;\n    }\n    else {\n        var i = positionFor(changes, prevKey);\n        if (i === -1) {\n            return changes.length;\n        }\n        else {\n            return i + 1;\n        }\n    }\n}\nfunction buildView(current, change) {\n    var snapshot = change.snapshot, prevKey = change.prevKey, event = change.event;\n    var key = snapshot.key;\n    var currentKeyPosition = positionFor(current, key);\n    var afterPreviousKeyPosition = positionAfter(current, prevKey || undefined);\n    switch (event) {\n        case ListenEvent.value:\n            if (change.snapshot && change.snapshot.exists()) {\n                var prevKey_1 = null;\n                change.snapshot.forEach(function (snapshot) {\n                    var action = {\n                        snapshot: snapshot,\n                        event: ListenEvent.value,\n                        prevKey: prevKey_1,\n                    };\n                    prevKey_1 = snapshot.key;\n                    current = __spreadArray(__spreadArray([], current, true), [action], false);\n                    return false;\n                });\n            }\n            return current;\n        case ListenEvent.added:\n            if (currentKeyPosition > -1) {\n                // check that the previouskey is what we expect, else reorder\n                var previous = current[currentKeyPosition - 1];\n                if (((previous && previous.snapshot.key) || null) !== prevKey) {\n                    current = current.filter(function (x) { return x.snapshot.key !== snapshot.key; });\n                    current.splice(afterPreviousKeyPosition, 0, change);\n                }\n            }\n            else if (prevKey == null) {\n                return __spreadArray([change], current, true);\n            }\n            else {\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, change);\n            }\n            return current;\n        case ListenEvent.removed:\n            return current.filter(function (x) { return x.snapshot.key !== snapshot.key; });\n        case ListenEvent.changed:\n            return current.map(function (x) { return (x.snapshot.key === key ? change : x); });\n        case ListenEvent.moved:\n            if (currentKeyPosition > -1) {\n                var data = current.splice(currentKeyPosition, 1)[0];\n                current = current.slice();\n                current.splice(afterPreviousKeyPosition, 0, data);\n                return current;\n            }\n            return current;\n        // default will also remove null results\n        default:\n            return current;\n    }\n}\n\n/**\n * @license\n * Copyright 2021 Google LLC\n *\n * Licensed under the Apache License, Version 2.0 (the \"License\");\n * you may not use this file except in compliance with the License.\n * You may obtain a copy of the License at\n *\n *   http://www.apache.org/licenses/LICENSE-2.0\n *\n * Unless required by applicable law or agreed to in writing, software\n * distributed under the License is distributed on an \"AS IS\" BASIS,\n * WITHOUT WARRANTIES OR CONDITIONS OF ANY KIND, either express or implied.\n * See the License for the specific language governing permissions and\n * limitations under the License.\n */\nfunction auditTrail(query, options) {\n    if (options === void 0) { options = {}; }\n    var auditTrail$ = stateChanges(query, options).pipe(scan(function (current, changes) { return __spreadArray(__spreadArray([], current, true), [changes], false); }, []));\n    return waitForLoaded(query, auditTrail$);\n}\nfunction loadedData(query) {\n    // Create an observable of loaded values to retrieve the\n    // known dataset. This will allow us to know what key to\n    // emit the \"whole\" array at when listening for child events.\n    return fromRef(query, ListenEvent.value).pipe(map(function (data) {\n        // Store the last key in the data set\n        var lastKeyToLoad;\n        // Loop through loaded dataset to find the last key\n        data.snapshot.forEach(function (child) {\n            lastKeyToLoad = child.key;\n            return false;\n        });\n        // return data set and the current last key loaded\n        return { data: data, lastKeyToLoad: lastKeyToLoad };\n    }));\n}\nfunction waitForLoaded(query, snap$) {\n    var loaded$ = loadedData(query);\n    return loaded$.pipe(withLatestFrom(snap$), \n    // Get the latest values from the \"loaded\" and \"child\" datasets\n    // We can use both datasets to form an array of the latest values.\n    map(function (_a) {\n        var loaded = _a[0], changes = _a[1];\n        // Store the last key in the data set\n        var lastKeyToLoad = loaded.lastKeyToLoad;\n        // Store all child keys loaded at this point\n        var loadedKeys = changes.map(function (change) { return change.snapshot.key; });\n        return { changes: changes, lastKeyToLoad: lastKeyToLoad, loadedKeys: loadedKeys };\n    }), \n    // This is the magical part, only emit when the last load key\n    // in the dataset has been loaded by a child event. At this point\n    // we can assume the dataset is \"whole\".\n    skipWhile(function (meta) {\n        return meta.loadedKeys.indexOf(meta.lastKeyToLoad) === -1;\n    }), \n    // Pluck off the meta data because the user only cares\n    // to iterate through the snapshots\n    map(function (meta) { return meta.changes; }));\n}\n\nexport { ListenEvent, ListenerMethods, auditTrail, changeToData, fromRef, list, listVal, object, objectVal, stateChanges };\n\n", "import { ɵgetAllInstancesOf, ɵgetDefaultInstanceOf, VERSION, ɵAngularFireSchedulers, ɵAppCheckInstances, ɵzoneWrap } from '@angular/fire';\nimport { from, timer } from 'rxjs';\nimport { concatMap, distinct } from 'rxjs/operators';\nimport * as i0 from '@angular/core';\nimport { InjectionToken, Optional, NgModule, NgZone, Injector, makeEnvironmentProviders } from '@angular/core';\nimport { FirebaseApp, FirebaseApps } from '@angular/fire/app';\nimport { AuthInstances } from '@angular/fire/auth';\nimport { registerVersion } from 'firebase/app';\nimport { fromRef as fromRef$1, stateChanges as stateChanges$1, list as list$1, listVal as listVal$1, auditTrail as auditTrail$1, object as object$1, objectVal as objectVal$1, changeToData as changeToData$1 } from 'rxfire/database';\nexport { ListenEvent, ListenerMethods } from 'rxfire/database';\nimport { child as child$1, connectDatabaseEmulator as connectDatabaseEmulator$1, enableLogging as enableLogging$1, endAt as endAt$1, endBefore as endBefore$1, equalTo as equalTo$1, forceLongPolling as forceLongPolling$1, forceWebSockets as forceWebSockets$1, get as get$1, getDatabase as getDatabase$1, goOffline as goOffline$1, goOnline as goOnline$1, increment as increment$1, limitToFirst as limitToFirst$1, limitToLast as limitToLast$1, off as off$1, onChildAdded as onChildAdded$1, onChildChanged as onChildChanged$1, onChildMoved as onChildMoved$1, onChildRemoved as onChildRemoved$1, onDisconnect as onDisconnect$1, onValue as onValue$1, orderByChild as orderByChild$1, orderByKey as orderByKey$1, orderByPriority as orderByPriority$1, orderByValue as orderByValue$1, push as push$1, query as query$1, ref as ref$1, refFromURL as refFromURL$1, remove as remove$1, runTransaction as runTransaction$1, serverTimestamp as serverTimestamp$1, set as set$1, setPriority as setPriority$1, setWithPriority as setWithPriority$1, startAfter as startAfter$1, startAt as startAt$1, update as update$1 } from 'firebase/database';\nexport * from 'firebase/database';\nclass Database {\n  constructor(database) {\n    return database;\n  }\n}\nconst DATABASE_PROVIDER_NAME = 'database';\nclass DatabaseInstances {\n  constructor() {\n    return ɵgetAllInstancesOf(DATABASE_PROVIDER_NAME);\n  }\n}\nconst databaseInstance$ = timer(0, 300).pipe(concatMap(() => from(ɵgetAllInstancesOf(DATABASE_PROVIDER_NAME))), distinct());\nconst PROVIDED_DATABASE_INSTANCES = new InjectionToken('angularfire2.database-instances');\nfunction defaultDatabaseInstanceFactory(provided, defaultApp) {\n  const defaultDatabase = ɵgetDefaultInstanceOf(DATABASE_PROVIDER_NAME, provided, defaultApp);\n  return defaultDatabase && new Database(defaultDatabase);\n}\nfunction databaseInstanceFactory(fn) {\n  return (zone, injector) => {\n    const database = zone.runOutsideAngular(() => fn(injector));\n    return new Database(database);\n  };\n}\nconst DATABASE_INSTANCES_PROVIDER = {\n  provide: DatabaseInstances,\n  deps: [[new Optional(), PROVIDED_DATABASE_INSTANCES]]\n};\nconst DEFAULT_DATABASE_INSTANCE_PROVIDER = {\n  provide: Database,\n  useFactory: defaultDatabaseInstanceFactory,\n  deps: [[new Optional(), PROVIDED_DATABASE_INSTANCES], FirebaseApp]\n};\nclass DatabaseModule {\n  constructor() {\n    registerVersion('angularfire', VERSION.full, 'rtdb');\n  }\n  static ɵfac = function DatabaseModule_Factory(t) {\n    return new (t || DatabaseModule)();\n  };\n  static ɵmod = /* @__PURE__ */i0.ɵɵdefineNgModule({\n    type: DatabaseModule\n  });\n  static ɵinj = /* @__PURE__ */i0.ɵɵdefineInjector({\n    providers: [DEFAULT_DATABASE_INSTANCE_PROVIDER, DATABASE_INSTANCES_PROVIDER]\n  });\n}\n(() => {\n  (typeof ngDevMode === \"undefined\" || ngDevMode) && i0.ɵsetClassMetadata(DatabaseModule, [{\n    type: NgModule,\n    args: [{\n      providers: [DEFAULT_DATABASE_INSTANCE_PROVIDER, DATABASE_INSTANCES_PROVIDER]\n    }]\n  }], () => [], null);\n})();\nfunction provideDatabase(fn, ...deps) {\n  registerVersion('angularfire', VERSION.full, 'rtdb');\n  return makeEnvironmentProviders([DEFAULT_DATABASE_INSTANCE_PROVIDER, DATABASE_INSTANCES_PROVIDER, {\n    provide: PROVIDED_DATABASE_INSTANCES,\n    useFactory: databaseInstanceFactory(fn),\n    multi: true,\n    deps: [NgZone, Injector, ɵAngularFireSchedulers, FirebaseApps,\n    // Database+Auth work better if Auth is loaded first\n    [new Optional(), AuthInstances], [new Optional(), ɵAppCheckInstances], ...deps]\n  }]);\n}\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst fromRef = ɵzoneWrap(fromRef$1, true);\nconst stateChanges = ɵzoneWrap(stateChanges$1, true);\nconst list = ɵzoneWrap(list$1, true);\nconst listVal = ɵzoneWrap(listVal$1, true);\nconst auditTrail = ɵzoneWrap(auditTrail$1, true);\nconst object = ɵzoneWrap(object$1, true);\nconst objectVal = ɵzoneWrap(objectVal$1, true);\nconst changeToData = ɵzoneWrap(changeToData$1, true);\n\n// DO NOT MODIFY, this file is autogenerated by tools/build.ts\nconst child = ɵzoneWrap(child$1, true);\nconst connectDatabaseEmulator = ɵzoneWrap(connectDatabaseEmulator$1, true);\nconst enableLogging = ɵzoneWrap(enableLogging$1, true);\nconst endAt = ɵzoneWrap(endAt$1, true);\nconst endBefore = ɵzoneWrap(endBefore$1, true);\nconst equalTo = ɵzoneWrap(equalTo$1, true);\nconst forceLongPolling = ɵzoneWrap(forceLongPolling$1, true);\nconst forceWebSockets = ɵzoneWrap(forceWebSockets$1, true);\nconst get = ɵzoneWrap(get$1, true);\nconst getDatabase = ɵzoneWrap(getDatabase$1, true);\nconst goOffline = ɵzoneWrap(goOffline$1, true);\nconst goOnline = ɵzoneWrap(goOnline$1, true);\nconst increment = ɵzoneWrap(increment$1, true);\nconst limitToFirst = ɵzoneWrap(limitToFirst$1, true);\nconst limitToLast = ɵzoneWrap(limitToLast$1, true);\nconst off = ɵzoneWrap(off$1, true);\nconst onChildAdded = ɵzoneWrap(onChildAdded$1, true);\nconst onChildChanged = ɵzoneWrap(onChildChanged$1, true);\nconst onChildMoved = ɵzoneWrap(onChildMoved$1, true);\nconst onChildRemoved = ɵzoneWrap(onChildRemoved$1, true);\nconst onDisconnect = ɵzoneWrap(onDisconnect$1, true);\nconst onValue = ɵzoneWrap(onValue$1, true);\nconst orderByChild = ɵzoneWrap(orderByChild$1, true);\nconst orderByKey = ɵzoneWrap(orderByKey$1, true);\nconst orderByPriority = ɵzoneWrap(orderByPriority$1, true);\nconst orderByValue = ɵzoneWrap(orderByValue$1, true);\nconst push = ɵzoneWrap(push$1, true);\nconst query = ɵzoneWrap(query$1, true);\nconst ref = ɵzoneWrap(ref$1, true);\nconst refFromURL = ɵzoneWrap(refFromURL$1, true);\nconst remove = ɵzoneWrap(remove$1, true);\nconst runTransaction = ɵzoneWrap(runTransaction$1, true);\nconst serverTimestamp = ɵzoneWrap(serverTimestamp$1, true);\nconst set = ɵzoneWrap(set$1, true);\nconst setPriority = ɵzoneWrap(setPriority$1, true);\nconst setWithPriority = ɵzoneWrap(setWithPriority$1, true);\nconst startAfter = ɵzoneWrap(startAfter$1, true);\nconst startAt = ɵzoneWrap(startAt$1, true);\nconst update = ɵzoneWrap(update$1, true);\n\n/**\n * Generated bundle index. Do not edit.\n */\n\nexport { Database, DatabaseInstances, DatabaseModule, auditTrail, changeToData, child, connectDatabaseEmulator, databaseInstance$, enableLogging, endAt, endBefore, equalTo, forceLongPolling, forceWebSockets, fromRef, get, getDatabase, goOffline, goOnline, increment, limitToFirst, limitToLast, list, listVal, object, objectVal, off, onChildAdded, onChildChanged, onChildMoved, onChildRemoved, onDisconnect, onValue, orderByChild, orderByKey, orderByPriority, orderByValue, provideDatabase, push, query, ref, refFromURL, remove, runTransaction, serverTimestamp, set, setPriority, setWithPriority, startAfter, startAt, stateChanges, update };\n"],
  "mappings": "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",
  "names": ["ListenEvent", "ref", "__assign", "from", "query", "_a", "get", "snapshot", "child", "fromRef", "stateChanges", "list", "listVal", "auditTrail", "object", "objectVal", "changeToData", "child", "connectDatabaseEmulator", "enableLogging", "endAt", "endBefore", "equalTo", "forceLongPolling", "forceWebSockets", "get", "getDatabase", "goOffline", "goOnline", "increment", "limitToFirst", "limitToLast", "off", "onChildAdded", "onChildChanged", "onChildMoved", "onChildRemoved", "onDisconnect", "onValue", "orderByChild", "orderByKey", "orderByPriority", "orderByValue", "push", "query", "ref", "refFromURL", "remove", "runTransaction", "serverTimestamp", "set", "setPriority", "setWithPriority", "startAfter", "startAt", "update"]
}
