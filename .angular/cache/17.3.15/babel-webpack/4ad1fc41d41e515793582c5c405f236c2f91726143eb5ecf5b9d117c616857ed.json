{"ast":null,"code":"import _asyncToGenerator from \"/home/nigel/work/safe-space/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { __decorate } from \"tslib\";\nimport { Component, ViewEncapsulation, inject } from '@angular/core';\nimport { MenuController, Platform, ToastController } from '@ionic/angular';\nimport { Router } from '@angular/router';\nimport { Storage } from '@ionic/storage-angular';\nimport { SwUpdate } from '@angular/service-worker';\nimport { UserData } from './providers/user-data';\nimport { environment } from '../environments/environment';\nlet AppComponent = class AppComponent {\n  menu = (() => inject(MenuController))();\n  platform = (() => inject(Platform))();\n  router = (() => inject(Router))();\n  storage = (() => inject(Storage))();\n  userData = (() => inject(UserData))();\n  swUpdate = (() => inject(SwUpdate))();\n  toastCtrl = (() => inject(ToastController))();\n  appPages = [{\n    title: 'News Feed',\n    url: '/app/tabs/news-feed',\n    icon: 'list'\n  }, {\n    title: 'Social Workers',\n    url: '/app/tabs/social-workers',\n    icon: 'people'\n  }, {\n    title: 'Chat Rooms',\n    url: '/app/tabs/chatrooms',\n    icon: 'chatbubbles'\n  }, {\n    title: 'Report',\n    url: '/app/tabs/reports',\n    icon: 'megaphone'\n  }, {\n    title: 'Help Centers',\n    url: '/app/tabs/map',\n    icon: 'map'\n  }, {\n    title: 'About',\n    url: '/app/tabs/about',\n    icon: 'information-circle'\n  }];\n  loggedIn = false;\n  dark = false;\n  appName = (() => environment.appName)();\n  version = (() => environment.version)();\n  constructor() {\n    this.initializeApp();\n  }\n  ngOnInit() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      yield _this.storage.create();\n      _this.checkLoginStatus();\n      _this.listenForLoginEvents();\n      _this.setupServiceWorker();\n    })();\n  }\n  setupServiceWorker() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      if (_this2.swUpdate.isEnabled) {\n        _this2.swUpdate.versionUpdates.subscribe(event => {\n          if (event.type === 'VERSION_READY') {\n            _this2.promptUserUpdate();\n          }\n        });\n      }\n    })();\n  }\n  promptUserUpdate() {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const toast = yield _this3.toastCtrl.create({\n        message: 'Update available!',\n        position: 'bottom',\n        buttons: [{\n          role: 'cancel',\n          text: 'Reload'\n        }]\n      });\n      yield toast.present();\n      toast.onDidDismiss().then(() => _this3.swUpdate.activateUpdate()).then(() => window.location.reload());\n    })();\n  }\n  initializeApp() {\n    this.platform.ready().then(() => {\n      if (this.platform.is('hybrid')) {\n        this.setupStatusBar();\n      }\n    });\n  }\n  setupStatusBar() {\n    const statusBar = document.querySelector('ion-status-bar');\n    if (statusBar) {\n      statusBar.style.backgroundColor = this.dark ? '#000000' : '#ffffff';\n    }\n  }\n  checkLoginStatus() {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      const loggedIn = yield _this4.userData.isLoggedIn();\n      _this4.updateLoggedInStatus(loggedIn);\n    })();\n  }\n  updateLoggedInStatus(loggedIn) {\n    this.loggedIn = loggedIn;\n  }\n  listenForLoginEvents() {\n    window.addEventListener('user:login', () => this.updateLoggedInStatus(true));\n    window.addEventListener('user:signup', () => this.updateLoggedInStatus(true));\n    window.addEventListener('user:logout', () => this.updateLoggedInStatus(false));\n  }\n  logout() {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      yield _this5.userData.logout();\n      yield _this5.router.navigateByUrl('/app/tabs/schedule');\n    })();\n  }\n  openTutorial() {\n    var _this6 = this;\n    return _asyncToGenerator(function* () {\n      _this6.menu.enable(false);\n      yield _this6.storage.set('ion_did_tutorial', false);\n      yield _this6.router.navigateByUrl('/tutorial');\n    })();\n  }\n};\nAppComponent = __decorate([Component({\n  selector: 'app-root',\n  templateUrl: './app.component.html',\n  styleUrls: ['./app.component.scss'],\n  encapsulation: ViewEncapsulation.None\n})], AppComponent);\nexport { AppComponent };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}