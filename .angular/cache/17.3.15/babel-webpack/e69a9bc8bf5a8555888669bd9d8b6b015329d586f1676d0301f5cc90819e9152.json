{"ast":null,"code":"import _asyncToGenerator from \"/home/nigel/work/safe-space/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { DOCUMENT } from '@angular/common';\nimport { darkStyle } from './map-dark-style';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"../../providers/conference-data\";\nimport * as i2 from \"@ionic/angular\";\nconst _c0 = [\"mapCanvas\"];\nexport let MapPage = /*#__PURE__*/(() => {\n  class MapPage {\n    doc;\n    confData;\n    platform;\n    mapElement;\n    constructor(doc, confData, platform) {\n      this.doc = doc;\n      this.confData = confData;\n      this.platform = platform;\n    }\n    ngAfterViewInit() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const appEl = _this.doc.querySelector('ion-app');\n        let isDark = false;\n        let style = [];\n        if (appEl.classList.contains('dark-theme')) {\n          style = darkStyle;\n        }\n        const googleMaps = yield getGoogleMaps('AIzaSyB8pf6ZdFQj5qw7rc_HSGrhUwQKfIe9ICw');\n        let map;\n        _this.confData.getMap().subscribe(mapData => {\n          const mapEle = _this.mapElement.nativeElement;\n          map = new googleMaps.Map(mapEle, {\n            center: mapData.find(d => d.center),\n            zoom: 16,\n            styles: style\n          });\n          mapData.forEach(markerData => {\n            const infoWindow = new googleMaps.InfoWindow({\n              content: `<h5>${markerData.name}</h5>`\n            });\n            const marker = new googleMaps.Marker({\n              position: markerData,\n              map,\n              title: markerData.name\n            });\n            marker.addListener('click', () => {\n              infoWindow.open(map, marker);\n            });\n          });\n          googleMaps.event.addListenerOnce(map, 'idle', () => {\n            mapEle.classList.add('show-map');\n          });\n        });\n        const observer = new MutationObserver(mutations => {\n          mutations.forEach(mutation => {\n            if (mutation.attributeName === 'class') {\n              const el = mutation.target;\n              isDark = el.classList.contains('dark-theme');\n              if (map && isDark) {\n                map.setOptions({\n                  styles: darkStyle\n                });\n              } else if (map) {\n                map.setOptions({\n                  styles: []\n                });\n              }\n            }\n          });\n        });\n        observer.observe(appEl, {\n          attributes: true\n        });\n      })();\n    }\n    static ɵfac = function MapPage_Factory(t) {\n      return new (t || MapPage)(i0.ɵɵdirectiveInject(DOCUMENT), i0.ɵɵdirectiveInject(i1.ConferenceData), i0.ɵɵdirectiveInject(i2.Platform));\n    };\n    static ɵcmp = (() => /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: MapPage,\n      selectors: [[\"page-map\"]],\n      viewQuery: function MapPage_Query(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵviewQuery(_c0, 7);\n        }\n        if (rf & 2) {\n          let _t;\n          i0.ɵɵqueryRefresh(_t = i0.ɵɵloadQuery()) && (ctx.mapElement = _t.first);\n        }\n      },\n      decls: 9,\n      vars: 0,\n      consts: [[\"mapCanvas\", \"\"], [\"slot\", \"start\"], [1, \"map-canvas\"]],\n      template: function MapPage_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-buttons\", 1);\n          i0.ɵɵelement(3, \"ion-menu-button\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"ion-title\");\n          i0.ɵɵtext(5, \"Map\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(6, \"ion-content\");\n          i0.ɵɵelement(7, \"div\", 2, 0);\n          i0.ɵɵelementEnd();\n        }\n      },\n      dependencies: [i2.IonButtons, i2.IonContent, i2.IonHeader, i2.IonMenuButton, i2.IonTitle, i2.IonToolbar],\n      styles: [\".map-canvas[_ngcontent-%COMP%]{position:absolute;height:100%;width:100%;background-color:transparent;opacity:0;transition:opacity .15s ease-in}.show-map[_ngcontent-%COMP%]{opacity:1}\"]\n    }))();\n  }\n  return MapPage;\n})();\nfunction getGoogleMaps(apiKey) {\n  const win = window;\n  const googleModule = win.google;\n  if (googleModule && googleModule.maps) {\n    return Promise.resolve(googleModule.maps);\n  }\n  return new Promise((resolve, reject) => {\n    const script = document.createElement('script');\n    script.src = `https://maps.googleapis.com/maps/api/js?key=${apiKey}&v=3.31`;\n    script.async = true;\n    script.defer = true;\n    document.body.appendChild(script);\n    script.onload = () => {\n      const googleModule2 = win.google;\n      if (googleModule2 && googleModule2.maps) {\n        resolve(googleModule2.maps);\n      } else {\n        reject('google maps not available');\n      }\n    };\n  });\n}","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}