{"ast":null,"code":"import _asyncToGenerator from \"/home/nigel/work/safe-space/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { inject } from '@angular/core';\nimport { FormBuilder, Validators } from '@angular/forms';\nimport { Router } from '@angular/router';\nimport { AlertController, LoadingController, ToastController } from '@ionic/angular';\nimport { AuthenticationService } from '../../services/authentication.service';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@angular/common\";\nimport * as i2 from \"@angular/forms\";\nimport * as i3 from \"@ionic/angular\";\nimport * as i4 from \"@angular/router\";\nfunction LoginPage_ion_note_16_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-note\", 12);\n    i0.ɵɵtext(1, \" Please enter a valid email \");\n    i0.ɵɵelementEnd();\n  }\n}\nfunction LoginPage_ion_note_21_Template(rf, ctx) {\n  if (rf & 1) {\n    i0.ɵɵelementStart(0, \"ion-note\", 12);\n    i0.ɵɵtext(1, \" Password must be at least 6 characters \");\n    i0.ɵɵelementEnd();\n  }\n}\nexport let LoginPage = /*#__PURE__*/(() => {\n  class LoginPage {\n    formBuilder = (() => inject(FormBuilder))();\n    router = (() => inject(Router))();\n    alertController = (() => inject(AlertController))();\n    loadingController = (() => inject(LoadingController))();\n    toastController = (() => inject(ToastController))();\n    authService = (() => inject(AuthenticationService))();\n    credentials;\n    constructor() {\n      this.credentials = this.formBuilder.group({\n        email: ['', [Validators.required, Validators.email]],\n        password: ['', [Validators.required, Validators.minLength(6)]]\n      });\n    }\n    ngOnInit() {\n      this.checkAuthState();\n    }\n    checkAuthState() {\n      var _this = this;\n      return _asyncToGenerator(function* () {\n        const isAuthenticated = yield _this.authService.isAuthenticated();\n        if (isAuthenticated) {\n          _this.router.navigateByUrl('/app/tabs/news-feed', {\n            replaceUrl: true\n          });\n        }\n      })();\n    }\n    login() {\n      var _this2 = this;\n      return _asyncToGenerator(function* () {\n        const loading = yield _this2.loadingController.create();\n        yield loading.present();\n        try {\n          yield _this2.authService.login(_this2.credentials.value);\n          yield loading.dismiss();\n          _this2.router.navigateByUrl('/app/tabs/news-feed', {\n            replaceUrl: true\n          });\n        } catch (error) {\n          yield loading.dismiss();\n          const toast = yield _this2.toastController.create({\n            message: 'Login failed. Please check your credentials.',\n            duration: 3000,\n            position: 'bottom',\n            color: 'danger'\n          });\n          yield toast.present();\n        }\n      })();\n    }\n    forgotPassword() {\n      var _this3 = this;\n      return _asyncToGenerator(function* () {\n        const alert = yield _this3.alertController.create({\n          header: 'Reset Password',\n          inputs: [{\n            name: 'email',\n            type: 'email',\n            placeholder: 'Enter your email'\n          }],\n          buttons: [{\n            text: 'Cancel',\n            role: 'cancel'\n          }, {\n            text: 'Reset',\n            handler: function () {\n              var _ref = _asyncToGenerator(function* (data) {\n                const loading = yield _this3.loadingController.create();\n                yield loading.present();\n                try {\n                  yield _this3.authService.resetPassword(data.email);\n                  yield loading.dismiss();\n                  const toast = yield _this3.toastController.create({\n                    message: 'Password reset email sent',\n                    duration: 3000,\n                    position: 'bottom',\n                    color: 'success'\n                  });\n                  yield toast.present();\n                } catch (error) {\n                  yield loading.dismiss();\n                  const toast = yield _this3.toastController.create({\n                    message: 'Failed to send reset email',\n                    duration: 3000,\n                    position: 'bottom',\n                    color: 'danger'\n                  });\n                  yield toast.present();\n                }\n              });\n              return function handler(_x) {\n                return _ref.apply(this, arguments);\n              };\n            }()\n          }]\n        });\n        yield alert.present();\n      })();\n    }\n    static ɵfac = function LoginPage_Factory(t) {\n      return new (t || LoginPage)();\n    };\n    static ɵcmp = (() => /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: LoginPage,\n      selectors: [[\"app-login\"]],\n      decls: 31,\n      vars: 8,\n      consts: [[1, \"ion-padding\"], [1, \"ion-text-center\", \"ion-padding\"], [\"src\", \"assets/icon/logo.png\", 1, \"logo\"], [3, \"ngSubmit\", \"formGroup\"], [\"position\", \"floating\"], [\"type\", \"email\", \"formControlName\", \"email\"], [\"slot\", \"error\", 4, \"ngIf\"], [\"type\", \"password\", \"formControlName\", \"password\"], [\"expand\", \"block\", \"type\", \"submit\", 1, \"ion-margin-top\", 3, \"disabled\"], [\"expand\", \"block\", \"fill\", \"clear\", 1, \"ion-margin-top\", 3, \"click\"], [1, \"ion-text-center\", \"ion-margin-top\"], [\"expand\", \"block\", \"fill\", \"outline\", \"routerLink\", \"/signup\"], [\"slot\", \"error\"]],\n      template: function LoginPage_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ion-header\")(1, \"ion-toolbar\")(2, \"ion-title\");\n          i0.ɵɵtext(3, \"Login\");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(4, \"ion-content\", 0)(5, \"div\", 1);\n          i0.ɵɵelement(6, \"ion-img\", 2);\n          i0.ɵɵelementStart(7, \"h2\");\n          i0.ɵɵtext(8, \"Welcome Back\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(9, \"p\");\n          i0.ɵɵtext(10, \"Please sign in to continue\");\n          i0.ɵɵelementEnd()();\n          i0.ɵɵelementStart(11, \"form\", 3);\n          i0.ɵɵlistener(\"ngSubmit\", function LoginPage_Template_form_ngSubmit_11_listener() {\n            return ctx.login();\n          });\n          i0.ɵɵelementStart(12, \"ion-item\")(13, \"ion-label\", 4);\n          i0.ɵɵtext(14, \"Email\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(15, \"ion-input\", 5);\n          i0.ɵɵtemplate(16, LoginPage_ion_note_16_Template, 2, 0, \"ion-note\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(17, \"ion-item\")(18, \"ion-label\", 4);\n          i0.ɵɵtext(19, \"Password\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelement(20, \"ion-input\", 7);\n          i0.ɵɵtemplate(21, LoginPage_ion_note_21_Template, 2, 0, \"ion-note\", 6);\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(22, \"ion-button\", 8);\n          i0.ɵɵtext(23, \" Login \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(24, \"ion-button\", 9);\n          i0.ɵɵlistener(\"click\", function LoginPage_Template_ion_button_click_24_listener() {\n            return ctx.forgotPassword();\n          });\n          i0.ɵɵtext(25, \" Forgot Password? \");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(26, \"div\", 10)(27, \"p\");\n          i0.ɵɵtext(28, \"Don't have an account?\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(29, \"ion-button\", 11);\n          i0.ɵɵtext(30, \" Sign Up \");\n          i0.ɵɵelementEnd()()()();\n        }\n        if (rf & 2) {\n          let tmp_1_0;\n          let tmp_2_0;\n          let tmp_3_0;\n          let tmp_4_0;\n          i0.ɵɵadvance(11);\n          i0.ɵɵproperty(\"formGroup\", ctx.credentials);\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"ion-invalid\", ((tmp_1_0 = ctx.credentials.get(\"email\")) == null ? null : tmp_1_0.invalid) && ((tmp_1_0 = ctx.credentials.get(\"email\")) == null ? null : tmp_1_0.touched));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ((tmp_2_0 = ctx.credentials.get(\"email\")) == null ? null : tmp_2_0.invalid) && ((tmp_2_0 = ctx.credentials.get(\"email\")) == null ? null : tmp_2_0.touched));\n          i0.ɵɵadvance(4);\n          i0.ɵɵclassProp(\"ion-invalid\", ((tmp_3_0 = ctx.credentials.get(\"password\")) == null ? null : tmp_3_0.invalid) && ((tmp_3_0 = ctx.credentials.get(\"password\")) == null ? null : tmp_3_0.touched));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"ngIf\", ((tmp_4_0 = ctx.credentials.get(\"password\")) == null ? null : tmp_4_0.invalid) && ((tmp_4_0 = ctx.credentials.get(\"password\")) == null ? null : tmp_4_0.touched));\n          i0.ɵɵadvance();\n          i0.ɵɵproperty(\"disabled\", !ctx.credentials.valid);\n        }\n      },\n      dependencies: [i1.NgIf, i2.ɵNgNoValidate, i2.NgControlStatus, i2.NgControlStatusGroup, i2.FormGroupDirective, i2.FormControlName, i3.IonButton, i3.IonContent, i3.IonHeader, i3.IonImg, i3.IonInput, i3.IonItem, i3.IonLabel, i3.IonNote, i3.IonTitle, i3.IonToolbar, i3.TextValueAccessor, i3.RouterLinkDelegate, i4.RouterLink],\n      styles: [\"[_nghost-%COMP%]{--ion-background-color: var(--ion-color-light)}.logo[_ngcontent-%COMP%]{width:120px;height:120px;margin:20px auto;display:block}ion-content[_ngcontent-%COMP%]{--background: var(--ion-color-light)}ion-item[_ngcontent-%COMP%]{--background: transparent;--border-color: var(--ion-color-medium);--highlight-color-focused: var(--ion-color-primary);--highlight-color-valid: var(--ion-color-success);--highlight-color-invalid: var(--ion-color-danger);margin-bottom:16px}ion-button[_ngcontent-%COMP%]{--border-radius: 8px;margin-top:16px}ion-note[_ngcontent-%COMP%]{font-size:12px;color:var(--ion-color-danger)}h2[_ngcontent-%COMP%]{color:var(--ion-color-dark);font-weight:600;margin:0}p[_ngcontent-%COMP%]{color:var(--ion-color-medium);margin:8px 0}\"]\n    }))();\n  }\n  return LoginPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}