{"ast":null,"code":"import _asyncToGenerator from \"/home/nigel/work/safe-space/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\n/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, writeTask, h, Host } from '@stencil/core/internal/client';\nimport { startFocusVisible } from './focus-visible.js';\nimport { r as raf, e as renderHiddenInput, g as getElementRoot } from './helpers.js';\nimport { a as printIonError, p as printIonWarning } from './index6.js';\nimport { i as isRTL } from './dir.js';\nimport { c as createColorClasses } from './theme.js';\nimport { a as chevronBack, f as chevronForward, c as chevronDown, g as caretUpSharp, h as caretDownSharp } from './index7.js';\nimport { b as getIonMode } from './ionic-global.js';\nimport { g as generateDayAriaLabel, a as getDay, i as isBefore, b as isAfter, c as isSameDay, d as getPreviousMonth, e as getNextMonth, v as validateParts, f as getPartsFromCalendarDay, h as getNextYear, j as getPreviousYear, k as getEndOfWeek, l as getStartOfWeek, m as getPreviousDay, n as getNextDay, o as getPreviousWeek, p as getNextWeek, q as parseMinParts, r as parseMaxParts, s as parseDate, w as warnIfValueOutOfBounds, t as convertToArrayOfNumbers, u as convertDataToISO, x as getToday, y as getClosestValidDate, z as generateMonths, A as getNumDaysInMonth, B as getCombinedDateColumnData, C as getMonthColumnData, D as getDayColumnData, E as getYearColumnData, F as isMonthFirstLocale, G as getTimeColumnsData, H as isLocaleDayPeriodRTL, I as getMonthAndYear, J as getDaysOfWeek, K as getDaysOfMonth, L as getHourCycle, M as getLocalizedTime, N as getLocalizedDateTime, O as formatValue, P as clampDate, Q as parseAmPm, R as calculateHourFromAMPM } from './data.js';\nimport { d as defineCustomElement$c } from './backdrop.js';\nimport { d as defineCustomElement$b } from './button.js';\nimport { d as defineCustomElement$a } from './buttons.js';\nimport { d as defineCustomElement$9 } from './icon.js';\nimport { d as defineCustomElement$8 } from './item.js';\nimport { d as defineCustomElement$7 } from './label.js';\nimport { d as defineCustomElement$6 } from './note.js';\nimport { d as defineCustomElement$5 } from './picker-column-internal.js';\nimport { d as defineCustomElement$4 } from './picker-internal.js';\nimport { d as defineCustomElement$3 } from './popover.js';\nimport { d as defineCustomElement$2 } from './ripple-effect.js';\nconst isYearDisabled = (refYear, minParts, maxParts) => {\n  if (minParts && minParts.year > refYear) {\n    return true;\n  }\n  if (maxParts && maxParts.year < refYear) {\n    return true;\n  }\n  return false;\n};\n/**\n * Returns true if a given day should\n * not be interactive according to its value,\n * or the max/min dates.\n */\nconst isDayDisabled = (refParts, minParts, maxParts, dayValues) => {\n  /**\n   * If this is a filler date (i.e. padding)\n   * then the date is disabled.\n   */\n  if (refParts.day === null) {\n    return true;\n  }\n  /**\n   * If user passed in a list of acceptable day values\n   * check to make sure that the date we are looking\n   * at is in this array.\n   */\n  if (dayValues !== undefined && !dayValues.includes(refParts.day)) {\n    return true;\n  }\n  /**\n   * Given a min date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year < the min allowed year?\n   * 2. Is the current year === min allowed year,\n   * but the current month < the min allowed month?\n   * 3. Is the current year === min allowed year, the\n   * current month === min allow month, but the current\n   * day < the min allowed day?\n   */\n  if (minParts && isBefore(refParts, minParts)) {\n    return true;\n  }\n  /**\n   * Given a max date, perform the following\n   * checks. If any of them are true, then the\n   * day should be disabled:\n   * 1. Is the current year > the max allowed year?\n   * 2. Is the current year === max allowed year,\n   * but the current month > the max allowed month?\n   * 3. Is the current year === max allowed year, the\n   * current month === max allow month, but the current\n   * day > the max allowed day?\n   */\n  if (maxParts && isAfter(refParts, maxParts)) {\n    return true;\n  }\n  /**\n   * If none of these checks\n   * passed then the date should\n   * be interactive.\n   */\n  return false;\n};\n/**\n * Given a locale, a date, the selected date(s), and today's date,\n * generate the state for a given calendar day button.\n */\nconst getCalendarDayState = (locale, refParts, activeParts, todayParts, minParts, maxParts, dayValues) => {\n  /**\n   * activeParts signals what day(s) are currently selected in the datetime.\n   * If multiple=\"true\", this will be an array, but the logic in this util\n   * is the same whether we have one selected day or many because we're only\n   * calculating the state for one button. So, we treat a single activeParts value\n   * the same as an array of length one.\n   */\n  const activePartsArray = Array.isArray(activeParts) ? activeParts : [activeParts];\n  /**\n   * The day button is active if it is selected, or in other words, if refParts\n   * matches at least one selected date.\n   */\n  const isActive = activePartsArray.find(parts => isSameDay(refParts, parts)) !== undefined;\n  const isToday = isSameDay(refParts, todayParts);\n  const disabled = isDayDisabled(refParts, minParts, maxParts, dayValues);\n  /**\n   * Note that we always return one object regardless of whether activeParts\n   * was an array, since we pare down to one value for isActive.\n   */\n  return {\n    disabled,\n    isActive,\n    isToday,\n    ariaSelected: isActive ? 'true' : null,\n    ariaLabel: generateDayAriaLabel(locale, isToday, refParts),\n    text: refParts.day != null ? getDay(locale, refParts) : null\n  };\n};\n/**\n * Returns `true` if the month is disabled given the\n * current date value and min/max date constraints.\n */\nconst isMonthDisabled = (refParts, {\n  minParts,\n  maxParts\n}) => {\n  // If the year is disabled then the month is disabled.\n  if (isYearDisabled(refParts.year, minParts, maxParts)) {\n    return true;\n  }\n  // If the date value is before the min date, then the month is disabled.\n  // If the date value is after the max date, then the month is disabled.\n  if (minParts && isBefore(refParts, minParts) || maxParts && isAfter(refParts, maxParts)) {\n    return true;\n  }\n  return false;\n};\n/**\n * Given a working date, an optional minimum date range,\n * and an optional maximum date range; determine if the\n * previous navigation button is disabled.\n */\nconst isPrevMonthDisabled = (refParts, minParts, maxParts) => {\n  const prevMonth = Object.assign(Object.assign({}, getPreviousMonth(refParts)), {\n    day: null\n  });\n  return isMonthDisabled(prevMonth, {\n    minParts,\n    maxParts\n  });\n};\n/**\n * Given a working date and a maximum date range,\n * determine if the next navigation button is disabled.\n */\nconst isNextMonthDisabled = (refParts, maxParts) => {\n  const nextMonth = Object.assign(Object.assign({}, getNextMonth(refParts)), {\n    day: null\n  });\n  return isMonthDisabled(nextMonth, {\n    maxParts\n  });\n};\n/**\n * Given the value of the highlightedDates property\n * and an ISO string, return the styles to use for\n * that date, or undefined if none are found.\n */\nconst getHighlightStyles = (highlightedDates, dateIsoString, el) => {\n  if (Array.isArray(highlightedDates)) {\n    const dateStringWithoutTime = dateIsoString.split('T')[0];\n    const matchingHighlight = highlightedDates.find(hd => hd.date === dateStringWithoutTime);\n    if (matchingHighlight) {\n      return {\n        textColor: matchingHighlight.textColor,\n        backgroundColor: matchingHighlight.backgroundColor\n      };\n    }\n  } else {\n    /**\n     * Wrap in a try-catch to prevent exceptions in the user's function\n     * from interrupting the calendar's rendering.\n     */\n    try {\n      return highlightedDates(dateIsoString);\n    } catch (e) {\n      printIonError('Exception thrown from provided `highlightedDates` callback. Please check your function and try again.', el, e);\n    }\n  }\n  return undefined;\n};\n\n/**\n * If a time zone is provided in the format options, the rendered text could\n * differ from what was selected in the Datetime, which could cause\n * confusion.\n */\nconst warnIfTimeZoneProvided = (el, formatOptions) => {\n  var _a, _b, _c, _d;\n  if (((_a = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.date) === null || _a === void 0 ? void 0 : _a.timeZone) || ((_b = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.date) === null || _b === void 0 ? void 0 : _b.timeZoneName) || ((_c = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.time) === null || _c === void 0 ? void 0 : _c.timeZone) || ((_d = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.time) === null || _d === void 0 ? void 0 : _d.timeZoneName)) {\n    printIonWarning('Datetime: \"timeZone\" and \"timeZoneName\" are not supported in \"formatOptions\".', el);\n  }\n};\nconst checkForPresentationFormatMismatch = (el, presentation, formatOptions) => {\n  // formatOptions is not required\n  if (!formatOptions) return;\n  // If formatOptions is provided, the date and/or time objects are required, depending on the presentation\n  switch (presentation) {\n    case 'date':\n    case 'month-year':\n    case 'month':\n    case 'year':\n      if (formatOptions.date === undefined) {\n        printIonWarning(`Datetime: The '${presentation}' presentation requires a date object in formatOptions.`, el);\n      }\n      break;\n    case 'time':\n      if (formatOptions.time === undefined) {\n        printIonWarning(`Datetime: The 'time' presentation requires a time object in formatOptions.`, el);\n      }\n      break;\n    case 'date-time':\n    case 'time-date':\n      if (formatOptions.date === undefined && formatOptions.time === undefined) {\n        printIonWarning(`Datetime: The '${presentation}' presentation requires either a date or time object (or both) in formatOptions.`, el);\n      }\n      break;\n  }\n};\nconst datetimeIosCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}ion-picker-column-internal{min-width:26px}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{position:absolute;visibility:hidden;pointer-events:none}@supports (inset-inline-start: 0){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{inset-inline-start:-99999px}}@supports not (inset-inline-start: 0){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}@supports selector(:dir(rtl)){:host(.show-month-and-year:dir(rtl)) .calendar-next-prev,:host(.show-month-and-year:dir(rtl)) .calendar-days-of-week,:host(.show-month-and-year:dir(rtl)) .calendar-body,:host(.show-month-and-year:dir(rtl)) .datetime-time{left:unset;right:unset;right:-99999px}}}}@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled) .calendar-days-of-week,:host(.datetime-disabled) .datetime-time{opacity:0.4}:host(.datetime-readonly){pointer-events:none;}:host(.datetime-readonly) .calendar-action-buttons,:host(.datetime-readonly) .calendar-body,:host(.datetime-readonly) .datetime-year{pointer-events:initial}:host(.datetime-readonly) .calendar-day[disabled]:not(.calendar-day-constrained),:host(.datetime-readonly) .datetime-action-buttons ion-button[disabled]{opacity:1}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.datetime-action-buttons .datetime-action-buttons-container{display:-ms-flexbox;display:flex}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;width:auto}:host .calendar-action-buttons ion-item ion-icon{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0;padding-top:0;padding-bottom:0}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}.calendar-days-of-week .day-of-week{-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:0;margin-bottom:0}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr)}:host .calendar-day-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;min-width:0;min-height:0;overflow:visible}.calendar-day{border-radius:50%;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px;padding-top:0px;padding-bottom:0px;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;font-family:var(--ion-font-family, inherit);cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}.calendar-day:focus{background:rgba(var(--ion-color-base-rgb), 0.2);-webkit-box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2)}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-light, #ffffff);--background-rgb:var(--ion-color-light-rgb);--title-color:var(--ion-color-step-600, #666666)}:host(.datetime-presentation-date-time:not(.datetime-prefer-wheel)),:host(.datetime-presentation-time-date:not(.datetime-prefer-wheel)),:host(.datetime-presentation-date:not(.datetime-prefer-wheel)){min-height:350px}:host .datetime-header{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:16px;padding-bottom:16px;border-bottom:0.55px solid var(--ion-color-step-200, #cccccc);font-size:min(0.875rem, 22.4px)}:host .datetime-header .datetime-title{color:var(--title-color)}:host .datetime-header .datetime-selected-date{margin-top:10px}:host .calendar-action-buttons ion-item{--padding-start:16px;--background-hover:transparent;--background-activated:transparent;font-size:min(1rem, 25.6px);font-weight:600}:host .calendar-action-buttons ion-item ion-icon,:host .calendar-action-buttons ion-buttons ion-button{color:var(--ion-color-base)}:host .calendar-action-buttons ion-buttons{padding-left:0;padding-right:0;padding-top:8px;padding-bottom:0}:host .calendar-action-buttons ion-buttons ion-button{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}:host .calendar-days-of-week{-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:0;padding-bottom:0;color:var(--ion-color-step-300, #b3b3b3);font-size:min(0.75rem, 19.2px);font-weight:600;line-height:24px;text-transform:uppercase}@supports (border-radius: mod(1px, 1px)){.calendar-days-of-week .day-of-week{width:clamp(20px, calc(mod(min(1rem, 24px), 24px) * 10), 100%);height:24px;overflow:hidden}.calendar-day{border-radius:max(8px, mod(min(1rem, 24px), 24px) * 10)}}@supports ((border-radius: mod(1px, 1px)) and (background: -webkit-named-image(apple-pay-logo-black)) and (not (contain-intrinsic-size: none))) or (not (border-radius: mod(1px, 1px))){.calendar-days-of-week .day-of-week{width:auto;height:auto;overflow:initial}.calendar-day{border-radius:32px}}:host .calendar-body .calendar-month .calendar-month-grid{-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:8px;padding-bottom:8px;-ms-flex-align:center;align-items:center;height:calc(100% - 16px)}:host .calendar-day-wrapper{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px;padding-top:4px;padding-bottom:4px;height:0;min-height:1rem}:host .calendar-day{width:40px;min-width:40px;height:40px;font-size:min(1.25rem, 32px)}.calendar-day.calendar-day-active{background:rgba(var(--ion-color-base-rgb), 0.2)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-base);font-weight:600}:host .calendar-day.calendar-day-today.calendar-day-active{background:var(--ion-color-base);color:var(--ion-color-contrast)}:host .datetime-time{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:8px;padding-bottom:16px;font-size:min(1rem, 25.6px)}:host .datetime-time .time-header{font-weight:600}:host .datetime-buttons{-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:8px;padding-bottom:8px;border-top:0.55px solid var(--ion-color-step-200, #cccccc)}:host .datetime-buttons ::slotted(ion-buttons),:host .datetime-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}:host .datetime-action-buttons{width:100%}\";\nconst IonDatetimeIosStyle0 = datetimeIosCss;\nconst datetimeMdCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}ion-picker-column-internal{min-width:26px}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{position:absolute;visibility:hidden;pointer-events:none}@supports (inset-inline-start: 0){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{inset-inline-start:-99999px}}@supports not (inset-inline-start: 0){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}@supports selector(:dir(rtl)){:host(.show-month-and-year:dir(rtl)) .calendar-next-prev,:host(.show-month-and-year:dir(rtl)) .calendar-days-of-week,:host(.show-month-and-year:dir(rtl)) .calendar-body,:host(.show-month-and-year:dir(rtl)) .datetime-time{left:unset;right:unset;right:-99999px}}}}@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled) .calendar-days-of-week,:host(.datetime-disabled) .datetime-time{opacity:0.4}:host(.datetime-readonly){pointer-events:none;}:host(.datetime-readonly) .calendar-action-buttons,:host(.datetime-readonly) .calendar-body,:host(.datetime-readonly) .datetime-year{pointer-events:initial}:host(.datetime-readonly) .calendar-day[disabled]:not(.calendar-day-constrained),:host(.datetime-readonly) .datetime-action-buttons ion-button[disabled]{opacity:1}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.datetime-action-buttons .datetime-action-buttons-container{display:-ms-flexbox;display:flex}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;width:auto}:host .calendar-action-buttons ion-item ion-icon{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0;padding-top:0;padding-bottom:0}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}.calendar-days-of-week .day-of-week{-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:0;margin-bottom:0}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr)}:host .calendar-day-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;min-width:0;min-height:0;overflow:visible}.calendar-day{border-radius:50%;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px;padding-top:0px;padding-bottom:0px;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;font-family:var(--ion-font-family, inherit);cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}.calendar-day:focus{background:rgba(var(--ion-color-base-rgb), 0.2);-webkit-box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2)}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-step-100, #ffffff);--title-color:var(--ion-color-contrast)}:host .datetime-header{-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:20px;padding-inline-end:20px;padding-top:20px;padding-bottom:20px;background:var(--ion-color-base);color:var(--title-color)}:host .datetime-header .datetime-title{font-size:0.75rem;text-transform:uppercase}:host .datetime-header .datetime-selected-date{margin-top:30px;font-size:2.125rem}:host .datetime-calendar .calendar-action-buttons ion-item{--padding-start:20px}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--color:var(--ion-color-step-650, #595959)}:host .calendar-days-of-week{-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px;padding-top:0px;padding-bottom:0px;color:var(--ion-color-step-500, gray);font-size:0.875rem;line-height:36px}:host .calendar-body .calendar-month .calendar-month-grid{-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px;padding-top:4px;padding-bottom:4px;grid-template-rows:repeat(6, 1fr)}:host .calendar-day{width:42px;min-width:42px;height:42px;font-size:0.875rem}:host .calendar-day.calendar-day-today{border:1px solid var(--ion-color-base);color:var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-contrast)}.calendar-day.calendar-day-active{border:1px solid var(--ion-color-base);background:var(--ion-color-base)}:host .datetime-time{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:8px;padding-bottom:8px}:host .time-header{color:var(--ion-color-step-650, #595959)}:host(.datetime-presentation-month) .datetime-year,:host(.datetime-presentation-year) .datetime-year,:host(.datetime-presentation-month-year) .datetime-year{margin-top:20px;margin-bottom:20px}:host .datetime-buttons{-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px;padding-top:10px;padding-bottom:10px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end}\";\nconst IonDatetimeMdStyle0 = datetimeMdCss;\nconst Datetime = /*@__PURE__*/proxyCustomElement(class Datetime extends HTMLElement {\n  constructor() {\n    var _this;\n    super();\n    _this = this;\n    this.__registerHost();\n    this.__attachShadow();\n    this.ionCancel = createEvent(this, \"ionCancel\", 7);\n    this.ionChange = createEvent(this, \"ionChange\", 7);\n    this.ionValueChange = createEvent(this, \"ionValueChange\", 7);\n    this.ionFocus = createEvent(this, \"ionFocus\", 7);\n    this.ionBlur = createEvent(this, \"ionBlur\", 7);\n    this.ionStyle = createEvent(this, \"ionStyle\", 7);\n    this.ionRender = createEvent(this, \"ionRender\", 7);\n    this.inputId = `ion-dt-${datetimeIds++}`;\n    this.prevPresentation = null;\n    this.warnIfIncorrectValueUsage = () => {\n      const {\n        multiple,\n        value\n      } = this;\n      if (!multiple && Array.isArray(value)) {\n        /**\n         * We do some processing on the `value` array so\n         * that it looks more like an array when logged to\n         * the console.\n         * Example given ['a', 'b']\n         * Default toString() behavior: a,b\n         * Custom behavior: ['a', 'b']\n         */\n        printIonWarning(`ion-datetime was passed an array of values, but multiple=\"false\". This is incorrect usage and may result in unexpected behaviors. To dismiss this warning, pass a string to the \"value\" property when multiple=\"false\".\n\n  Value Passed: [${value.map(v => `'${v}'`).join(', ')}]\n`, this.el);\n      }\n    };\n    this.setValue = value => {\n      this.value = value;\n      this.ionChange.emit({\n        value\n      });\n    };\n    /**\n     * Returns the DatetimePart interface\n     * to use when rendering an initial set of\n     * data. This should be used when rendering an\n     * interface in an environment where the `value`\n     * may not be set. This function works\n     * by returning the first selected date and then\n     * falling back to defaultParts if no active date\n     * is selected.\n     */\n    this.getActivePartsWithFallback = () => {\n      var _a;\n      const {\n        defaultParts\n      } = this;\n      return (_a = this.getActivePart()) !== null && _a !== void 0 ? _a : defaultParts;\n    };\n    this.getActivePart = () => {\n      const {\n        activeParts\n      } = this;\n      return Array.isArray(activeParts) ? activeParts[0] : activeParts;\n    };\n    this.closeParentOverlay = () => {\n      const popoverOrModal = this.el.closest('ion-modal, ion-popover');\n      if (popoverOrModal) {\n        popoverOrModal.dismiss();\n      }\n    };\n    this.setWorkingParts = parts => {\n      this.workingParts = Object.assign({}, parts);\n    };\n    this.setActiveParts = (parts, removeDate = false) => {\n      /** if the datetime component is in readonly mode,\n       * allow browsing of the calendar without changing\n       * the set value\n       */\n      if (this.readonly) {\n        return;\n      }\n      const {\n        multiple,\n        minParts,\n        maxParts,\n        activeParts\n      } = this;\n      /**\n       * When setting the active parts, it is possible\n       * to set invalid data. For example,\n       * when updating January 31 to February,\n       * February 31 does not exist. As a result\n       * we need to validate the active parts and\n       * ensure that we are only setting valid dates.\n       * Additionally, we need to update the working parts\n       * too in the event that the validated parts are different.\n       */\n      const validatedParts = validateParts(parts, minParts, maxParts);\n      this.setWorkingParts(validatedParts);\n      if (multiple) {\n        const activePartsArray = Array.isArray(activeParts) ? activeParts : [activeParts];\n        if (removeDate) {\n          this.activeParts = activePartsArray.filter(p => !isSameDay(p, validatedParts));\n        } else {\n          this.activeParts = [...activePartsArray, validatedParts];\n        }\n      } else {\n        this.activeParts = Object.assign({}, validatedParts);\n      }\n      const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n      if (hasSlottedButtons || this.showDefaultButtons) {\n        return;\n      }\n      this.confirm();\n    };\n    this.initializeKeyboardListeners = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const root = this.el.shadowRoot;\n      /**\n       * Get a reference to the month\n       * element we are currently viewing.\n       */\n      const currentMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(2)');\n      /**\n       * When focusing the calendar body, we want to pass focus\n       * to the working day, but other days should\n       * only be accessible using the arrow keys. Pressing\n       * Tab should jump between bodies of selectable content.\n       */\n      const checkCalendarBodyFocus = ev => {\n        var _a;\n        const record = ev[0];\n        /**\n         * If calendar body was already focused\n         * when this fired or if the calendar body\n         * if not currently focused, we should not re-focus\n         * the inner day.\n         */\n        if (((_a = record.oldValue) === null || _a === void 0 ? void 0 : _a.includes('ion-focused')) || !calendarBodyRef.classList.contains('ion-focused')) {\n          return;\n        }\n        this.focusWorkingDay(currentMonth);\n      };\n      const mo = new MutationObserver(checkCalendarBodyFocus);\n      mo.observe(calendarBodyRef, {\n        attributeFilter: ['class'],\n        attributeOldValue: true\n      });\n      this.destroyKeyboardMO = () => {\n        mo === null || mo === void 0 ? void 0 : mo.disconnect();\n      };\n      /**\n       * We must use keydown not keyup as we want\n       * to prevent scrolling when using the arrow keys.\n       */\n      calendarBodyRef.addEventListener('keydown', ev => {\n        const activeElement = root.activeElement;\n        if (!activeElement || !activeElement.classList.contains('calendar-day')) {\n          return;\n        }\n        const parts = getPartsFromCalendarDay(activeElement);\n        let partsToFocus;\n        switch (ev.key) {\n          case 'ArrowDown':\n            ev.preventDefault();\n            partsToFocus = getNextWeek(parts);\n            break;\n          case 'ArrowUp':\n            ev.preventDefault();\n            partsToFocus = getPreviousWeek(parts);\n            break;\n          case 'ArrowRight':\n            ev.preventDefault();\n            partsToFocus = getNextDay(parts);\n            break;\n          case 'ArrowLeft':\n            ev.preventDefault();\n            partsToFocus = getPreviousDay(parts);\n            break;\n          case 'Home':\n            ev.preventDefault();\n            partsToFocus = getStartOfWeek(parts);\n            break;\n          case 'End':\n            ev.preventDefault();\n            partsToFocus = getEndOfWeek(parts);\n            break;\n          case 'PageUp':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getPreviousYear(parts) : getPreviousMonth(parts);\n            break;\n          case 'PageDown':\n            ev.preventDefault();\n            partsToFocus = ev.shiftKey ? getNextYear(parts) : getNextMonth(parts);\n            break;\n          /**\n           * Do not preventDefault here\n           * as we do not want to override other\n           * browser defaults such as pressing Enter/Space\n           * to select a day.\n           */\n          default:\n            return;\n        }\n        /**\n         * If the day we want to move focus to is\n         * disabled, do not do anything.\n         */\n        if (isDayDisabled(partsToFocus, this.minParts, this.maxParts)) {\n          return;\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), partsToFocus));\n        /**\n         * Give view a chance to re-render\n         * then move focus to the new working day\n         */\n        requestAnimationFrame(() => this.focusWorkingDay(currentMonth));\n      });\n    };\n    this.focusWorkingDay = currentMonth => {\n      /**\n       * Get the number of padding days so\n       * we know how much to offset our next selector by\n       * to grab the correct calendar-day element.\n       */\n      const padding = currentMonth.querySelectorAll('.calendar-day-padding');\n      const {\n        day\n      } = this.workingParts;\n      if (day === null) {\n        return;\n      }\n      /**\n       * Get the calendar day element\n       * and focus it.\n       */\n      const dayEl = currentMonth.querySelector(`.calendar-day-wrapper:nth-of-type(${padding.length + day}) .calendar-day`);\n      if (dayEl) {\n        dayEl.focus();\n      }\n    };\n    this.processMinParts = () => {\n      const {\n        min,\n        defaultParts\n      } = this;\n      if (min === undefined) {\n        this.minParts = undefined;\n        return;\n      }\n      this.minParts = parseMinParts(min, defaultParts);\n    };\n    this.processMaxParts = () => {\n      const {\n        max,\n        defaultParts\n      } = this;\n      if (max === undefined) {\n        this.maxParts = undefined;\n        return;\n      }\n      this.maxParts = parseMaxParts(max, defaultParts);\n    };\n    this.initializeCalendarListener = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      /**\n       * For performance reasons, we only render 3\n       * months at a time: The current month, the previous\n       * month, and the next month. We have a scroll listener\n       * on the calendar body to append/prepend new months.\n       *\n       * We can do this because Stencil is smart enough to not\n       * re-create the .calendar-month containers, but rather\n       * update the content within those containers.\n       *\n       * As an added bonus, WebKit has some troubles with\n       * scroll-snap-stop: always, so not rendering all of\n       * the months in a row allows us to mostly sidestep\n       * that issue.\n       */\n      const months = calendarBodyRef.querySelectorAll('.calendar-month');\n      const startMonth = months[0];\n      const workingMonth = months[1];\n      const endMonth = months[2];\n      const mode = getIonMode(this);\n      const needsiOSRubberBandFix = mode === 'ios' && typeof navigator !== 'undefined' && navigator.maxTouchPoints > 1;\n      /**\n       * Before setting up the scroll listener,\n       * scroll the middle month into view.\n       * scrollIntoView() will scroll entire page\n       * if element is not in viewport. Use scrollLeft instead.\n       */\n      writeTask(() => {\n        calendarBodyRef.scrollLeft = startMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n        const getChangedMonth = parts => {\n          const box = calendarBodyRef.getBoundingClientRect();\n          /**\n           * If the current scroll position is all the way to the left\n           * then we have scrolled to the previous month.\n           * Otherwise, assume that we have scrolled to the next\n           * month. We have a tolerance of 2px to account for\n           * sub pixel rendering.\n           *\n           * Check below the next line ensures that we did not\n           * swipe and abort (i.e. we swiped but we are still on the current month).\n           */\n          const month = calendarBodyRef.scrollLeft <= 2 ? startMonth : endMonth;\n          /**\n           * The edge of the month must be lined up with\n           * the edge of the calendar body in order for\n           * the component to update. Otherwise, it\n           * may be the case that the user has paused their\n           * swipe or the browser has not finished snapping yet.\n           * Rather than check if the x values are equal,\n           * we give it a tolerance of 2px to account for\n           * sub pixel rendering.\n           */\n          const monthBox = month.getBoundingClientRect();\n          if (Math.abs(monthBox.x - box.x) > 2) return;\n          /**\n           * If we're force-rendering a month, assume we've\n           * scrolled to that and return it.\n           *\n           * If forceRenderDate is ever used in a context where the\n           * forced month is not immediately auto-scrolled to, this\n           * should be updated to also check whether `month` has the\n           * same month and year as the forced date.\n           */\n          const {\n            forceRenderDate\n          } = this;\n          if (forceRenderDate !== undefined) {\n            return {\n              month: forceRenderDate.month,\n              year: forceRenderDate.year,\n              day: forceRenderDate.day\n            };\n          }\n          /**\n           * From here, we can determine if the start\n           * month or the end month was scrolled into view.\n           * If no month was changed, then we can return from\n           * the scroll callback early.\n           */\n          if (month === startMonth) {\n            return getPreviousMonth(parts);\n          } else if (month === endMonth) {\n            return getNextMonth(parts);\n          } else {\n            return;\n          }\n        };\n        const updateActiveMonth = () => {\n          if (needsiOSRubberBandFix) {\n            calendarBodyRef.style.removeProperty('pointer-events');\n            appliediOSRubberBandFix = false;\n          }\n          /**\n           * If the month did not change\n           * then we can return early.\n           */\n          const newDate = getChangedMonth(this.workingParts);\n          if (!newDate) return;\n          const {\n            month,\n            day,\n            year\n          } = newDate;\n          if (isMonthDisabled({\n            month,\n            year,\n            day: null\n          }, {\n            minParts: Object.assign(Object.assign({}, this.minParts), {\n              day: null\n            }),\n            maxParts: Object.assign(Object.assign({}, this.maxParts), {\n              day: null\n            })\n          })) {\n            return;\n          }\n          /**\n           * Prevent scrolling for other browsers\n           * to give the DOM time to update and the container\n           * time to properly snap.\n           */\n          calendarBodyRef.style.setProperty('overflow', 'hidden');\n          /**\n           * Use a writeTask here to ensure\n           * that the state is updated and the\n           * correct month is scrolled into view\n           * in the same frame. This is not\n           * typically a problem on newer devices\n           * but older/slower device may have a flicker\n           * if we did not do this.\n           */\n          writeTask(() => {\n            this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), {\n              month,\n              day: day,\n              year\n            }));\n            calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n            calendarBodyRef.style.removeProperty('overflow');\n            if (this.resolveForceDateScrolling) {\n              this.resolveForceDateScrolling();\n            }\n          });\n        };\n        /**\n         * When the container finishes scrolling we\n         * need to update the DOM with the selected month.\n         */\n        let scrollTimeout;\n        /**\n         * We do not want to attempt to set pointer-events\n         * multiple times within a single swipe gesture as\n         * that adds unnecessary work to the main thread.\n         */\n        let appliediOSRubberBandFix = false;\n        const scrollCallback = () => {\n          if (scrollTimeout) {\n            clearTimeout(scrollTimeout);\n          }\n          /**\n           * On iOS it is possible to quickly rubber band\n           * the scroll area before the scroll timeout has fired.\n           * This results in users reaching the end of the scrollable\n           * container before the DOM has updated.\n           * By setting `pointer-events: none` we can ensure that\n           * subsequent swipes do not happen while the container\n           * is snapping.\n           */\n          if (!appliediOSRubberBandFix && needsiOSRubberBandFix) {\n            calendarBodyRef.style.setProperty('pointer-events', 'none');\n            appliediOSRubberBandFix = true;\n          }\n          // Wait ~3 frames\n          scrollTimeout = setTimeout(updateActiveMonth, 50);\n        };\n        calendarBodyRef.addEventListener('scroll', scrollCallback);\n        this.destroyCalendarListener = () => {\n          calendarBodyRef.removeEventListener('scroll', scrollCallback);\n        };\n      });\n    };\n    /**\n     * Clean up all listeners except for the overlay\n     * listener. This is so that we can re-create the listeners\n     * if the datetime has been hidden/presented by a modal or popover.\n     */\n    this.destroyInteractionListeners = () => {\n      const {\n        destroyCalendarListener,\n        destroyKeyboardMO\n      } = this;\n      if (destroyCalendarListener !== undefined) {\n        destroyCalendarListener();\n      }\n      if (destroyKeyboardMO !== undefined) {\n        destroyKeyboardMO();\n      }\n    };\n    this.processValue = value => {\n      const hasValue = value !== null && value !== undefined && (!Array.isArray(value) || value.length > 0);\n      const valueToProcess = hasValue ? parseDate(value) : this.defaultParts;\n      const {\n        minParts,\n        maxParts,\n        workingParts,\n        el\n      } = this;\n      this.warnIfIncorrectValueUsage();\n      /**\n       * Return early if the value wasn't parsed correctly, such as\n       * if an improperly formatted date string was provided.\n       */\n      if (!valueToProcess) {\n        return;\n      }\n      /**\n       * Datetime should only warn of out of bounds values\n       * if set by the user. If the `value` is undefined,\n       * we will default to today's date which may be out\n       * of bounds. In this case, the warning makes it look\n       * like the developer did something wrong which is\n       * not true.\n       */\n      if (hasValue) {\n        warnIfValueOutOfBounds(valueToProcess, minParts, maxParts);\n      }\n      /**\n       * If there are multiple values, pick an arbitrary one to clamp to. This way,\n       * if the values are across months, we always show at least one of them. Note\n       * that the values don't necessarily have to be in order.\n       */\n      const singleValue = Array.isArray(valueToProcess) ? valueToProcess[0] : valueToProcess;\n      const targetValue = clampDate(singleValue, minParts, maxParts);\n      const {\n        month,\n        day,\n        year,\n        hour,\n        minute\n      } = targetValue;\n      const ampm = parseAmPm(hour);\n      /**\n       * Since `activeParts` indicates a value that\n       * been explicitly selected either by the\n       * user or the app, only update `activeParts`\n       * if the `value` property is set.\n       */\n      if (hasValue) {\n        if (Array.isArray(valueToProcess)) {\n          this.activeParts = [...valueToProcess];\n        } else {\n          this.activeParts = {\n            month,\n            day,\n            year,\n            hour,\n            minute,\n            ampm\n          };\n        }\n      } else {\n        /**\n         * Reset the active parts if the value is not set.\n         * This will clear the selected calendar day when\n         * performing a clear action or using the reset() method.\n         */\n        this.activeParts = [];\n      }\n      /**\n       * Only animate if:\n       * 1. We're using grid style (wheel style pickers should just jump to new value)\n       * 2. The month and/or year actually changed, and both are defined (otherwise there's nothing to animate to)\n       * 3. The calendar body is visible (prevents animation when in collapsed datetime-button, for example)\n       * 4. The month/year picker is not open (since you wouldn't see the animation anyway)\n       */\n      const didChangeMonth = month !== undefined && month !== workingParts.month || year !== undefined && year !== workingParts.year;\n      const bodyIsVisible = el.classList.contains('datetime-ready');\n      const {\n        isGridStyle,\n        showMonthAndYear\n      } = this;\n      let areAllSelectedDatesInSameMonth = true;\n      if (Array.isArray(valueToProcess)) {\n        const firstMonth = valueToProcess[0].month;\n        for (const date of valueToProcess) {\n          if (date.month !== firstMonth) {\n            areAllSelectedDatesInSameMonth = false;\n            break;\n          }\n        }\n      }\n      /**\n       * If there is more than one date selected\n       * and the dates aren't all in the same month,\n       * then we should neither animate to the date\n       * nor update the working parts because we do\n       * not know which date the user wants to view.\n       */\n      if (areAllSelectedDatesInSameMonth) {\n        if (isGridStyle && didChangeMonth && bodyIsVisible && !showMonthAndYear) {\n          this.animateToDate(targetValue);\n        } else {\n          /**\n           * We only need to do this if we didn't just animate to a new month,\n           * since that calls prevMonth/nextMonth which calls setWorkingParts for us.\n           */\n          this.setWorkingParts({\n            month,\n            day,\n            year,\n            hour,\n            minute,\n            ampm\n          });\n        }\n      }\n    };\n    this.animateToDate = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator(function* (targetValue) {\n        const {\n          workingParts\n        } = _this;\n        /**\n         * Tell other render functions that we need to force the\n         * target month to appear in place of the actual next/prev month.\n         * Because this is a State variable, a rerender will be triggered\n         * automatically, updating the rendered months.\n         */\n        _this.forceRenderDate = targetValue;\n        /**\n         * Flag that we've started scrolling to the forced date.\n         * The resolve function will be called by the datetime's\n         * scroll listener when it's done updating everything.\n         * This is a replacement for making prev/nextMonth async,\n         * since the logic we're waiting on is in a listener.\n         */\n        const forceDateScrollingPromise = new Promise(resolve => {\n          _this.resolveForceDateScrolling = resolve;\n        });\n        /**\n         * Animate smoothly to the forced month. This will also update\n         * workingParts and correct the surrounding months for us.\n         */\n        const targetMonthIsBefore = isBefore(targetValue, workingParts);\n        targetMonthIsBefore ? _this.prevMonth() : _this.nextMonth();\n        yield forceDateScrollingPromise;\n        _this.resolveForceDateScrolling = undefined;\n        _this.forceRenderDate = undefined;\n      });\n      return function (_x) {\n        return _ref.apply(this, arguments);\n      };\n    }();\n    this.onFocus = () => {\n      this.ionFocus.emit();\n    };\n    this.onBlur = () => {\n      this.ionBlur.emit();\n    };\n    this.hasValue = () => {\n      return this.value != null;\n    };\n    this.nextMonth = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const nextMonth = calendarBodyRef.querySelector('.calendar-month:last-of-type');\n      if (!nextMonth) {\n        return;\n      }\n      const left = nextMonth.offsetWidth * 2;\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: left * (isRTL(this.el) ? -1 : 1),\n        behavior: 'smooth'\n      });\n    };\n    this.prevMonth = () => {\n      const calendarBodyRef = this.calendarBodyRef;\n      if (!calendarBodyRef) {\n        return;\n      }\n      const prevMonth = calendarBodyRef.querySelector('.calendar-month:first-of-type');\n      if (!prevMonth) {\n        return;\n      }\n      calendarBodyRef.scrollTo({\n        top: 0,\n        left: 0,\n        behavior: 'smooth'\n      });\n    };\n    this.toggleMonthAndYearView = () => {\n      this.showMonthAndYear = !this.showMonthAndYear;\n    };\n    this.showMonthAndYear = false;\n    this.activeParts = [];\n    this.workingParts = {\n      month: 5,\n      day: 28,\n      year: 2021,\n      hour: 13,\n      minute: 52,\n      ampm: 'pm'\n    };\n    this.isTimePopoverOpen = false;\n    this.forceRenderDate = undefined;\n    this.color = 'primary';\n    this.name = this.inputId;\n    this.disabled = false;\n    this.formatOptions = undefined;\n    this.readonly = false;\n    this.isDateEnabled = undefined;\n    this.min = undefined;\n    this.max = undefined;\n    this.presentation = 'date-time';\n    this.cancelText = 'Cancel';\n    this.doneText = 'Done';\n    this.clearText = 'Clear';\n    this.yearValues = undefined;\n    this.monthValues = undefined;\n    this.dayValues = undefined;\n    this.hourValues = undefined;\n    this.minuteValues = undefined;\n    this.locale = 'default';\n    this.firstDayOfWeek = 0;\n    this.titleSelectedDatesFormatter = undefined;\n    this.multiple = false;\n    this.highlightedDates = undefined;\n    this.value = undefined;\n    this.showDefaultTitle = false;\n    this.showDefaultButtons = false;\n    this.showClearButton = false;\n    this.showDefaultTimeLabel = true;\n    this.hourCycle = undefined;\n    this.size = 'fixed';\n    this.preferWheel = false;\n  }\n  formatOptionsChanged() {\n    const {\n      el,\n      formatOptions,\n      presentation\n    } = this;\n    checkForPresentationFormatMismatch(el, presentation, formatOptions);\n    warnIfTimeZoneProvided(el, formatOptions);\n  }\n  disabledChanged() {\n    this.emitStyle();\n  }\n  minChanged() {\n    this.processMinParts();\n  }\n  maxChanged() {\n    this.processMaxParts();\n  }\n  presentationChanged() {\n    const {\n      el,\n      formatOptions,\n      presentation\n    } = this;\n    checkForPresentationFormatMismatch(el, presentation, formatOptions);\n  }\n  get isGridStyle() {\n    const {\n      presentation,\n      preferWheel\n    } = this;\n    const hasDatePresentation = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    return hasDatePresentation && !preferWheel;\n  }\n  yearValuesChanged() {\n    this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n  }\n  monthValuesChanged() {\n    this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n  }\n  dayValuesChanged() {\n    this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n  }\n  hourValuesChanged() {\n    this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n  }\n  minuteValuesChanged() {\n    this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n  }\n  /**\n   * Update the datetime value when the value changes\n   */\n  valueChanged() {\n    var _this2 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        value\n      } = _this2;\n      if (_this2.hasValue()) {\n        _this2.processValue(value);\n      }\n      _this2.emitStyle();\n      _this2.ionValueChange.emit({\n        value\n      });\n    })();\n  }\n  /**\n   * Confirms the selected datetime value, updates the\n   * `value` property, and optionally closes the popover\n   * or modal that the datetime was presented in.\n   */\n  confirm(closeOverlay = false) {\n    var _this3 = this;\n    return _asyncToGenerator(function* () {\n      const {\n        isCalendarPicker,\n        activeParts,\n        preferWheel,\n        workingParts\n      } = _this3;\n      /**\n       * We only update the value if the presentation is not a calendar picker.\n       */\n      if (activeParts !== undefined || !isCalendarPicker) {\n        const activePartsIsArray = Array.isArray(activeParts);\n        if (activePartsIsArray && activeParts.length === 0) {\n          if (preferWheel) {\n            /**\n             * If the datetime is using a wheel picker, but the\n             * active parts are empty, then the user has confirmed the\n             * initial value (working parts) presented to them.\n             */\n            _this3.setValue(convertDataToISO(workingParts));\n          } else {\n            _this3.setValue(undefined);\n          }\n        } else {\n          _this3.setValue(convertDataToISO(activeParts));\n        }\n      }\n      if (closeOverlay) {\n        _this3.closeParentOverlay();\n      }\n    })();\n  }\n  /**\n   * Resets the internal state of the datetime but does not update the value.\n   * Passing a valid ISO-8601 string will reset the state of the component to the provided date.\n   * If no value is provided, the internal state will be reset to the clamped value of the min, max and today.\n   */\n  reset(startDate) {\n    var _this4 = this;\n    return _asyncToGenerator(function* () {\n      _this4.processValue(startDate);\n    })();\n  }\n  /**\n   * Emits the ionCancel event and\n   * optionally closes the popover\n   * or modal that the datetime was\n   * presented in.\n   */\n  cancel(closeOverlay = false) {\n    var _this5 = this;\n    return _asyncToGenerator(function* () {\n      _this5.ionCancel.emit();\n      if (closeOverlay) {\n        _this5.closeParentOverlay();\n      }\n    })();\n  }\n  get isCalendarPicker() {\n    const {\n      presentation\n    } = this;\n    return presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n  }\n  connectedCallback() {\n    this.clearFocusVisible = startFocusVisible(this.el).destroy;\n  }\n  disconnectedCallback() {\n    if (this.clearFocusVisible) {\n      this.clearFocusVisible();\n      this.clearFocusVisible = undefined;\n    }\n  }\n  initializeListeners() {\n    this.initializeCalendarListener();\n    this.initializeKeyboardListeners();\n  }\n  componentDidLoad() {\n    const {\n      el,\n      intersectionTrackerRef\n    } = this;\n    /**\n     * If a scrollable element is hidden using `display: none`,\n     * it will not have a scroll height meaning we cannot scroll elements\n     * into view. As a result, we will need to wait for the datetime to become\n     * visible if used inside of a modal or a popover otherwise the scrollable\n     * areas will not have the correct values snapped into place.\n     */\n    const visibleCallback = entries => {\n      const ev = entries[0];\n      if (!ev.isIntersecting) {\n        return;\n      }\n      this.initializeListeners();\n      /**\n       * TODO FW-2793: Datetime needs a frame to ensure that it\n       * can properly scroll contents into view. As a result\n       * we hide the scrollable content until after that frame\n       * so users do not see the content quickly shifting. The downside\n       * is that the content will pop into view a frame after. Maybe there\n       * is a better way to handle this?\n       */\n      writeTask(() => {\n        this.el.classList.add('datetime-ready');\n      });\n    };\n    const visibleIO = new IntersectionObserver(visibleCallback, {\n      threshold: 0.01,\n      root: el\n    });\n    /**\n     * Use raf to avoid a race condition between the component loading and\n     * its display animation starting (such as when shown in a modal). This\n     * could cause the datetime to start at a visibility of 0, erroneously\n     * triggering the `hiddenIO` observer below.\n     */\n    raf(() => visibleIO === null || visibleIO === void 0 ? void 0 : visibleIO.observe(intersectionTrackerRef));\n    /**\n     * We need to clean up listeners when the datetime is hidden\n     * in a popover/modal so that we can properly scroll containers\n     * back into view if they are re-presented. When the datetime is hidden\n     * the scroll areas have scroll widths/heights of 0px, so any snapping\n     * we did originally has been lost.\n     */\n    const hiddenCallback = entries => {\n      const ev = entries[0];\n      if (ev.isIntersecting) {\n        return;\n      }\n      this.destroyInteractionListeners();\n      /**\n       * When datetime is hidden, we need to make sure that\n       * the month/year picker is closed. Otherwise,\n       * it will be open when the datetime re-appears\n       * and the scroll area of the calendar grid will be 0.\n       * As a result, the wrong month will be shown.\n       */\n      this.showMonthAndYear = false;\n      writeTask(() => {\n        this.el.classList.remove('datetime-ready');\n      });\n    };\n    const hiddenIO = new IntersectionObserver(hiddenCallback, {\n      threshold: 0,\n      root: el\n    });\n    raf(() => hiddenIO === null || hiddenIO === void 0 ? void 0 : hiddenIO.observe(intersectionTrackerRef));\n    /**\n     * Datetime uses Ionic components that emit\n     * ionFocus and ionBlur. These events are\n     * composed meaning they will cross\n     * the shadow dom boundary. We need to\n     * stop propagation on these events otherwise\n     * developers will see 2 ionFocus or 2 ionBlur\n     * events at a time.\n     */\n    const root = getElementRoot(this.el);\n    root.addEventListener('ionFocus', ev => ev.stopPropagation());\n    root.addEventListener('ionBlur', ev => ev.stopPropagation());\n  }\n  /**\n   * When the presentation is changed, all calendar content is recreated,\n   * so we need to re-init behavior with the new elements.\n   */\n  componentDidRender() {\n    const {\n      presentation,\n      prevPresentation,\n      calendarBodyRef,\n      minParts,\n      preferWheel,\n      forceRenderDate\n    } = this;\n    /**\n     * TODO(FW-2165)\n     * Remove this when https://bugs.webkit.org/show_bug.cgi?id=235960 is fixed.\n     * When using `min`, we add `scroll-snap-align: none`\n     * to the disabled month so that users cannot scroll to it.\n     * This triggers a bug in WebKit where the scroll position is reset.\n     * Since the month change logic is handled by a scroll listener,\n     * this causes the month to change leading to `scroll-snap-align`\n     * changing again, thus changing the scroll position again and causing\n     * an infinite loop.\n     * This issue only applies to the calendar grid, so we can disable\n     * it if the calendar grid is not being used.\n     */\n    const hasCalendarGrid = !preferWheel && ['date-time', 'time-date', 'date'].includes(presentation);\n    if (minParts !== undefined && hasCalendarGrid && calendarBodyRef) {\n      const workingMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(1)');\n      /**\n       * We need to make sure the datetime is not in the process\n       * of scrolling to a new datetime value if the value\n       * is updated programmatically.\n       * Otherwise, the datetime will appear to not scroll at all because\n       * we are resetting the scroll position to the center of the view.\n       * Prior to the datetime's value being updated programmatically,\n       * the calendarBodyRef is scrolled such that the middle month is centered\n       * in the view. The below code updates the scroll position so the middle\n       * month is also centered in the view. Since the scroll position did not change,\n       * the scroll callback in this file does not fire,\n       * and the resolveForceDateScrolling promise never resolves.\n       */\n      if (workingMonth && forceRenderDate === undefined) {\n        calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n      }\n    }\n    if (prevPresentation === null) {\n      this.prevPresentation = presentation;\n      return;\n    }\n    if (presentation === prevPresentation) {\n      return;\n    }\n    this.prevPresentation = presentation;\n    this.destroyInteractionListeners();\n    this.initializeListeners();\n    /**\n     * The month/year picker from the date interface\n     * should be closed as it is not available in non-date\n     * interfaces.\n     */\n    this.showMonthAndYear = false;\n    raf(() => {\n      this.ionRender.emit();\n    });\n  }\n  componentWillLoad() {\n    const {\n      el,\n      formatOptions,\n      highlightedDates,\n      multiple,\n      presentation,\n      preferWheel\n    } = this;\n    if (multiple) {\n      if (presentation !== 'date') {\n        printIonWarning('Multiple date selection is only supported for presentation=\"date\".', el);\n      }\n      if (preferWheel) {\n        printIonWarning('Multiple date selection is not supported with preferWheel=\"true\".', el);\n      }\n    }\n    if (highlightedDates !== undefined) {\n      if (presentation !== 'date' && presentation !== 'date-time' && presentation !== 'time-date') {\n        printIonWarning('The highlightedDates property is only supported with the date, date-time, and time-date presentations.', el);\n      }\n      if (preferWheel) {\n        printIonWarning('The highlightedDates property is not supported with preferWheel=\"true\".', el);\n      }\n    }\n    if (formatOptions) {\n      checkForPresentationFormatMismatch(el, presentation, formatOptions);\n      warnIfTimeZoneProvided(el, formatOptions);\n    }\n    const hourValues = this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n    const minuteValues = this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n    const monthValues = this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n    const yearValues = this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n    const dayValues = this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n    const todayParts = this.todayParts = parseDate(getToday());\n    this.processMinParts();\n    this.processMaxParts();\n    this.defaultParts = getClosestValidDate({\n      refParts: todayParts,\n      monthValues,\n      dayValues,\n      yearValues,\n      hourValues,\n      minuteValues,\n      minParts: this.minParts,\n      maxParts: this.maxParts\n    });\n    this.processValue(this.value);\n    this.emitStyle();\n  }\n  emitStyle() {\n    this.ionStyle.emit({\n      interactive: true,\n      datetime: true,\n      'interactive-disabled': this.disabled\n    });\n  }\n  /**\n   * Universal render methods\n   * These are pieces of datetime that\n   * are rendered independently of presentation.\n   */\n  renderFooter() {\n    const {\n      disabled,\n      readonly,\n      showDefaultButtons,\n      showClearButton\n    } = this;\n    /**\n     * The cancel, clear, and confirm buttons\n     * should not be interactive if the datetime\n     * is disabled or readonly.\n     */\n    const isButtonDisabled = disabled || readonly;\n    const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n    if (!hasSlottedButtons && !showDefaultButtons && !showClearButton) {\n      return;\n    }\n    const clearButtonClick = () => {\n      this.reset();\n      this.setValue(undefined);\n    };\n    /**\n     * By default we render two buttons:\n     * Cancel - Dismisses the datetime and\n     * does not update the `value` prop.\n     * OK - Dismisses the datetime and\n     * updates the `value` prop.\n     */\n    return h(\"div\", {\n      class: \"datetime-footer\"\n    }, h(\"div\", {\n      class: \"datetime-buttons\"\n    }, h(\"div\", {\n      class: {\n        ['datetime-action-buttons']: true,\n        ['has-clear-button']: this.showClearButton\n      }\n    }, h(\"slot\", {\n      name: \"buttons\"\n    }, h(\"ion-buttons\", null, showDefaultButtons && h(\"ion-button\", {\n      id: \"cancel-button\",\n      color: this.color,\n      onClick: () => this.cancel(true),\n      disabled: isButtonDisabled\n    }, this.cancelText), h(\"div\", {\n      class: \"datetime-action-buttons-container\"\n    }, showClearButton && h(\"ion-button\", {\n      id: \"clear-button\",\n      color: this.color,\n      onClick: () => clearButtonClick(),\n      disabled: isButtonDisabled\n    }, this.clearText), showDefaultButtons && h(\"ion-button\", {\n      id: \"confirm-button\",\n      color: this.color,\n      onClick: () => this.confirm(true),\n      disabled: isButtonDisabled\n    }, this.doneText)))))));\n  }\n  /**\n   * Wheel picker render methods\n   */\n  renderWheelPicker(forcePresentation = this.presentation) {\n    /**\n     * If presentation=\"time-date\" we switch the\n     * order of the render array here instead of\n     * manually reordering each date/time picker\n     * column with CSS. This allows for additional\n     * flexibility if we need to render subsets\n     * of the date/time data or do additional ordering\n     * within the child render functions.\n     */\n    const renderArray = forcePresentation === 'time-date' ? [this.renderTimePickerColumns(forcePresentation), this.renderDatePickerColumns(forcePresentation)] : [this.renderDatePickerColumns(forcePresentation), this.renderTimePickerColumns(forcePresentation)];\n    return h(\"ion-picker-internal\", null, renderArray);\n  }\n  renderDatePickerColumns(forcePresentation) {\n    return forcePresentation === 'date-time' || forcePresentation === 'time-date' ? this.renderCombinedDatePickerColumn() : this.renderIndividualDatePickerColumns(forcePresentation);\n  }\n  renderCombinedDatePickerColumn() {\n    const {\n      defaultParts,\n      disabled,\n      workingParts,\n      locale,\n      minParts,\n      maxParts,\n      todayParts,\n      isDateEnabled\n    } = this;\n    const activePart = this.getActivePartsWithFallback();\n    /**\n     * By default, generate a range of 3 months:\n     * Previous month, current month, and next month\n     */\n    const monthsToRender = generateMonths(workingParts);\n    const lastMonth = monthsToRender[monthsToRender.length - 1];\n    /**\n     * Ensure that users can select the entire window of dates.\n     */\n    monthsToRender[0].day = 1;\n    lastMonth.day = getNumDaysInMonth(lastMonth.month, lastMonth.year);\n    /**\n     * Narrow the dates rendered based on min/max dates (if any).\n     * The `min` date is used if the min is after the generated min month.\n     * The `max` date is used if the max is before the generated max month.\n     * This ensures that the sliding window always stays at 3 months\n     * but still allows future dates to be lazily rendered based on any min/max\n     * constraints.\n     */\n    const min = minParts !== undefined && isAfter(minParts, monthsToRender[0]) ? minParts : monthsToRender[0];\n    const max = maxParts !== undefined && isBefore(maxParts, lastMonth) ? maxParts : lastMonth;\n    const result = getCombinedDateColumnData(locale, todayParts, min, max, this.parsedDayValues, this.parsedMonthValues);\n    let items = result.items;\n    const parts = result.parts;\n    if (isDateEnabled) {\n      items = items.map((itemObject, index) => {\n        const referenceParts = parts[index];\n        let disabled;\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          disabled = !isDateEnabled(convertDataToISO(referenceParts));\n        } catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n        }\n        return Object.assign(Object.assign({}, itemObject), {\n          disabled\n        });\n      });\n    }\n    /**\n     * If we have selected a day already, then default the column\n     * to that value. Otherwise, set it to the default date.\n     */\n    const todayString = workingParts.day !== null ? `${workingParts.year}-${workingParts.month}-${workingParts.day}` : `${defaultParts.year}-${defaultParts.month}-${defaultParts.day}`;\n    return h(\"ion-picker-column-internal\", {\n      class: \"date-column\",\n      color: this.color,\n      disabled: disabled,\n      items: items,\n      value: todayString,\n      onIonChange: ev => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        const {\n          value\n        } = ev.detail;\n        const findPart = parts.find(({\n          month,\n          day,\n          year\n        }) => value === `${year}-${month}-${day}`);\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), findPart));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), findPart));\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      }\n    });\n  }\n  renderIndividualDatePickerColumns(forcePresentation) {\n    const {\n      workingParts,\n      isDateEnabled\n    } = this;\n    const shouldRenderMonths = forcePresentation !== 'year' && forcePresentation !== 'time';\n    const months = shouldRenderMonths ? getMonthColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedMonthValues) : [];\n    const shouldRenderDays = forcePresentation === 'date';\n    let days = shouldRenderDays ? getDayColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedDayValues) : [];\n    if (isDateEnabled) {\n      days = days.map(dayObject => {\n        const {\n          value\n        } = dayObject;\n        const valueNum = typeof value === 'string' ? parseInt(value) : value;\n        const referenceParts = {\n          month: workingParts.month,\n          day: valueNum,\n          year: workingParts.year\n        };\n        let disabled;\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          disabled = !isDateEnabled(convertDataToISO(referenceParts));\n        } catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n        }\n        return Object.assign(Object.assign({}, dayObject), {\n          disabled\n        });\n      });\n    }\n    const shouldRenderYears = forcePresentation !== 'month' && forcePresentation !== 'time';\n    const years = shouldRenderYears ? getYearColumnData(this.locale, this.defaultParts, this.minParts, this.maxParts, this.parsedYearValues) : [];\n    /**\n     * Certain locales show the day before the month.\n     */\n    const showMonthFirst = isMonthFirstLocale(this.locale, {\n      month: 'numeric',\n      day: 'numeric'\n    });\n    let renderArray = [];\n    if (showMonthFirst) {\n      renderArray = [this.renderMonthPickerColumn(months), this.renderDayPickerColumn(days), this.renderYearPickerColumn(years)];\n    } else {\n      renderArray = [this.renderDayPickerColumn(days), this.renderMonthPickerColumn(months), this.renderYearPickerColumn(years)];\n    }\n    return renderArray;\n  }\n  renderDayPickerColumn(days) {\n    var _a;\n    if (days.length === 0) {\n      return [];\n    }\n    const {\n      disabled,\n      workingParts\n    } = this;\n    const activePart = this.getActivePartsWithFallback();\n    return h(\"ion-picker-column-internal\", {\n      class: \"day-column\",\n      color: this.color,\n      disabled: disabled,\n      items: days,\n      value: (_a = workingParts.day !== null ? workingParts.day : this.defaultParts.day) !== null && _a !== void 0 ? _a : undefined,\n      onIonChange: ev => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n          day: ev.detail.value\n        }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), {\n          day: ev.detail.value\n        }));\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      }\n    });\n  }\n  renderMonthPickerColumn(months) {\n    if (months.length === 0) {\n      return [];\n    }\n    const {\n      disabled,\n      workingParts\n    } = this;\n    const activePart = this.getActivePartsWithFallback();\n    return h(\"ion-picker-column-internal\", {\n      class: \"month-column\",\n      color: this.color,\n      disabled: disabled,\n      items: months,\n      value: workingParts.month,\n      onIonChange: ev => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n          month: ev.detail.value\n        }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), {\n          month: ev.detail.value\n        }));\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      }\n    });\n  }\n  renderYearPickerColumn(years) {\n    if (years.length === 0) {\n      return [];\n    }\n    const {\n      disabled,\n      workingParts\n    } = this;\n    const activePart = this.getActivePartsWithFallback();\n    return h(\"ion-picker-column-internal\", {\n      class: \"year-column\",\n      color: this.color,\n      disabled: disabled,\n      items: years,\n      value: workingParts.year,\n      onIonChange: ev => {\n        // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n        // Due to a Safari 14 issue we need to destroy\n        // the scroll listener before we update state\n        // and trigger a re-render.\n        if (this.destroyCalendarListener) {\n          this.destroyCalendarListener();\n        }\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n          year: ev.detail.value\n        }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), {\n          year: ev.detail.value\n        }));\n        // We can re-attach the scroll listener after\n        // the working parts have been updated.\n        this.initializeCalendarListener();\n        ev.stopPropagation();\n      }\n    });\n  }\n  renderTimePickerColumns(forcePresentation) {\n    if (['date', 'month', 'month-year', 'year'].includes(forcePresentation)) {\n      return [];\n    }\n    /**\n     * If a user has not selected a date,\n     * then we should show all times. If the\n     * user has selected a date (even if it has\n     * not been confirmed yet), we should apply\n     * the max and min restrictions so that the\n     * time picker shows values that are\n     * appropriate for the selected date.\n     */\n    const activePart = this.getActivePart();\n    const userHasSelectedDate = activePart !== undefined;\n    const {\n      hoursData,\n      minutesData,\n      dayPeriodData\n    } = getTimeColumnsData(this.locale, this.workingParts, this.hourCycle, userHasSelectedDate ? this.minParts : undefined, userHasSelectedDate ? this.maxParts : undefined, this.parsedHourValues, this.parsedMinuteValues);\n    return [this.renderHourPickerColumn(hoursData), this.renderMinutePickerColumn(minutesData), this.renderDayPeriodPickerColumn(dayPeriodData)];\n  }\n  renderHourPickerColumn(hoursData) {\n    const {\n      disabled,\n      workingParts\n    } = this;\n    if (hoursData.length === 0) return [];\n    const activePart = this.getActivePartsWithFallback();\n    return h(\"ion-picker-column-internal\", {\n      color: this.color,\n      disabled: disabled,\n      value: activePart.hour,\n      items: hoursData,\n      numericInput: true,\n      onIonChange: ev => {\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n          hour: ev.detail.value\n        }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), {\n          hour: ev.detail.value\n        }));\n        ev.stopPropagation();\n      }\n    });\n  }\n  renderMinutePickerColumn(minutesData) {\n    const {\n      disabled,\n      workingParts\n    } = this;\n    if (minutesData.length === 0) return [];\n    const activePart = this.getActivePartsWithFallback();\n    return h(\"ion-picker-column-internal\", {\n      color: this.color,\n      disabled: disabled,\n      value: activePart.minute,\n      items: minutesData,\n      numericInput: true,\n      onIonChange: ev => {\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n          minute: ev.detail.value\n        }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), {\n          minute: ev.detail.value\n        }));\n        ev.stopPropagation();\n      }\n    });\n  }\n  renderDayPeriodPickerColumn(dayPeriodData) {\n    const {\n      disabled,\n      workingParts\n    } = this;\n    if (dayPeriodData.length === 0) {\n      return [];\n    }\n    const activePart = this.getActivePartsWithFallback();\n    const isDayPeriodRTL = isLocaleDayPeriodRTL(this.locale);\n    return h(\"ion-picker-column-internal\", {\n      style: isDayPeriodRTL ? {\n        order: '-1'\n      } : {},\n      color: this.color,\n      disabled: disabled,\n      value: activePart.ampm,\n      items: dayPeriodData,\n      onIonChange: ev => {\n        const hour = calculateHourFromAMPM(workingParts, ev.detail.value);\n        this.setWorkingParts(Object.assign(Object.assign({}, workingParts), {\n          ampm: ev.detail.value,\n          hour\n        }));\n        this.setActiveParts(Object.assign(Object.assign({}, activePart), {\n          ampm: ev.detail.value,\n          hour\n        }));\n        ev.stopPropagation();\n      }\n    });\n  }\n  renderWheelView(forcePresentation) {\n    const {\n      locale\n    } = this;\n    const showMonthFirst = isMonthFirstLocale(locale);\n    const columnOrder = showMonthFirst ? 'month-first' : 'year-first';\n    return h(\"div\", {\n      class: {\n        [`wheel-order-${columnOrder}`]: true\n      }\n    }, this.renderWheelPicker(forcePresentation));\n  }\n  /**\n   * Grid Render Methods\n   */\n  renderCalendarHeader(mode) {\n    const {\n      disabled\n    } = this;\n    const expandedIcon = mode === 'ios' ? chevronDown : caretUpSharp;\n    const collapsedIcon = mode === 'ios' ? chevronForward : caretDownSharp;\n    const prevMonthDisabled = disabled || isPrevMonthDisabled(this.workingParts, this.minParts, this.maxParts);\n    const nextMonthDisabled = disabled || isNextMonthDisabled(this.workingParts, this.maxParts);\n    // don't use the inheritAttributes util because it removes dir from the host, and we still need that\n    const hostDir = this.el.getAttribute('dir') || undefined;\n    return h(\"div\", {\n      class: \"calendar-header\"\n    }, h(\"div\", {\n      class: \"calendar-action-buttons\"\n    }, h(\"div\", {\n      class: \"calendar-month-year\"\n    }, h(\"ion-item\", {\n      part: \"month-year-button\",\n      ref: el => this.monthYearToggleItemRef = el,\n      button: true,\n      \"aria-label\": \"Show year picker\",\n      detail: false,\n      lines: \"none\",\n      disabled: disabled,\n      onClick: () => {\n        var _a;\n        this.toggleMonthAndYearView();\n        /**\n         * TODO: FW-3547\n         *\n         * Currently there is not a way to set the aria-label on the inner button\n         * on the `ion-item` and have it be reactive to changes. This is a workaround\n         * until we either refactor `ion-item` to a button or Stencil adds a way to\n         * have reactive props for built-in properties, such as `aria-label`.\n         */\n        const {\n          monthYearToggleItemRef\n        } = this;\n        if (monthYearToggleItemRef) {\n          const btn = (_a = monthYearToggleItemRef.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('.item-native');\n          if (btn) {\n            const monthYearAriaLabel = this.showMonthAndYear ? 'Hide year picker' : 'Show year picker';\n            btn.setAttribute('aria-label', monthYearAriaLabel);\n          }\n        }\n      }\n    }, h(\"ion-label\", null, getMonthAndYear(this.locale, this.workingParts), h(\"ion-icon\", {\n      \"aria-hidden\": \"true\",\n      icon: this.showMonthAndYear ? expandedIcon : collapsedIcon,\n      lazy: false,\n      flipRtl: true\n    })))), h(\"div\", {\n      class: \"calendar-next-prev\"\n    }, h(\"ion-buttons\", null, h(\"ion-button\", {\n      \"aria-label\": \"Previous month\",\n      disabled: prevMonthDisabled,\n      onClick: () => this.prevMonth()\n    }, h(\"ion-icon\", {\n      dir: hostDir,\n      \"aria-hidden\": \"true\",\n      slot: \"icon-only\",\n      icon: chevronBack,\n      lazy: false,\n      flipRtl: true\n    })), h(\"ion-button\", {\n      \"aria-label\": \"Next month\",\n      disabled: nextMonthDisabled,\n      onClick: () => this.nextMonth()\n    }, h(\"ion-icon\", {\n      dir: hostDir,\n      \"aria-hidden\": \"true\",\n      slot: \"icon-only\",\n      icon: chevronForward,\n      lazy: false,\n      flipRtl: true\n    }))))), h(\"div\", {\n      class: \"calendar-days-of-week\",\n      \"aria-hidden\": \"true\"\n    }, getDaysOfWeek(this.locale, mode, this.firstDayOfWeek % 7).map(d => {\n      return h(\"div\", {\n        class: \"day-of-week\"\n      }, d);\n    })));\n  }\n  renderMonth(month, year) {\n    const {\n      disabled,\n      readonly\n    } = this;\n    const yearAllowed = this.parsedYearValues === undefined || this.parsedYearValues.includes(year);\n    const monthAllowed = this.parsedMonthValues === undefined || this.parsedMonthValues.includes(month);\n    const isCalMonthDisabled = !yearAllowed || !monthAllowed;\n    const isDatetimeDisabled = disabled || readonly;\n    const swipeDisabled = disabled || isMonthDisabled({\n      month,\n      year,\n      day: null\n    }, {\n      // The day is not used when checking if a month is disabled.\n      // Users should be able to access the min or max month, even if the\n      // min/max date is out of bounds (e.g. min is set to Feb 15, Feb should not be disabled).\n      minParts: Object.assign(Object.assign({}, this.minParts), {\n        day: null\n      }),\n      maxParts: Object.assign(Object.assign({}, this.maxParts), {\n        day: null\n      })\n    });\n    // The working month should never have swipe disabled.\n    // Otherwise the CSS scroll snap will not work and the user\n    // can free-scroll the calendar.\n    const isWorkingMonth = this.workingParts.month === month && this.workingParts.year === year;\n    const activePart = this.getActivePartsWithFallback();\n    return h(\"div\", {\n      \"aria-hidden\": !isWorkingMonth ? 'true' : null,\n      class: {\n        'calendar-month': true,\n        // Prevents scroll snap swipe gestures for months outside of the min/max bounds\n        'calendar-month-disabled': !isWorkingMonth && swipeDisabled\n      }\n    }, h(\"div\", {\n      class: \"calendar-month-grid\"\n    }, getDaysOfMonth(month, year, this.firstDayOfWeek % 7).map((dateObject, index) => {\n      const {\n        day,\n        dayOfWeek\n      } = dateObject;\n      const {\n        el,\n        highlightedDates,\n        isDateEnabled,\n        multiple\n      } = this;\n      const referenceParts = {\n        month,\n        day,\n        year\n      };\n      const isCalendarPadding = day === null;\n      const {\n        isActive,\n        isToday,\n        ariaLabel,\n        ariaSelected,\n        disabled: isDayDisabled,\n        text\n      } = getCalendarDayState(this.locale, referenceParts, this.activeParts, this.todayParts, this.minParts, this.maxParts, this.parsedDayValues);\n      const dateIsoString = convertDataToISO(referenceParts);\n      let isCalDayDisabled = isCalMonthDisabled || isDayDisabled;\n      if (!isCalDayDisabled && isDateEnabled !== undefined) {\n        try {\n          /**\n           * The `isDateEnabled` implementation is try-catch wrapped\n           * to prevent exceptions in the user's function from\n           * interrupting the calendar rendering.\n           */\n          isCalDayDisabled = !isDateEnabled(dateIsoString);\n        } catch (e) {\n          printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', el, e);\n        }\n      }\n      /**\n       * Some days are constrained through max & min or allowed dates\n       * and also disabled because the component is readonly or disabled.\n       * These need to be displayed differently.\n       */\n      const isCalDayConstrained = isCalDayDisabled && isDatetimeDisabled;\n      const isButtonDisabled = isCalDayDisabled || isDatetimeDisabled;\n      let dateStyle = undefined;\n      /**\n       * Custom highlight styles should not override the style for selected dates,\n       * nor apply to \"filler days\" at the start of the grid.\n       */\n      if (highlightedDates !== undefined && !isActive && day !== null) {\n        dateStyle = getHighlightStyles(highlightedDates, dateIsoString, el);\n      }\n      let dateParts = undefined;\n      // \"Filler days\" at the beginning of the grid should not get the calendar day\n      // CSS parts added to them\n      if (!isCalendarPadding) {\n        dateParts = `calendar-day${isActive ? ' active' : ''}${isToday ? ' today' : ''}${isCalDayDisabled ? ' disabled' : ''}`;\n      }\n      return h(\"div\", {\n        class: \"calendar-day-wrapper\"\n      }, h(\"button\", {\n        // We need to use !important for the inline styles here because\n        // otherwise the CSS shadow parts will override these styles.\n        // See https://github.com/WICG/webcomponents/issues/847\n        // Both the CSS shadow parts and highlightedDates styles are\n        // provided by the developer, but highlightedDates styles should\n        // always take priority.\n        ref: el => {\n          if (el) {\n            el.style.setProperty('color', `${dateStyle ? dateStyle.textColor : ''}`, 'important');\n            el.style.setProperty('background-color', `${dateStyle ? dateStyle.backgroundColor : ''}`, 'important');\n          }\n        },\n        tabindex: \"-1\",\n        \"data-day\": day,\n        \"data-month\": month,\n        \"data-year\": year,\n        \"data-index\": index,\n        \"data-day-of-week\": dayOfWeek,\n        disabled: isButtonDisabled,\n        class: {\n          'calendar-day-padding': isCalendarPadding,\n          'calendar-day': true,\n          'calendar-day-active': isActive,\n          'calendar-day-constrained': isCalDayConstrained,\n          'calendar-day-today': isToday\n        },\n        part: dateParts,\n        \"aria-hidden\": isCalendarPadding ? 'true' : null,\n        \"aria-selected\": ariaSelected,\n        \"aria-label\": ariaLabel,\n        onClick: () => {\n          if (isCalendarPadding) {\n            return;\n          }\n          this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), {\n            month,\n            day,\n            year\n          }));\n          // multiple only needs date info, so we can wipe out other fields like time\n          if (multiple) {\n            this.setActiveParts({\n              month,\n              day,\n              year\n            }, isActive);\n          } else {\n            this.setActiveParts(Object.assign(Object.assign({}, activePart), {\n              month,\n              day,\n              year\n            }));\n          }\n        }\n      }, text));\n    })));\n  }\n  renderCalendarBody() {\n    return h(\"div\", {\n      class: \"calendar-body ion-focusable\",\n      ref: el => this.calendarBodyRef = el,\n      tabindex: \"0\"\n    }, generateMonths(this.workingParts, this.forceRenderDate).map(({\n      month,\n      year\n    }) => {\n      return this.renderMonth(month, year);\n    }));\n  }\n  renderCalendar(mode) {\n    return h(\"div\", {\n      class: \"datetime-calendar\",\n      key: \"datetime-calendar\"\n    }, this.renderCalendarHeader(mode), this.renderCalendarBody());\n  }\n  renderTimeLabel() {\n    const hasSlottedTimeLabel = this.el.querySelector('[slot=\"time-label\"]') !== null;\n    if (!hasSlottedTimeLabel && !this.showDefaultTimeLabel) {\n      return;\n    }\n    return h(\"slot\", {\n      name: \"time-label\"\n    }, \"Time\");\n  }\n  renderTimeOverlay() {\n    var _this6 = this;\n    const {\n      disabled,\n      hourCycle,\n      isTimePopoverOpen,\n      locale,\n      formatOptions\n    } = this;\n    const computedHourCycle = getHourCycle(locale, hourCycle);\n    const activePart = this.getActivePartsWithFallback();\n    return [h(\"div\", {\n      class: \"time-header\"\n    }, this.renderTimeLabel()), h(\"button\", {\n      class: {\n        'time-body': true,\n        'time-body-active': isTimePopoverOpen\n      },\n      part: `time-button${isTimePopoverOpen ? ' active' : ''}`,\n      \"aria-expanded\": \"false\",\n      \"aria-haspopup\": \"true\",\n      disabled: disabled,\n      onClick: function () {\n        var _ref2 = _asyncToGenerator(function* (ev) {\n          const {\n            popoverRef\n          } = _this6;\n          if (popoverRef) {\n            _this6.isTimePopoverOpen = true;\n            popoverRef.present(new CustomEvent('ionShadowTarget', {\n              detail: {\n                ionShadowTarget: ev.target\n              }\n            }));\n            yield popoverRef.onWillDismiss();\n            _this6.isTimePopoverOpen = false;\n          }\n        });\n        return function onClick(_x2) {\n          return _ref2.apply(this, arguments);\n        };\n      }()\n    }, getLocalizedTime(locale, activePart, computedHourCycle, formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.time)), h(\"ion-popover\", {\n      alignment: \"center\",\n      translucent: true,\n      overlayIndex: 1,\n      arrow: false,\n      onWillPresent: ev => {\n        /**\n         * Intersection Observers do not consistently fire between Blink and Webkit\n         * when toggling the visibility of the popover and trying to scroll the picker\n         * column to the correct time value.\n         *\n         * This will correctly scroll the element position to the correct time value,\n         * before the popover is fully presented.\n         */\n        const cols = ev.target.querySelectorAll('ion-picker-column-internal');\n        // TODO (FW-615): Potentially remove this when intersection observers are fixed in picker column\n        cols.forEach(col => col.scrollActiveItemIntoView());\n      },\n      style: {\n        '--offset-y': '-10px',\n        '--min-width': 'fit-content'\n      },\n      // Allow native browser keyboard events to support up/down/home/end key\n      // navigation within the time picker.\n      keyboardEvents: true,\n      ref: el => this.popoverRef = el\n    }, this.renderWheelPicker('time'))];\n  }\n  getHeaderSelectedDateText() {\n    var _a;\n    const {\n      activeParts,\n      formatOptions,\n      multiple,\n      titleSelectedDatesFormatter\n    } = this;\n    const isArray = Array.isArray(activeParts);\n    let headerText;\n    if (multiple && isArray && activeParts.length !== 1) {\n      headerText = `${activeParts.length} days`; // default/fallback for multiple selection\n      if (titleSelectedDatesFormatter !== undefined) {\n        try {\n          headerText = titleSelectedDatesFormatter(convertDataToISO(activeParts));\n        } catch (e) {\n          printIonError('Exception in provided `titleSelectedDatesFormatter`: ', e);\n        }\n      }\n    } else {\n      // for exactly 1 day selected (multiple set or not), show a formatted version of that\n      headerText = getLocalizedDateTime(this.locale, this.getActivePartsWithFallback(), (_a = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.date) !== null && _a !== void 0 ? _a : {\n        weekday: 'short',\n        month: 'short',\n        day: 'numeric'\n      });\n    }\n    return headerText;\n  }\n  renderHeader(showExpandedHeader = true) {\n    const hasSlottedTitle = this.el.querySelector('[slot=\"title\"]') !== null;\n    if (!hasSlottedTitle && !this.showDefaultTitle) {\n      return;\n    }\n    return h(\"div\", {\n      class: \"datetime-header\"\n    }, h(\"div\", {\n      class: \"datetime-title\"\n    }, h(\"slot\", {\n      name: \"title\"\n    }, \"Select Date\")), showExpandedHeader && h(\"div\", {\n      class: \"datetime-selected-date\"\n    }, this.getHeaderSelectedDateText()));\n  }\n  /**\n   * Render time picker inside of datetime.\n   * Do not pass color prop to segment on\n   * iOS mode. MD segment has been customized and\n   * should take on the color prop, but iOS\n   * should just be the default segment.\n   */\n  renderTime() {\n    const {\n      presentation\n    } = this;\n    const timeOnlyPresentation = presentation === 'time';\n    return h(\"div\", {\n      class: \"datetime-time\"\n    }, timeOnlyPresentation ? this.renderWheelPicker() : this.renderTimeOverlay());\n  }\n  /**\n   * Renders the month/year picker that is\n   * displayed on the calendar grid.\n   * The .datetime-year class has additional\n   * styles that let us show/hide the\n   * picker when the user clicks on the\n   * toggle in the calendar header.\n   */\n  renderCalendarViewMonthYearPicker() {\n    return h(\"div\", {\n      class: \"datetime-year\"\n    }, this.renderWheelView('month-year'));\n  }\n  /**\n   * Render entry point\n   * All presentation types are rendered from here.\n   */\n  renderDatetime(mode) {\n    const {\n      presentation,\n      preferWheel\n    } = this;\n    /**\n     * Certain presentation types have separate grid and wheel displays.\n     * If preferWheel is true then we should show a wheel picker instead.\n     */\n    const hasWheelVariant = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    if (preferWheel && hasWheelVariant) {\n      return [this.renderHeader(false), this.renderWheelView(), this.renderFooter()];\n    }\n    switch (presentation) {\n      case 'date-time':\n        return [this.renderHeader(), this.renderCalendar(mode), this.renderCalendarViewMonthYearPicker(), this.renderTime(), this.renderFooter()];\n      case 'time-date':\n        return [this.renderHeader(), this.renderTime(), this.renderCalendar(mode), this.renderCalendarViewMonthYearPicker(), this.renderFooter()];\n      case 'time':\n        return [this.renderHeader(false), this.renderTime(), this.renderFooter()];\n      case 'month':\n      case 'month-year':\n      case 'year':\n        return [this.renderHeader(false), this.renderWheelView(), this.renderFooter()];\n      default:\n        return [this.renderHeader(), this.renderCalendar(mode), this.renderCalendarViewMonthYearPicker(), this.renderFooter()];\n    }\n  }\n  render() {\n    const {\n      name,\n      value,\n      disabled,\n      el,\n      color,\n      readonly,\n      showMonthAndYear,\n      preferWheel,\n      presentation,\n      size,\n      isGridStyle\n    } = this;\n    const mode = getIonMode(this);\n    const isMonthAndYearPresentation = presentation === 'year' || presentation === 'month' || presentation === 'month-year';\n    const shouldShowMonthAndYear = showMonthAndYear || isMonthAndYearPresentation;\n    const monthYearPickerOpen = showMonthAndYear && !isMonthAndYearPresentation;\n    const hasDatePresentation = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    const hasWheelVariant = hasDatePresentation && preferWheel;\n    renderHiddenInput(true, el, name, formatValue(value), disabled);\n    return h(Host, {\n      key: '8490192beb6c5c6064ed8f2a7be2d51846f84f36',\n      \"aria-disabled\": disabled ? 'true' : null,\n      onFocus: this.onFocus,\n      onBlur: this.onBlur,\n      class: Object.assign({}, createColorClasses(color, {\n        [mode]: true,\n        ['datetime-readonly']: readonly,\n        ['datetime-disabled']: disabled,\n        'show-month-and-year': shouldShowMonthAndYear,\n        'month-year-picker-open': monthYearPickerOpen,\n        [`datetime-presentation-${presentation}`]: true,\n        [`datetime-size-${size}`]: true,\n        [`datetime-prefer-wheel`]: hasWheelVariant,\n        [`datetime-grid`]: isGridStyle\n      }))\n    }, h(\"div\", {\n      key: 'a2959c07ed871f9004a2f11ab1385a5a7b5737fd',\n      class: \"intersection-tracker\",\n      ref: el => this.intersectionTrackerRef = el\n    }), this.renderDatetime(mode));\n  }\n  get el() {\n    return this;\n  }\n  static get watchers() {\n    return {\n      \"formatOptions\": [\"formatOptionsChanged\"],\n      \"disabled\": [\"disabledChanged\"],\n      \"min\": [\"minChanged\"],\n      \"max\": [\"maxChanged\"],\n      \"presentation\": [\"presentationChanged\"],\n      \"yearValues\": [\"yearValuesChanged\"],\n      \"monthValues\": [\"monthValuesChanged\"],\n      \"dayValues\": [\"dayValuesChanged\"],\n      \"hourValues\": [\"hourValuesChanged\"],\n      \"minuteValues\": [\"minuteValuesChanged\"],\n      \"value\": [\"valueChanged\"]\n    };\n  }\n  static get style() {\n    return {\n      ios: IonDatetimeIosStyle0,\n      md: IonDatetimeMdStyle0\n    };\n  }\n}, [33, \"ion-datetime\", {\n  \"color\": [1],\n  \"name\": [1],\n  \"disabled\": [4],\n  \"formatOptions\": [16],\n  \"readonly\": [4],\n  \"isDateEnabled\": [16],\n  \"min\": [1025],\n  \"max\": [1025],\n  \"presentation\": [1],\n  \"cancelText\": [1, \"cancel-text\"],\n  \"doneText\": [1, \"done-text\"],\n  \"clearText\": [1, \"clear-text\"],\n  \"yearValues\": [8, \"year-values\"],\n  \"monthValues\": [8, \"month-values\"],\n  \"dayValues\": [8, \"day-values\"],\n  \"hourValues\": [8, \"hour-values\"],\n  \"minuteValues\": [8, \"minute-values\"],\n  \"locale\": [1],\n  \"firstDayOfWeek\": [2, \"first-day-of-week\"],\n  \"titleSelectedDatesFormatter\": [16],\n  \"multiple\": [4],\n  \"highlightedDates\": [16],\n  \"value\": [1025],\n  \"showDefaultTitle\": [4, \"show-default-title\"],\n  \"showDefaultButtons\": [4, \"show-default-buttons\"],\n  \"showClearButton\": [4, \"show-clear-button\"],\n  \"showDefaultTimeLabel\": [4, \"show-default-time-label\"],\n  \"hourCycle\": [1, \"hour-cycle\"],\n  \"size\": [1],\n  \"preferWheel\": [4, \"prefer-wheel\"],\n  \"showMonthAndYear\": [32],\n  \"activeParts\": [32],\n  \"workingParts\": [32],\n  \"isTimePopoverOpen\": [32],\n  \"forceRenderDate\": [32],\n  \"confirm\": [64],\n  \"reset\": [64],\n  \"cancel\": [64]\n}, undefined, {\n  \"formatOptions\": [\"formatOptionsChanged\"],\n  \"disabled\": [\"disabledChanged\"],\n  \"min\": [\"minChanged\"],\n  \"max\": [\"maxChanged\"],\n  \"presentation\": [\"presentationChanged\"],\n  \"yearValues\": [\"yearValuesChanged\"],\n  \"monthValues\": [\"monthValuesChanged\"],\n  \"dayValues\": [\"dayValuesChanged\"],\n  \"hourValues\": [\"hourValuesChanged\"],\n  \"minuteValues\": [\"minuteValuesChanged\"],\n  \"value\": [\"valueChanged\"]\n}]);\nlet datetimeIds = 0;\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-datetime\", \"ion-backdrop\", \"ion-button\", \"ion-buttons\", \"ion-icon\", \"ion-item\", \"ion-label\", \"ion-note\", \"ion-picker-column-internal\", \"ion-picker-internal\", \"ion-popover\", \"ion-ripple-effect\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-datetime\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Datetime);\n        }\n        break;\n      case \"ion-backdrop\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$c();\n        }\n        break;\n      case \"ion-button\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$b();\n        }\n        break;\n      case \"ion-buttons\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$a();\n        }\n        break;\n      case \"ion-icon\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$9();\n        }\n        break;\n      case \"ion-item\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$8();\n        }\n        break;\n      case \"ion-label\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$7();\n        }\n        break;\n      case \"ion-note\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$6();\n        }\n        break;\n      case \"ion-picker-column-internal\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$5();\n        }\n        break;\n      case \"ion-picker-internal\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$4();\n        }\n        break;\n      case \"ion-popover\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$3();\n        }\n        break;\n      case \"ion-ripple-effect\":\n        if (!customElements.get(tagName)) {\n          defineCustomElement$2();\n        }\n        break;\n    }\n  });\n}\nconst IonDatetime = Datetime;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonDatetime, defineCustomElement };","map":{"version":3,"names":["proxyCustomElement","HTMLElement","createEvent","writeTask","h","Host","startFocusVisible","r","raf","e","renderHiddenInput","g","getElementRoot","a","printIonError","p","printIonWarning","i","isRTL","c","createColorClasses","chevronBack","f","chevronForward","chevronDown","caretUpSharp","caretDownSharp","b","getIonMode","generateDayAriaLabel","getDay","isBefore","isAfter","isSameDay","d","getPreviousMonth","getNextMonth","v","validateParts","getPartsFromCalendarDay","getNextYear","j","getPreviousYear","k","getEndOfWeek","l","getStartOfWeek","m","getPreviousDay","n","getNextDay","o","getPreviousWeek","getNextWeek","q","parseMinParts","parseMaxParts","s","parseDate","w","warnIfValueOutOfBounds","t","convertToArrayOfNumbers","u","convertDataToISO","x","getToday","y","getClosestValidDate","z","generateMonths","A","getNumDaysInMonth","B","getCombinedDateColumnData","C","getMonthColumnData","D","getDayColumnData","E","getYearColumnData","F","isMonthFirstLocale","G","getTimeColumnsData","H","isLocaleDayPeriodRTL","I","getMonthAndYear","J","getDaysOfWeek","K","getDaysOfMonth","L","getHourCycle","M","getLocalizedTime","N","getLocalizedDateTime","O","formatValue","P","clampDate","Q","parseAmPm","R","calculateHourFromAMPM","defineCustomElement$c","defineCustomElement$b","defineCustomElement$a","defineCustomElement$9","defineCustomElement$8","defineCustomElement$7","defineCustomElement$6","defineCustomElement$5","defineCustomElement$4","defineCustomElement$3","defineCustomElement$2","isYearDisabled","refYear","minParts","maxParts","year","isDayDisabled","refParts","dayValues","day","undefined","includes","getCalendarDayState","locale","activeParts","todayParts","activePartsArray","Array","isArray","isActive","find","parts","isToday","disabled","ariaSelected","ariaLabel","text","isMonthDisabled","isPrevMonthDisabled","prevMonth","Object","assign","isNextMonthDisabled","nextMonth","getHighlightStyles","highlightedDates","dateIsoString","el","dateStringWithoutTime","split","matchingHighlight","hd","date","textColor","backgroundColor","warnIfTimeZoneProvided","formatOptions","_a","_b","_c","_d","timeZone","timeZoneName","time","checkForPresentationFormatMismatch","presentation","datetimeIosCss","IonDatetimeIosStyle0","datetimeMdCss","IonDatetimeMdStyle0","Datetime","constructor","_this","this","__registerHost","__attachShadow","ionCancel","ionChange","ionValueChange","ionFocus","ionBlur","ionStyle","ionRender","inputId","datetimeIds","prevPresentation","warnIfIncorrectValueUsage","multiple","value","map","join","setValue","emit","getActivePartsWithFallback","defaultParts","getActivePart","closeParentOverlay","popoverOrModal","closest","dismiss","setWorkingParts","workingParts","setActiveParts","removeDate","readonly","validatedParts","filter","hasSlottedButtons","querySelector","showDefaultButtons","confirm","initializeKeyboardListeners","calendarBodyRef","root","shadowRoot","currentMonth","checkCalendarBodyFocus","ev","record","oldValue","classList","contains","focusWorkingDay","mo","MutationObserver","observe","attributeFilter","attributeOldValue","destroyKeyboardMO","disconnect","addEventListener","activeElement","partsToFocus","key","preventDefault","shiftKey","requestAnimationFrame","padding","querySelectorAll","dayEl","length","focus","processMinParts","min","processMaxParts","max","initializeCalendarListener","months","startMonth","workingMonth","endMonth","mode","needsiOSRubberBandFix","navigator","maxTouchPoints","scrollLeft","clientWidth","getChangedMonth","box","getBoundingClientRect","month","monthBox","Math","abs","forceRenderDate","updateActiveMonth","style","removeProperty","appliediOSRubberBandFix","newDate","setProperty","resolveForceDateScrolling","scrollTimeout","scrollCallback","clearTimeout","setTimeout","destroyCalendarListener","removeEventListener","destroyInteractionListeners","processValue","hasValue","valueToProcess","singleValue","targetValue","hour","minute","ampm","didChangeMonth","bodyIsVisible","isGridStyle","showMonthAndYear","areAllSelectedDatesInSameMonth","firstMonth","animateToDate","_ref","_asyncToGenerator","forceDateScrollingPromise","Promise","resolve","targetMonthIsBefore","_x","apply","arguments","onFocus","onBlur","left","offsetWidth","scrollTo","top","behavior","toggleMonthAndYearView","isTimePopoverOpen","color","name","isDateEnabled","cancelText","doneText","clearText","yearValues","monthValues","hourValues","minuteValues","firstDayOfWeek","titleSelectedDatesFormatter","showDefaultTitle","showClearButton","showDefaultTimeLabel","hourCycle","size","preferWheel","formatOptionsChanged","disabledChanged","emitStyle","minChanged","maxChanged","presentationChanged","hasDatePresentation","yearValuesChanged","parsedYearValues","monthValuesChanged","parsedMonthValues","dayValuesChanged","parsedDayValues","hourValuesChanged","parsedHourValues","minuteValuesChanged","parsedMinuteValues","valueChanged","_this2","closeOverlay","_this3","isCalendarPicker","activePartsIsArray","reset","startDate","_this4","cancel","_this5","connectedCallback","clearFocusVisible","destroy","disconnectedCallback","initializeListeners","componentDidLoad","intersectionTrackerRef","visibleCallback","entries","isIntersecting","add","visibleIO","IntersectionObserver","threshold","hiddenCallback","remove","hiddenIO","stopPropagation","componentDidRender","hasCalendarGrid","componentWillLoad","interactive","datetime","renderFooter","isButtonDisabled","clearButtonClick","class","id","onClick","renderWheelPicker","forcePresentation","renderArray","renderTimePickerColumns","renderDatePickerColumns","renderCombinedDatePickerColumn","renderIndividualDatePickerColumns","activePart","monthsToRender","lastMonth","result","items","itemObject","index","referenceParts","todayString","onIonChange","detail","findPart","shouldRenderMonths","shouldRenderDays","days","dayObject","valueNum","parseInt","shouldRenderYears","years","showMonthFirst","renderMonthPickerColumn","renderDayPickerColumn","renderYearPickerColumn","userHasSelectedDate","hoursData","minutesData","dayPeriodData","renderHourPickerColumn","renderMinutePickerColumn","renderDayPeriodPickerColumn","numericInput","isDayPeriodRTL","order","renderWheelView","columnOrder","renderCalendarHeader","expandedIcon","collapsedIcon","prevMonthDisabled","nextMonthDisabled","hostDir","getAttribute","part","ref","monthYearToggleItemRef","button","lines","btn","monthYearAriaLabel","setAttribute","icon","lazy","flipRtl","dir","slot","renderMonth","yearAllowed","monthAllowed","isCalMonthDisabled","isDatetimeDisabled","swipeDisabled","isWorkingMonth","dateObject","dayOfWeek","isCalendarPadding","isCalDayDisabled","isCalDayConstrained","dateStyle","dateParts","tabindex","renderCalendarBody","renderCalendar","renderTimeLabel","hasSlottedTimeLabel","renderTimeOverlay","_this6","computedHourCycle","_ref2","popoverRef","present","CustomEvent","ionShadowTarget","target","onWillDismiss","_x2","alignment","translucent","overlayIndex","arrow","onWillPresent","cols","forEach","col","scrollActiveItemIntoView","keyboardEvents","getHeaderSelectedDateText","headerText","weekday","renderHeader","showExpandedHeader","hasSlottedTitle","renderTime","timeOnlyPresentation","renderCalendarViewMonthYearPicker","renderDatetime","hasWheelVariant","render","isMonthAndYearPresentation","shouldShowMonthAndYear","monthYearPickerOpen","watchers","ios","md","defineCustomElement$1","customElements","components","tagName","get","define","IonDatetime","defineCustomElement"],"sources":["/home/nigel/work/safe-space/node_modules/@ionic/core/components/ion-datetime.js"],"sourcesContent":["/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, createEvent, writeTask, h, Host } from '@stencil/core/internal/client';\nimport { startFocusVisible } from './focus-visible.js';\nimport { r as raf, e as renderHiddenInput, g as getElementRoot } from './helpers.js';\nimport { a as printIonError, p as printIonWarning } from './index6.js';\nimport { i as isRTL } from './dir.js';\nimport { c as createColorClasses } from './theme.js';\nimport { a as chevronBack, f as chevronForward, c as chevronDown, g as caretUpSharp, h as caretDownSharp } from './index7.js';\nimport { b as getIonMode } from './ionic-global.js';\nimport { g as generateDayAriaLabel, a as getDay, i as isBefore, b as isAfter, c as isSameDay, d as getPreviousMonth, e as getNextMonth, v as validateParts, f as getPartsFromCalendarDay, h as getNextYear, j as getPreviousYear, k as getEndOfWeek, l as getStartOfWeek, m as getPreviousDay, n as getNextDay, o as getPreviousWeek, p as getNextWeek, q as parseMinParts, r as parseMaxParts, s as parseDate, w as warnIfValueOutOfBounds, t as convertToArrayOfNumbers, u as convertDataToISO, x as getToday, y as getClosestValidDate, z as generateMonths, A as getNumDaysInMonth, B as getCombinedDateColumnData, C as getMonthColumnData, D as getDayColumnData, E as getYearColumnData, F as isMonthFirstLocale, G as getTimeColumnsData, H as isLocaleDayPeriodRTL, I as getMonthAndYear, J as getDaysOfWeek, K as getDaysOfMonth, L as getHourCycle, M as getLocalizedTime, N as getLocalizedDateTime, O as formatValue, P as clampDate, Q as parseAmPm, R as calculateHourFromAMPM } from './data.js';\nimport { d as defineCustomElement$c } from './backdrop.js';\nimport { d as defineCustomElement$b } from './button.js';\nimport { d as defineCustomElement$a } from './buttons.js';\nimport { d as defineCustomElement$9 } from './icon.js';\nimport { d as defineCustomElement$8 } from './item.js';\nimport { d as defineCustomElement$7 } from './label.js';\nimport { d as defineCustomElement$6 } from './note.js';\nimport { d as defineCustomElement$5 } from './picker-column-internal.js';\nimport { d as defineCustomElement$4 } from './picker-internal.js';\nimport { d as defineCustomElement$3 } from './popover.js';\nimport { d as defineCustomElement$2 } from './ripple-effect.js';\n\nconst isYearDisabled = (refYear, minParts, maxParts) => {\n    if (minParts && minParts.year > refYear) {\n        return true;\n    }\n    if (maxParts && maxParts.year < refYear) {\n        return true;\n    }\n    return false;\n};\n/**\n * Returns true if a given day should\n * not be interactive according to its value,\n * or the max/min dates.\n */\nconst isDayDisabled = (refParts, minParts, maxParts, dayValues) => {\n    /**\n     * If this is a filler date (i.e. padding)\n     * then the date is disabled.\n     */\n    if (refParts.day === null) {\n        return true;\n    }\n    /**\n     * If user passed in a list of acceptable day values\n     * check to make sure that the date we are looking\n     * at is in this array.\n     */\n    if (dayValues !== undefined && !dayValues.includes(refParts.day)) {\n        return true;\n    }\n    /**\n     * Given a min date, perform the following\n     * checks. If any of them are true, then the\n     * day should be disabled:\n     * 1. Is the current year < the min allowed year?\n     * 2. Is the current year === min allowed year,\n     * but the current month < the min allowed month?\n     * 3. Is the current year === min allowed year, the\n     * current month === min allow month, but the current\n     * day < the min allowed day?\n     */\n    if (minParts && isBefore(refParts, minParts)) {\n        return true;\n    }\n    /**\n     * Given a max date, perform the following\n     * checks. If any of them are true, then the\n     * day should be disabled:\n     * 1. Is the current year > the max allowed year?\n     * 2. Is the current year === max allowed year,\n     * but the current month > the max allowed month?\n     * 3. Is the current year === max allowed year, the\n     * current month === max allow month, but the current\n     * day > the max allowed day?\n     */\n    if (maxParts && isAfter(refParts, maxParts)) {\n        return true;\n    }\n    /**\n     * If none of these checks\n     * passed then the date should\n     * be interactive.\n     */\n    return false;\n};\n/**\n * Given a locale, a date, the selected date(s), and today's date,\n * generate the state for a given calendar day button.\n */\nconst getCalendarDayState = (locale, refParts, activeParts, todayParts, minParts, maxParts, dayValues) => {\n    /**\n     * activeParts signals what day(s) are currently selected in the datetime.\n     * If multiple=\"true\", this will be an array, but the logic in this util\n     * is the same whether we have one selected day or many because we're only\n     * calculating the state for one button. So, we treat a single activeParts value\n     * the same as an array of length one.\n     */\n    const activePartsArray = Array.isArray(activeParts) ? activeParts : [activeParts];\n    /**\n     * The day button is active if it is selected, or in other words, if refParts\n     * matches at least one selected date.\n     */\n    const isActive = activePartsArray.find((parts) => isSameDay(refParts, parts)) !== undefined;\n    const isToday = isSameDay(refParts, todayParts);\n    const disabled = isDayDisabled(refParts, minParts, maxParts, dayValues);\n    /**\n     * Note that we always return one object regardless of whether activeParts\n     * was an array, since we pare down to one value for isActive.\n     */\n    return {\n        disabled,\n        isActive,\n        isToday,\n        ariaSelected: isActive ? 'true' : null,\n        ariaLabel: generateDayAriaLabel(locale, isToday, refParts),\n        text: refParts.day != null ? getDay(locale, refParts) : null,\n    };\n};\n/**\n * Returns `true` if the month is disabled given the\n * current date value and min/max date constraints.\n */\nconst isMonthDisabled = (refParts, { minParts, maxParts, }) => {\n    // If the year is disabled then the month is disabled.\n    if (isYearDisabled(refParts.year, minParts, maxParts)) {\n        return true;\n    }\n    // If the date value is before the min date, then the month is disabled.\n    // If the date value is after the max date, then the month is disabled.\n    if ((minParts && isBefore(refParts, minParts)) || (maxParts && isAfter(refParts, maxParts))) {\n        return true;\n    }\n    return false;\n};\n/**\n * Given a working date, an optional minimum date range,\n * and an optional maximum date range; determine if the\n * previous navigation button is disabled.\n */\nconst isPrevMonthDisabled = (refParts, minParts, maxParts) => {\n    const prevMonth = Object.assign(Object.assign({}, getPreviousMonth(refParts)), { day: null });\n    return isMonthDisabled(prevMonth, {\n        minParts,\n        maxParts,\n    });\n};\n/**\n * Given a working date and a maximum date range,\n * determine if the next navigation button is disabled.\n */\nconst isNextMonthDisabled = (refParts, maxParts) => {\n    const nextMonth = Object.assign(Object.assign({}, getNextMonth(refParts)), { day: null });\n    return isMonthDisabled(nextMonth, {\n        maxParts,\n    });\n};\n/**\n * Given the value of the highlightedDates property\n * and an ISO string, return the styles to use for\n * that date, or undefined if none are found.\n */\nconst getHighlightStyles = (highlightedDates, dateIsoString, el) => {\n    if (Array.isArray(highlightedDates)) {\n        const dateStringWithoutTime = dateIsoString.split('T')[0];\n        const matchingHighlight = highlightedDates.find((hd) => hd.date === dateStringWithoutTime);\n        if (matchingHighlight) {\n            return {\n                textColor: matchingHighlight.textColor,\n                backgroundColor: matchingHighlight.backgroundColor,\n            };\n        }\n    }\n    else {\n        /**\n         * Wrap in a try-catch to prevent exceptions in the user's function\n         * from interrupting the calendar's rendering.\n         */\n        try {\n            return highlightedDates(dateIsoString);\n        }\n        catch (e) {\n            printIonError('Exception thrown from provided `highlightedDates` callback. Please check your function and try again.', el, e);\n        }\n    }\n    return undefined;\n};\n\n/**\n * If a time zone is provided in the format options, the rendered text could\n * differ from what was selected in the Datetime, which could cause\n * confusion.\n */\nconst warnIfTimeZoneProvided = (el, formatOptions) => {\n    var _a, _b, _c, _d;\n    if (((_a = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.date) === null || _a === void 0 ? void 0 : _a.timeZone) ||\n        ((_b = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.date) === null || _b === void 0 ? void 0 : _b.timeZoneName) ||\n        ((_c = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.time) === null || _c === void 0 ? void 0 : _c.timeZone) ||\n        ((_d = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.time) === null || _d === void 0 ? void 0 : _d.timeZoneName)) {\n        printIonWarning('Datetime: \"timeZone\" and \"timeZoneName\" are not supported in \"formatOptions\".', el);\n    }\n};\nconst checkForPresentationFormatMismatch = (el, presentation, formatOptions) => {\n    // formatOptions is not required\n    if (!formatOptions)\n        return;\n    // If formatOptions is provided, the date and/or time objects are required, depending on the presentation\n    switch (presentation) {\n        case 'date':\n        case 'month-year':\n        case 'month':\n        case 'year':\n            if (formatOptions.date === undefined) {\n                printIonWarning(`Datetime: The '${presentation}' presentation requires a date object in formatOptions.`, el);\n            }\n            break;\n        case 'time':\n            if (formatOptions.time === undefined) {\n                printIonWarning(`Datetime: The 'time' presentation requires a time object in formatOptions.`, el);\n            }\n            break;\n        case 'date-time':\n        case 'time-date':\n            if (formatOptions.date === undefined && formatOptions.time === undefined) {\n                printIonWarning(`Datetime: The '${presentation}' presentation requires either a date or time object (or both) in formatOptions.`, el);\n            }\n            break;\n    }\n};\n\nconst datetimeIosCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}ion-picker-column-internal{min-width:26px}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{position:absolute;visibility:hidden;pointer-events:none}@supports (inset-inline-start: 0){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{inset-inline-start:-99999px}}@supports not (inset-inline-start: 0){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}@supports selector(:dir(rtl)){:host(.show-month-and-year:dir(rtl)) .calendar-next-prev,:host(.show-month-and-year:dir(rtl)) .calendar-days-of-week,:host(.show-month-and-year:dir(rtl)) .calendar-body,:host(.show-month-and-year:dir(rtl)) .datetime-time{left:unset;right:unset;right:-99999px}}}}@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled) .calendar-days-of-week,:host(.datetime-disabled) .datetime-time{opacity:0.4}:host(.datetime-readonly){pointer-events:none;}:host(.datetime-readonly) .calendar-action-buttons,:host(.datetime-readonly) .calendar-body,:host(.datetime-readonly) .datetime-year{pointer-events:initial}:host(.datetime-readonly) .calendar-day[disabled]:not(.calendar-day-constrained),:host(.datetime-readonly) .datetime-action-buttons ion-button[disabled]{opacity:1}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.datetime-action-buttons .datetime-action-buttons-container{display:-ms-flexbox;display:flex}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;width:auto}:host .calendar-action-buttons ion-item ion-icon{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0;padding-top:0;padding-bottom:0}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}.calendar-days-of-week .day-of-week{-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:0;margin-bottom:0}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr)}:host .calendar-day-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;min-width:0;min-height:0;overflow:visible}.calendar-day{border-radius:50%;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px;padding-top:0px;padding-bottom:0px;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;font-family:var(--ion-font-family, inherit);cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}.calendar-day:focus{background:rgba(var(--ion-color-base-rgb), 0.2);-webkit-box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2)}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-light, #ffffff);--background-rgb:var(--ion-color-light-rgb);--title-color:var(--ion-color-step-600, #666666)}:host(.datetime-presentation-date-time:not(.datetime-prefer-wheel)),:host(.datetime-presentation-time-date:not(.datetime-prefer-wheel)),:host(.datetime-presentation-date:not(.datetime-prefer-wheel)){min-height:350px}:host .datetime-header{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:16px;padding-bottom:16px;border-bottom:0.55px solid var(--ion-color-step-200, #cccccc);font-size:min(0.875rem, 22.4px)}:host .datetime-header .datetime-title{color:var(--title-color)}:host .datetime-header .datetime-selected-date{margin-top:10px}:host .calendar-action-buttons ion-item{--padding-start:16px;--background-hover:transparent;--background-activated:transparent;font-size:min(1rem, 25.6px);font-weight:600}:host .calendar-action-buttons ion-item ion-icon,:host .calendar-action-buttons ion-buttons ion-button{color:var(--ion-color-base)}:host .calendar-action-buttons ion-buttons{padding-left:0;padding-right:0;padding-top:8px;padding-bottom:0}:host .calendar-action-buttons ion-buttons ion-button{margin-left:0;margin-right:0;margin-top:0;margin-bottom:0}:host .calendar-days-of-week{-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:0;padding-bottom:0;color:var(--ion-color-step-300, #b3b3b3);font-size:min(0.75rem, 19.2px);font-weight:600;line-height:24px;text-transform:uppercase}@supports (border-radius: mod(1px, 1px)){.calendar-days-of-week .day-of-week{width:clamp(20px, calc(mod(min(1rem, 24px), 24px) * 10), 100%);height:24px;overflow:hidden}.calendar-day{border-radius:max(8px, mod(min(1rem, 24px), 24px) * 10)}}@supports ((border-radius: mod(1px, 1px)) and (background: -webkit-named-image(apple-pay-logo-black)) and (not (contain-intrinsic-size: none))) or (not (border-radius: mod(1px, 1px))){.calendar-days-of-week .day-of-week{width:auto;height:auto;overflow:initial}.calendar-day{border-radius:32px}}:host .calendar-body .calendar-month .calendar-month-grid{-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:8px;padding-bottom:8px;-ms-flex-align:center;align-items:center;height:calc(100% - 16px)}:host .calendar-day-wrapper{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:4px;padding-inline-end:4px;padding-top:4px;padding-bottom:4px;height:0;min-height:1rem}:host .calendar-day{width:40px;min-width:40px;height:40px;font-size:min(1.25rem, 32px)}.calendar-day.calendar-day-active{background:rgba(var(--ion-color-base-rgb), 0.2)}:host .calendar-day.calendar-day-today{color:var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-base);font-weight:600}:host .calendar-day.calendar-day-today.calendar-day-active{background:var(--ion-color-base);color:var(--ion-color-contrast)}:host .datetime-time{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:8px;padding-bottom:16px;font-size:min(1rem, 25.6px)}:host .datetime-time .time-header{font-weight:600}:host .datetime-buttons{-webkit-padding-start:8px;padding-inline-start:8px;-webkit-padding-end:8px;padding-inline-end:8px;padding-top:8px;padding-bottom:8px;border-top:0.55px solid var(--ion-color-step-200, #cccccc)}:host .datetime-buttons ::slotted(ion-buttons),:host .datetime-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:justify;justify-content:space-between}:host .datetime-action-buttons{width:100%}\";\nconst IonDatetimeIosStyle0 = datetimeIosCss;\n\nconst datetimeMdCss = \":host{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;background:var(--background);overflow:hidden}ion-picker-column-internal{min-width:26px}:host(.datetime-size-fixed){width:auto;height:auto}:host(.datetime-size-fixed:not(.datetime-prefer-wheel)){max-width:350px}:host(.datetime-size-fixed.datetime-prefer-wheel){min-width:350px;max-width:-webkit-max-content;max-width:-moz-max-content;max-width:max-content}:host(.datetime-size-cover){width:100%}:host .calendar-body,:host .datetime-year{opacity:0}:host(:not(.datetime-ready)) .datetime-year{position:absolute;pointer-events:none}:host(.datetime-ready) .calendar-body{opacity:1}:host(.datetime-ready) .datetime-year{display:none;opacity:1}:host .wheel-order-year-first .day-column{-ms-flex-order:3;order:3;text-align:end}:host .wheel-order-year-first .month-column{-ms-flex-order:2;order:2;text-align:end}:host .wheel-order-year-first .year-column{-ms-flex-order:1;order:1;text-align:start}:host .datetime-calendar,:host .datetime-year{display:-ms-flexbox;display:flex;-ms-flex:1 1 auto;flex:1 1 auto;-ms-flex-flow:column;flex-flow:column}:host(.show-month-and-year) .datetime-year{display:-ms-flexbox;display:flex}@supports (background: -webkit-named-image(apple-pay-logo-black)) and (not (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{position:absolute;visibility:hidden;pointer-events:none}@supports (inset-inline-start: 0){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{inset-inline-start:-99999px}}@supports not (inset-inline-start: 0){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{left:-99999px}:host-context([dir=rtl]):host(.show-month-and-year) .calendar-next-prev,:host-context([dir=rtl]).show-month-and-year .calendar-next-prev,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-days-of-week,:host-context([dir=rtl]).show-month-and-year .calendar-days-of-week,:host-context([dir=rtl]):host(.show-month-and-year) .calendar-body,:host-context([dir=rtl]).show-month-and-year .calendar-body,:host-context([dir=rtl]):host(.show-month-and-year) .datetime-time,:host-context([dir=rtl]).show-month-and-year .datetime-time{left:unset;right:unset;right:-99999px}@supports selector(:dir(rtl)){:host(.show-month-and-year:dir(rtl)) .calendar-next-prev,:host(.show-month-and-year:dir(rtl)) .calendar-days-of-week,:host(.show-month-and-year:dir(rtl)) .calendar-body,:host(.show-month-and-year:dir(rtl)) .datetime-time{left:unset;right:unset;right:-99999px}}}}@supports (not (background: -webkit-named-image(apple-pay-logo-black))) or ((background: -webkit-named-image(apple-pay-logo-black)) and (aspect-ratio: 1/1)){:host(.show-month-and-year) .calendar-next-prev,:host(.show-month-and-year) .calendar-days-of-week,:host(.show-month-and-year) .calendar-body,:host(.show-month-and-year) .datetime-time{display:none}}:host(.month-year-picker-open) .datetime-footer{display:none}:host(.datetime-disabled){pointer-events:none}:host(.datetime-disabled) .calendar-days-of-week,:host(.datetime-disabled) .datetime-time{opacity:0.4}:host(.datetime-readonly){pointer-events:none;}:host(.datetime-readonly) .calendar-action-buttons,:host(.datetime-readonly) .calendar-body,:host(.datetime-readonly) .datetime-year{pointer-events:initial}:host(.datetime-readonly) .calendar-day[disabled]:not(.calendar-day-constrained),:host(.datetime-readonly) .datetime-action-buttons ion-button[disabled]{opacity:1}:host .datetime-header .datetime-title{text-overflow:ellipsis;white-space:nowrap;overflow:hidden}:host .datetime-action-buttons.has-clear-button{width:100%}:host .datetime-action-buttons ion-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}.datetime-action-buttons .datetime-action-buttons-container{display:-ms-flexbox;display:flex}:host .calendar-action-buttons{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--background:translucent}:host .calendar-action-buttons ion-item ion-label{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;width:auto}:host .calendar-action-buttons ion-item ion-icon{-webkit-padding-start:4px;padding-inline-start:4px;-webkit-padding-end:0;padding-inline-end:0;padding-top:0;padding-bottom:0}:host .calendar-days-of-week{display:grid;grid-template-columns:repeat(7, 1fr);text-align:center}.calendar-days-of-week .day-of-week{-webkit-margin-start:auto;margin-inline-start:auto;-webkit-margin-end:auto;margin-inline-end:auto;margin-top:0;margin-bottom:0}:host .calendar-body{display:-ms-flexbox;display:flex;-ms-flex-positive:1;flex-grow:1;-webkit-scroll-snap-type:x mandatory;-ms-scroll-snap-type:x mandatory;scroll-snap-type:x mandatory;overflow-x:scroll;overflow-y:hidden;scrollbar-width:none;outline:none}:host .calendar-body .calendar-month{display:-ms-flexbox;display:flex;-ms-flex-flow:column;flex-flow:column;scroll-snap-align:start;scroll-snap-stop:always;-ms-flex-negative:0;flex-shrink:0;width:100%}:host .calendar-body .calendar-month-disabled{scroll-snap-align:none}:host .calendar-body::-webkit-scrollbar{display:none}:host .calendar-body .calendar-month-grid{display:grid;grid-template-columns:repeat(7, 1fr)}:host .calendar-day-wrapper{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;min-width:0;min-height:0;overflow:visible}.calendar-day{border-radius:50%;-webkit-padding-start:0px;padding-inline-start:0px;-webkit-padding-end:0px;padding-inline-end:0px;padding-top:0px;padding-bottom:0px;-webkit-margin-start:0px;margin-inline-start:0px;-webkit-margin-end:0px;margin-inline-end:0px;margin-top:0px;margin-bottom:0px;display:-ms-flexbox;display:flex;position:relative;-ms-flex-align:center;align-items:center;-ms-flex-pack:center;justify-content:center;border:none;outline:none;background:none;color:currentColor;font-family:var(--ion-font-family, inherit);cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none;z-index:0}:host .calendar-day[disabled]{pointer-events:none;opacity:0.4}.calendar-day:focus{background:rgba(var(--ion-color-base-rgb), 0.2);-webkit-box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2);box-shadow:0px 0px 0px 4px rgba(var(--ion-color-base-rgb), 0.2)}:host .datetime-time{display:-ms-flexbox;display:flex;-ms-flex-pack:justify;justify-content:space-between}:host(.datetime-presentation-time) .datetime-time{padding-left:0;padding-right:0;padding-top:0;padding-bottom:0}:host ion-popover{--height:200px}:host .time-header{display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center}:host .time-body{border-radius:8px;-webkit-padding-start:12px;padding-inline-start:12px;-webkit-padding-end:12px;padding-inline-end:12px;padding-top:6px;padding-bottom:6px;display:-ms-flexbox;display:flex;border:none;background:var(--ion-color-step-300, #edeef0);color:var(--ion-text-color, #000);font-family:inherit;font-size:inherit;cursor:pointer;-webkit-appearance:none;-moz-appearance:none;appearance:none}:host .time-body-active{color:var(--ion-color-base)}:host(.in-item){position:static}:host(.show-month-and-year) .calendar-action-buttons ion-item{--color:var(--ion-color-base)}:host{--background:var(--ion-color-step-100, #ffffff);--title-color:var(--ion-color-contrast)}:host .datetime-header{-webkit-padding-start:20px;padding-inline-start:20px;-webkit-padding-end:20px;padding-inline-end:20px;padding-top:20px;padding-bottom:20px;background:var(--ion-color-base);color:var(--title-color)}:host .datetime-header .datetime-title{font-size:0.75rem;text-transform:uppercase}:host .datetime-header .datetime-selected-date{margin-top:30px;font-size:2.125rem}:host .datetime-calendar .calendar-action-buttons ion-item{--padding-start:20px}:host .calendar-action-buttons ion-item,:host .calendar-action-buttons ion-button{--color:var(--ion-color-step-650, #595959)}:host .calendar-days-of-week{-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px;padding-top:0px;padding-bottom:0px;color:var(--ion-color-step-500, gray);font-size:0.875rem;line-height:36px}:host .calendar-body .calendar-month .calendar-month-grid{-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px;padding-top:4px;padding-bottom:4px;grid-template-rows:repeat(6, 1fr)}:host .calendar-day{width:42px;min-width:42px;height:42px;font-size:0.875rem}:host .calendar-day.calendar-day-today{border:1px solid var(--ion-color-base);color:var(--ion-color-base)}:host .calendar-day.calendar-day-active{color:var(--ion-color-contrast)}.calendar-day.calendar-day-active{border:1px solid var(--ion-color-base);background:var(--ion-color-base)}:host .datetime-time{-webkit-padding-start:16px;padding-inline-start:16px;-webkit-padding-end:16px;padding-inline-end:16px;padding-top:8px;padding-bottom:8px}:host .time-header{color:var(--ion-color-step-650, #595959)}:host(.datetime-presentation-month) .datetime-year,:host(.datetime-presentation-year) .datetime-year,:host(.datetime-presentation-month-year) .datetime-year{margin-top:20px;margin-bottom:20px}:host .datetime-buttons{-webkit-padding-start:10px;padding-inline-start:10px;-webkit-padding-end:10px;padding-inline-end:10px;padding-top:10px;padding-bottom:10px;display:-ms-flexbox;display:flex;-ms-flex-align:center;align-items:center;-ms-flex-pack:end;justify-content:flex-end}\";\nconst IonDatetimeMdStyle0 = datetimeMdCss;\n\nconst Datetime = /*@__PURE__*/ proxyCustomElement(class Datetime extends HTMLElement {\n    constructor() {\n        super();\n        this.__registerHost();\n        this.__attachShadow();\n        this.ionCancel = createEvent(this, \"ionCancel\", 7);\n        this.ionChange = createEvent(this, \"ionChange\", 7);\n        this.ionValueChange = createEvent(this, \"ionValueChange\", 7);\n        this.ionFocus = createEvent(this, \"ionFocus\", 7);\n        this.ionBlur = createEvent(this, \"ionBlur\", 7);\n        this.ionStyle = createEvent(this, \"ionStyle\", 7);\n        this.ionRender = createEvent(this, \"ionRender\", 7);\n        this.inputId = `ion-dt-${datetimeIds++}`;\n        this.prevPresentation = null;\n        this.warnIfIncorrectValueUsage = () => {\n            const { multiple, value } = this;\n            if (!multiple && Array.isArray(value)) {\n                /**\n                 * We do some processing on the `value` array so\n                 * that it looks more like an array when logged to\n                 * the console.\n                 * Example given ['a', 'b']\n                 * Default toString() behavior: a,b\n                 * Custom behavior: ['a', 'b']\n                 */\n                printIonWarning(`ion-datetime was passed an array of values, but multiple=\"false\". This is incorrect usage and may result in unexpected behaviors. To dismiss this warning, pass a string to the \"value\" property when multiple=\"false\".\n\n  Value Passed: [${value.map((v) => `'${v}'`).join(', ')}]\n`, this.el);\n            }\n        };\n        this.setValue = (value) => {\n            this.value = value;\n            this.ionChange.emit({ value });\n        };\n        /**\n         * Returns the DatetimePart interface\n         * to use when rendering an initial set of\n         * data. This should be used when rendering an\n         * interface in an environment where the `value`\n         * may not be set. This function works\n         * by returning the first selected date and then\n         * falling back to defaultParts if no active date\n         * is selected.\n         */\n        this.getActivePartsWithFallback = () => {\n            var _a;\n            const { defaultParts } = this;\n            return (_a = this.getActivePart()) !== null && _a !== void 0 ? _a : defaultParts;\n        };\n        this.getActivePart = () => {\n            const { activeParts } = this;\n            return Array.isArray(activeParts) ? activeParts[0] : activeParts;\n        };\n        this.closeParentOverlay = () => {\n            const popoverOrModal = this.el.closest('ion-modal, ion-popover');\n            if (popoverOrModal) {\n                popoverOrModal.dismiss();\n            }\n        };\n        this.setWorkingParts = (parts) => {\n            this.workingParts = Object.assign({}, parts);\n        };\n        this.setActiveParts = (parts, removeDate = false) => {\n            /** if the datetime component is in readonly mode,\n             * allow browsing of the calendar without changing\n             * the set value\n             */\n            if (this.readonly) {\n                return;\n            }\n            const { multiple, minParts, maxParts, activeParts } = this;\n            /**\n             * When setting the active parts, it is possible\n             * to set invalid data. For example,\n             * when updating January 31 to February,\n             * February 31 does not exist. As a result\n             * we need to validate the active parts and\n             * ensure that we are only setting valid dates.\n             * Additionally, we need to update the working parts\n             * too in the event that the validated parts are different.\n             */\n            const validatedParts = validateParts(parts, minParts, maxParts);\n            this.setWorkingParts(validatedParts);\n            if (multiple) {\n                const activePartsArray = Array.isArray(activeParts) ? activeParts : [activeParts];\n                if (removeDate) {\n                    this.activeParts = activePartsArray.filter((p) => !isSameDay(p, validatedParts));\n                }\n                else {\n                    this.activeParts = [...activePartsArray, validatedParts];\n                }\n            }\n            else {\n                this.activeParts = Object.assign({}, validatedParts);\n            }\n            const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n            if (hasSlottedButtons || this.showDefaultButtons) {\n                return;\n            }\n            this.confirm();\n        };\n        this.initializeKeyboardListeners = () => {\n            const calendarBodyRef = this.calendarBodyRef;\n            if (!calendarBodyRef) {\n                return;\n            }\n            const root = this.el.shadowRoot;\n            /**\n             * Get a reference to the month\n             * element we are currently viewing.\n             */\n            const currentMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(2)');\n            /**\n             * When focusing the calendar body, we want to pass focus\n             * to the working day, but other days should\n             * only be accessible using the arrow keys. Pressing\n             * Tab should jump between bodies of selectable content.\n             */\n            const checkCalendarBodyFocus = (ev) => {\n                var _a;\n                const record = ev[0];\n                /**\n                 * If calendar body was already focused\n                 * when this fired or if the calendar body\n                 * if not currently focused, we should not re-focus\n                 * the inner day.\n                 */\n                if (((_a = record.oldValue) === null || _a === void 0 ? void 0 : _a.includes('ion-focused')) || !calendarBodyRef.classList.contains('ion-focused')) {\n                    return;\n                }\n                this.focusWorkingDay(currentMonth);\n            };\n            const mo = new MutationObserver(checkCalendarBodyFocus);\n            mo.observe(calendarBodyRef, { attributeFilter: ['class'], attributeOldValue: true });\n            this.destroyKeyboardMO = () => {\n                mo === null || mo === void 0 ? void 0 : mo.disconnect();\n            };\n            /**\n             * We must use keydown not keyup as we want\n             * to prevent scrolling when using the arrow keys.\n             */\n            calendarBodyRef.addEventListener('keydown', (ev) => {\n                const activeElement = root.activeElement;\n                if (!activeElement || !activeElement.classList.contains('calendar-day')) {\n                    return;\n                }\n                const parts = getPartsFromCalendarDay(activeElement);\n                let partsToFocus;\n                switch (ev.key) {\n                    case 'ArrowDown':\n                        ev.preventDefault();\n                        partsToFocus = getNextWeek(parts);\n                        break;\n                    case 'ArrowUp':\n                        ev.preventDefault();\n                        partsToFocus = getPreviousWeek(parts);\n                        break;\n                    case 'ArrowRight':\n                        ev.preventDefault();\n                        partsToFocus = getNextDay(parts);\n                        break;\n                    case 'ArrowLeft':\n                        ev.preventDefault();\n                        partsToFocus = getPreviousDay(parts);\n                        break;\n                    case 'Home':\n                        ev.preventDefault();\n                        partsToFocus = getStartOfWeek(parts);\n                        break;\n                    case 'End':\n                        ev.preventDefault();\n                        partsToFocus = getEndOfWeek(parts);\n                        break;\n                    case 'PageUp':\n                        ev.preventDefault();\n                        partsToFocus = ev.shiftKey ? getPreviousYear(parts) : getPreviousMonth(parts);\n                        break;\n                    case 'PageDown':\n                        ev.preventDefault();\n                        partsToFocus = ev.shiftKey ? getNextYear(parts) : getNextMonth(parts);\n                        break;\n                    /**\n                     * Do not preventDefault here\n                     * as we do not want to override other\n                     * browser defaults such as pressing Enter/Space\n                     * to select a day.\n                     */\n                    default:\n                        return;\n                }\n                /**\n                 * If the day we want to move focus to is\n                 * disabled, do not do anything.\n                 */\n                if (isDayDisabled(partsToFocus, this.minParts, this.maxParts)) {\n                    return;\n                }\n                this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), partsToFocus));\n                /**\n                 * Give view a chance to re-render\n                 * then move focus to the new working day\n                 */\n                requestAnimationFrame(() => this.focusWorkingDay(currentMonth));\n            });\n        };\n        this.focusWorkingDay = (currentMonth) => {\n            /**\n             * Get the number of padding days so\n             * we know how much to offset our next selector by\n             * to grab the correct calendar-day element.\n             */\n            const padding = currentMonth.querySelectorAll('.calendar-day-padding');\n            const { day } = this.workingParts;\n            if (day === null) {\n                return;\n            }\n            /**\n             * Get the calendar day element\n             * and focus it.\n             */\n            const dayEl = currentMonth.querySelector(`.calendar-day-wrapper:nth-of-type(${padding.length + day}) .calendar-day`);\n            if (dayEl) {\n                dayEl.focus();\n            }\n        };\n        this.processMinParts = () => {\n            const { min, defaultParts } = this;\n            if (min === undefined) {\n                this.minParts = undefined;\n                return;\n            }\n            this.minParts = parseMinParts(min, defaultParts);\n        };\n        this.processMaxParts = () => {\n            const { max, defaultParts } = this;\n            if (max === undefined) {\n                this.maxParts = undefined;\n                return;\n            }\n            this.maxParts = parseMaxParts(max, defaultParts);\n        };\n        this.initializeCalendarListener = () => {\n            const calendarBodyRef = this.calendarBodyRef;\n            if (!calendarBodyRef) {\n                return;\n            }\n            /**\n             * For performance reasons, we only render 3\n             * months at a time: The current month, the previous\n             * month, and the next month. We have a scroll listener\n             * on the calendar body to append/prepend new months.\n             *\n             * We can do this because Stencil is smart enough to not\n             * re-create the .calendar-month containers, but rather\n             * update the content within those containers.\n             *\n             * As an added bonus, WebKit has some troubles with\n             * scroll-snap-stop: always, so not rendering all of\n             * the months in a row allows us to mostly sidestep\n             * that issue.\n             */\n            const months = calendarBodyRef.querySelectorAll('.calendar-month');\n            const startMonth = months[0];\n            const workingMonth = months[1];\n            const endMonth = months[2];\n            const mode = getIonMode(this);\n            const needsiOSRubberBandFix = mode === 'ios' && typeof navigator !== 'undefined' && navigator.maxTouchPoints > 1;\n            /**\n             * Before setting up the scroll listener,\n             * scroll the middle month into view.\n             * scrollIntoView() will scroll entire page\n             * if element is not in viewport. Use scrollLeft instead.\n             */\n            writeTask(() => {\n                calendarBodyRef.scrollLeft = startMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n                const getChangedMonth = (parts) => {\n                    const box = calendarBodyRef.getBoundingClientRect();\n                    /**\n                     * If the current scroll position is all the way to the left\n                     * then we have scrolled to the previous month.\n                     * Otherwise, assume that we have scrolled to the next\n                     * month. We have a tolerance of 2px to account for\n                     * sub pixel rendering.\n                     *\n                     * Check below the next line ensures that we did not\n                     * swipe and abort (i.e. we swiped but we are still on the current month).\n                     */\n                    const month = calendarBodyRef.scrollLeft <= 2 ? startMonth : endMonth;\n                    /**\n                     * The edge of the month must be lined up with\n                     * the edge of the calendar body in order for\n                     * the component to update. Otherwise, it\n                     * may be the case that the user has paused their\n                     * swipe or the browser has not finished snapping yet.\n                     * Rather than check if the x values are equal,\n                     * we give it a tolerance of 2px to account for\n                     * sub pixel rendering.\n                     */\n                    const monthBox = month.getBoundingClientRect();\n                    if (Math.abs(monthBox.x - box.x) > 2)\n                        return;\n                    /**\n                     * If we're force-rendering a month, assume we've\n                     * scrolled to that and return it.\n                     *\n                     * If forceRenderDate is ever used in a context where the\n                     * forced month is not immediately auto-scrolled to, this\n                     * should be updated to also check whether `month` has the\n                     * same month and year as the forced date.\n                     */\n                    const { forceRenderDate } = this;\n                    if (forceRenderDate !== undefined) {\n                        return { month: forceRenderDate.month, year: forceRenderDate.year, day: forceRenderDate.day };\n                    }\n                    /**\n                     * From here, we can determine if the start\n                     * month or the end month was scrolled into view.\n                     * If no month was changed, then we can return from\n                     * the scroll callback early.\n                     */\n                    if (month === startMonth) {\n                        return getPreviousMonth(parts);\n                    }\n                    else if (month === endMonth) {\n                        return getNextMonth(parts);\n                    }\n                    else {\n                        return;\n                    }\n                };\n                const updateActiveMonth = () => {\n                    if (needsiOSRubberBandFix) {\n                        calendarBodyRef.style.removeProperty('pointer-events');\n                        appliediOSRubberBandFix = false;\n                    }\n                    /**\n                     * If the month did not change\n                     * then we can return early.\n                     */\n                    const newDate = getChangedMonth(this.workingParts);\n                    if (!newDate)\n                        return;\n                    const { month, day, year } = newDate;\n                    if (isMonthDisabled({ month, year, day: null }, {\n                        minParts: Object.assign(Object.assign({}, this.minParts), { day: null }),\n                        maxParts: Object.assign(Object.assign({}, this.maxParts), { day: null }),\n                    })) {\n                        return;\n                    }\n                    /**\n                     * Prevent scrolling for other browsers\n                     * to give the DOM time to update and the container\n                     * time to properly snap.\n                     */\n                    calendarBodyRef.style.setProperty('overflow', 'hidden');\n                    /**\n                     * Use a writeTask here to ensure\n                     * that the state is updated and the\n                     * correct month is scrolled into view\n                     * in the same frame. This is not\n                     * typically a problem on newer devices\n                     * but older/slower device may have a flicker\n                     * if we did not do this.\n                     */\n                    writeTask(() => {\n                        this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { month, day: day, year }));\n                        calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n                        calendarBodyRef.style.removeProperty('overflow');\n                        if (this.resolveForceDateScrolling) {\n                            this.resolveForceDateScrolling();\n                        }\n                    });\n                };\n                /**\n                 * When the container finishes scrolling we\n                 * need to update the DOM with the selected month.\n                 */\n                let scrollTimeout;\n                /**\n                 * We do not want to attempt to set pointer-events\n                 * multiple times within a single swipe gesture as\n                 * that adds unnecessary work to the main thread.\n                 */\n                let appliediOSRubberBandFix = false;\n                const scrollCallback = () => {\n                    if (scrollTimeout) {\n                        clearTimeout(scrollTimeout);\n                    }\n                    /**\n                     * On iOS it is possible to quickly rubber band\n                     * the scroll area before the scroll timeout has fired.\n                     * This results in users reaching the end of the scrollable\n                     * container before the DOM has updated.\n                     * By setting `pointer-events: none` we can ensure that\n                     * subsequent swipes do not happen while the container\n                     * is snapping.\n                     */\n                    if (!appliediOSRubberBandFix && needsiOSRubberBandFix) {\n                        calendarBodyRef.style.setProperty('pointer-events', 'none');\n                        appliediOSRubberBandFix = true;\n                    }\n                    // Wait ~3 frames\n                    scrollTimeout = setTimeout(updateActiveMonth, 50);\n                };\n                calendarBodyRef.addEventListener('scroll', scrollCallback);\n                this.destroyCalendarListener = () => {\n                    calendarBodyRef.removeEventListener('scroll', scrollCallback);\n                };\n            });\n        };\n        /**\n         * Clean up all listeners except for the overlay\n         * listener. This is so that we can re-create the listeners\n         * if the datetime has been hidden/presented by a modal or popover.\n         */\n        this.destroyInteractionListeners = () => {\n            const { destroyCalendarListener, destroyKeyboardMO } = this;\n            if (destroyCalendarListener !== undefined) {\n                destroyCalendarListener();\n            }\n            if (destroyKeyboardMO !== undefined) {\n                destroyKeyboardMO();\n            }\n        };\n        this.processValue = (value) => {\n            const hasValue = value !== null && value !== undefined && (!Array.isArray(value) || value.length > 0);\n            const valueToProcess = hasValue ? parseDate(value) : this.defaultParts;\n            const { minParts, maxParts, workingParts, el } = this;\n            this.warnIfIncorrectValueUsage();\n            /**\n             * Return early if the value wasn't parsed correctly, such as\n             * if an improperly formatted date string was provided.\n             */\n            if (!valueToProcess) {\n                return;\n            }\n            /**\n             * Datetime should only warn of out of bounds values\n             * if set by the user. If the `value` is undefined,\n             * we will default to today's date which may be out\n             * of bounds. In this case, the warning makes it look\n             * like the developer did something wrong which is\n             * not true.\n             */\n            if (hasValue) {\n                warnIfValueOutOfBounds(valueToProcess, minParts, maxParts);\n            }\n            /**\n             * If there are multiple values, pick an arbitrary one to clamp to. This way,\n             * if the values are across months, we always show at least one of them. Note\n             * that the values don't necessarily have to be in order.\n             */\n            const singleValue = Array.isArray(valueToProcess) ? valueToProcess[0] : valueToProcess;\n            const targetValue = clampDate(singleValue, minParts, maxParts);\n            const { month, day, year, hour, minute } = targetValue;\n            const ampm = parseAmPm(hour);\n            /**\n             * Since `activeParts` indicates a value that\n             * been explicitly selected either by the\n             * user or the app, only update `activeParts`\n             * if the `value` property is set.\n             */\n            if (hasValue) {\n                if (Array.isArray(valueToProcess)) {\n                    this.activeParts = [...valueToProcess];\n                }\n                else {\n                    this.activeParts = {\n                        month,\n                        day,\n                        year,\n                        hour,\n                        minute,\n                        ampm,\n                    };\n                }\n            }\n            else {\n                /**\n                 * Reset the active parts if the value is not set.\n                 * This will clear the selected calendar day when\n                 * performing a clear action or using the reset() method.\n                 */\n                this.activeParts = [];\n            }\n            /**\n             * Only animate if:\n             * 1. We're using grid style (wheel style pickers should just jump to new value)\n             * 2. The month and/or year actually changed, and both are defined (otherwise there's nothing to animate to)\n             * 3. The calendar body is visible (prevents animation when in collapsed datetime-button, for example)\n             * 4. The month/year picker is not open (since you wouldn't see the animation anyway)\n             */\n            const didChangeMonth = (month !== undefined && month !== workingParts.month) || (year !== undefined && year !== workingParts.year);\n            const bodyIsVisible = el.classList.contains('datetime-ready');\n            const { isGridStyle, showMonthAndYear } = this;\n            let areAllSelectedDatesInSameMonth = true;\n            if (Array.isArray(valueToProcess)) {\n                const firstMonth = valueToProcess[0].month;\n                for (const date of valueToProcess) {\n                    if (date.month !== firstMonth) {\n                        areAllSelectedDatesInSameMonth = false;\n                        break;\n                    }\n                }\n            }\n            /**\n             * If there is more than one date selected\n             * and the dates aren't all in the same month,\n             * then we should neither animate to the date\n             * nor update the working parts because we do\n             * not know which date the user wants to view.\n             */\n            if (areAllSelectedDatesInSameMonth) {\n                if (isGridStyle && didChangeMonth && bodyIsVisible && !showMonthAndYear) {\n                    this.animateToDate(targetValue);\n                }\n                else {\n                    /**\n                     * We only need to do this if we didn't just animate to a new month,\n                     * since that calls prevMonth/nextMonth which calls setWorkingParts for us.\n                     */\n                    this.setWorkingParts({\n                        month,\n                        day,\n                        year,\n                        hour,\n                        minute,\n                        ampm,\n                    });\n                }\n            }\n        };\n        this.animateToDate = async (targetValue) => {\n            const { workingParts } = this;\n            /**\n             * Tell other render functions that we need to force the\n             * target month to appear in place of the actual next/prev month.\n             * Because this is a State variable, a rerender will be triggered\n             * automatically, updating the rendered months.\n             */\n            this.forceRenderDate = targetValue;\n            /**\n             * Flag that we've started scrolling to the forced date.\n             * The resolve function will be called by the datetime's\n             * scroll listener when it's done updating everything.\n             * This is a replacement for making prev/nextMonth async,\n             * since the logic we're waiting on is in a listener.\n             */\n            const forceDateScrollingPromise = new Promise((resolve) => {\n                this.resolveForceDateScrolling = resolve;\n            });\n            /**\n             * Animate smoothly to the forced month. This will also update\n             * workingParts and correct the surrounding months for us.\n             */\n            const targetMonthIsBefore = isBefore(targetValue, workingParts);\n            targetMonthIsBefore ? this.prevMonth() : this.nextMonth();\n            await forceDateScrollingPromise;\n            this.resolveForceDateScrolling = undefined;\n            this.forceRenderDate = undefined;\n        };\n        this.onFocus = () => {\n            this.ionFocus.emit();\n        };\n        this.onBlur = () => {\n            this.ionBlur.emit();\n        };\n        this.hasValue = () => {\n            return this.value != null;\n        };\n        this.nextMonth = () => {\n            const calendarBodyRef = this.calendarBodyRef;\n            if (!calendarBodyRef) {\n                return;\n            }\n            const nextMonth = calendarBodyRef.querySelector('.calendar-month:last-of-type');\n            if (!nextMonth) {\n                return;\n            }\n            const left = nextMonth.offsetWidth * 2;\n            calendarBodyRef.scrollTo({\n                top: 0,\n                left: left * (isRTL(this.el) ? -1 : 1),\n                behavior: 'smooth',\n            });\n        };\n        this.prevMonth = () => {\n            const calendarBodyRef = this.calendarBodyRef;\n            if (!calendarBodyRef) {\n                return;\n            }\n            const prevMonth = calendarBodyRef.querySelector('.calendar-month:first-of-type');\n            if (!prevMonth) {\n                return;\n            }\n            calendarBodyRef.scrollTo({\n                top: 0,\n                left: 0,\n                behavior: 'smooth',\n            });\n        };\n        this.toggleMonthAndYearView = () => {\n            this.showMonthAndYear = !this.showMonthAndYear;\n        };\n        this.showMonthAndYear = false;\n        this.activeParts = [];\n        this.workingParts = {\n            month: 5,\n            day: 28,\n            year: 2021,\n            hour: 13,\n            minute: 52,\n            ampm: 'pm',\n        };\n        this.isTimePopoverOpen = false;\n        this.forceRenderDate = undefined;\n        this.color = 'primary';\n        this.name = this.inputId;\n        this.disabled = false;\n        this.formatOptions = undefined;\n        this.readonly = false;\n        this.isDateEnabled = undefined;\n        this.min = undefined;\n        this.max = undefined;\n        this.presentation = 'date-time';\n        this.cancelText = 'Cancel';\n        this.doneText = 'Done';\n        this.clearText = 'Clear';\n        this.yearValues = undefined;\n        this.monthValues = undefined;\n        this.dayValues = undefined;\n        this.hourValues = undefined;\n        this.minuteValues = undefined;\n        this.locale = 'default';\n        this.firstDayOfWeek = 0;\n        this.titleSelectedDatesFormatter = undefined;\n        this.multiple = false;\n        this.highlightedDates = undefined;\n        this.value = undefined;\n        this.showDefaultTitle = false;\n        this.showDefaultButtons = false;\n        this.showClearButton = false;\n        this.showDefaultTimeLabel = true;\n        this.hourCycle = undefined;\n        this.size = 'fixed';\n        this.preferWheel = false;\n    }\n    formatOptionsChanged() {\n        const { el, formatOptions, presentation } = this;\n        checkForPresentationFormatMismatch(el, presentation, formatOptions);\n        warnIfTimeZoneProvided(el, formatOptions);\n    }\n    disabledChanged() {\n        this.emitStyle();\n    }\n    minChanged() {\n        this.processMinParts();\n    }\n    maxChanged() {\n        this.processMaxParts();\n    }\n    presentationChanged() {\n        const { el, formatOptions, presentation } = this;\n        checkForPresentationFormatMismatch(el, presentation, formatOptions);\n    }\n    get isGridStyle() {\n        const { presentation, preferWheel } = this;\n        const hasDatePresentation = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n        return hasDatePresentation && !preferWheel;\n    }\n    yearValuesChanged() {\n        this.parsedYearValues = convertToArrayOfNumbers(this.yearValues);\n    }\n    monthValuesChanged() {\n        this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues);\n    }\n    dayValuesChanged() {\n        this.parsedDayValues = convertToArrayOfNumbers(this.dayValues);\n    }\n    hourValuesChanged() {\n        this.parsedHourValues = convertToArrayOfNumbers(this.hourValues);\n    }\n    minuteValuesChanged() {\n        this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues);\n    }\n    /**\n     * Update the datetime value when the value changes\n     */\n    async valueChanged() {\n        const { value } = this;\n        if (this.hasValue()) {\n            this.processValue(value);\n        }\n        this.emitStyle();\n        this.ionValueChange.emit({ value });\n    }\n    /**\n     * Confirms the selected datetime value, updates the\n     * `value` property, and optionally closes the popover\n     * or modal that the datetime was presented in.\n     */\n    async confirm(closeOverlay = false) {\n        const { isCalendarPicker, activeParts, preferWheel, workingParts } = this;\n        /**\n         * We only update the value if the presentation is not a calendar picker.\n         */\n        if (activeParts !== undefined || !isCalendarPicker) {\n            const activePartsIsArray = Array.isArray(activeParts);\n            if (activePartsIsArray && activeParts.length === 0) {\n                if (preferWheel) {\n                    /**\n                     * If the datetime is using a wheel picker, but the\n                     * active parts are empty, then the user has confirmed the\n                     * initial value (working parts) presented to them.\n                     */\n                    this.setValue(convertDataToISO(workingParts));\n                }\n                else {\n                    this.setValue(undefined);\n                }\n            }\n            else {\n                this.setValue(convertDataToISO(activeParts));\n            }\n        }\n        if (closeOverlay) {\n            this.closeParentOverlay();\n        }\n    }\n    /**\n     * Resets the internal state of the datetime but does not update the value.\n     * Passing a valid ISO-8601 string will reset the state of the component to the provided date.\n     * If no value is provided, the internal state will be reset to the clamped value of the min, max and today.\n     */\n    async reset(startDate) {\n        this.processValue(startDate);\n    }\n    /**\n     * Emits the ionCancel event and\n     * optionally closes the popover\n     * or modal that the datetime was\n     * presented in.\n     */\n    async cancel(closeOverlay = false) {\n        this.ionCancel.emit();\n        if (closeOverlay) {\n            this.closeParentOverlay();\n        }\n    }\n    get isCalendarPicker() {\n        const { presentation } = this;\n        return presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n    }\n    connectedCallback() {\n        this.clearFocusVisible = startFocusVisible(this.el).destroy;\n    }\n    disconnectedCallback() {\n        if (this.clearFocusVisible) {\n            this.clearFocusVisible();\n            this.clearFocusVisible = undefined;\n        }\n    }\n    initializeListeners() {\n        this.initializeCalendarListener();\n        this.initializeKeyboardListeners();\n    }\n    componentDidLoad() {\n        const { el, intersectionTrackerRef } = this;\n        /**\n         * If a scrollable element is hidden using `display: none`,\n         * it will not have a scroll height meaning we cannot scroll elements\n         * into view. As a result, we will need to wait for the datetime to become\n         * visible if used inside of a modal or a popover otherwise the scrollable\n         * areas will not have the correct values snapped into place.\n         */\n        const visibleCallback = (entries) => {\n            const ev = entries[0];\n            if (!ev.isIntersecting) {\n                return;\n            }\n            this.initializeListeners();\n            /**\n             * TODO FW-2793: Datetime needs a frame to ensure that it\n             * can properly scroll contents into view. As a result\n             * we hide the scrollable content until after that frame\n             * so users do not see the content quickly shifting. The downside\n             * is that the content will pop into view a frame after. Maybe there\n             * is a better way to handle this?\n             */\n            writeTask(() => {\n                this.el.classList.add('datetime-ready');\n            });\n        };\n        const visibleIO = new IntersectionObserver(visibleCallback, { threshold: 0.01, root: el });\n        /**\n         * Use raf to avoid a race condition between the component loading and\n         * its display animation starting (such as when shown in a modal). This\n         * could cause the datetime to start at a visibility of 0, erroneously\n         * triggering the `hiddenIO` observer below.\n         */\n        raf(() => visibleIO === null || visibleIO === void 0 ? void 0 : visibleIO.observe(intersectionTrackerRef));\n        /**\n         * We need to clean up listeners when the datetime is hidden\n         * in a popover/modal so that we can properly scroll containers\n         * back into view if they are re-presented. When the datetime is hidden\n         * the scroll areas have scroll widths/heights of 0px, so any snapping\n         * we did originally has been lost.\n         */\n        const hiddenCallback = (entries) => {\n            const ev = entries[0];\n            if (ev.isIntersecting) {\n                return;\n            }\n            this.destroyInteractionListeners();\n            /**\n             * When datetime is hidden, we need to make sure that\n             * the month/year picker is closed. Otherwise,\n             * it will be open when the datetime re-appears\n             * and the scroll area of the calendar grid will be 0.\n             * As a result, the wrong month will be shown.\n             */\n            this.showMonthAndYear = false;\n            writeTask(() => {\n                this.el.classList.remove('datetime-ready');\n            });\n        };\n        const hiddenIO = new IntersectionObserver(hiddenCallback, { threshold: 0, root: el });\n        raf(() => hiddenIO === null || hiddenIO === void 0 ? void 0 : hiddenIO.observe(intersectionTrackerRef));\n        /**\n         * Datetime uses Ionic components that emit\n         * ionFocus and ionBlur. These events are\n         * composed meaning they will cross\n         * the shadow dom boundary. We need to\n         * stop propagation on these events otherwise\n         * developers will see 2 ionFocus or 2 ionBlur\n         * events at a time.\n         */\n        const root = getElementRoot(this.el);\n        root.addEventListener('ionFocus', (ev) => ev.stopPropagation());\n        root.addEventListener('ionBlur', (ev) => ev.stopPropagation());\n    }\n    /**\n     * When the presentation is changed, all calendar content is recreated,\n     * so we need to re-init behavior with the new elements.\n     */\n    componentDidRender() {\n        const { presentation, prevPresentation, calendarBodyRef, minParts, preferWheel, forceRenderDate } = this;\n        /**\n         * TODO(FW-2165)\n         * Remove this when https://bugs.webkit.org/show_bug.cgi?id=235960 is fixed.\n         * When using `min`, we add `scroll-snap-align: none`\n         * to the disabled month so that users cannot scroll to it.\n         * This triggers a bug in WebKit where the scroll position is reset.\n         * Since the month change logic is handled by a scroll listener,\n         * this causes the month to change leading to `scroll-snap-align`\n         * changing again, thus changing the scroll position again and causing\n         * an infinite loop.\n         * This issue only applies to the calendar grid, so we can disable\n         * it if the calendar grid is not being used.\n         */\n        const hasCalendarGrid = !preferWheel && ['date-time', 'time-date', 'date'].includes(presentation);\n        if (minParts !== undefined && hasCalendarGrid && calendarBodyRef) {\n            const workingMonth = calendarBodyRef.querySelector('.calendar-month:nth-of-type(1)');\n            /**\n             * We need to make sure the datetime is not in the process\n             * of scrolling to a new datetime value if the value\n             * is updated programmatically.\n             * Otherwise, the datetime will appear to not scroll at all because\n             * we are resetting the scroll position to the center of the view.\n             * Prior to the datetime's value being updated programmatically,\n             * the calendarBodyRef is scrolled such that the middle month is centered\n             * in the view. The below code updates the scroll position so the middle\n             * month is also centered in the view. Since the scroll position did not change,\n             * the scroll callback in this file does not fire,\n             * and the resolveForceDateScrolling promise never resolves.\n             */\n            if (workingMonth && forceRenderDate === undefined) {\n                calendarBodyRef.scrollLeft = workingMonth.clientWidth * (isRTL(this.el) ? -1 : 1);\n            }\n        }\n        if (prevPresentation === null) {\n            this.prevPresentation = presentation;\n            return;\n        }\n        if (presentation === prevPresentation) {\n            return;\n        }\n        this.prevPresentation = presentation;\n        this.destroyInteractionListeners();\n        this.initializeListeners();\n        /**\n         * The month/year picker from the date interface\n         * should be closed as it is not available in non-date\n         * interfaces.\n         */\n        this.showMonthAndYear = false;\n        raf(() => {\n            this.ionRender.emit();\n        });\n    }\n    componentWillLoad() {\n        const { el, formatOptions, highlightedDates, multiple, presentation, preferWheel } = this;\n        if (multiple) {\n            if (presentation !== 'date') {\n                printIonWarning('Multiple date selection is only supported for presentation=\"date\".', el);\n            }\n            if (preferWheel) {\n                printIonWarning('Multiple date selection is not supported with preferWheel=\"true\".', el);\n            }\n        }\n        if (highlightedDates !== undefined) {\n            if (presentation !== 'date' && presentation !== 'date-time' && presentation !== 'time-date') {\n                printIonWarning('The highlightedDates property is only supported with the date, date-time, and time-date presentations.', el);\n            }\n            if (preferWheel) {\n                printIonWarning('The highlightedDates property is not supported with preferWheel=\"true\".', el);\n            }\n        }\n        if (formatOptions) {\n            checkForPresentationFormatMismatch(el, presentation, formatOptions);\n            warnIfTimeZoneProvided(el, formatOptions);\n        }\n        const hourValues = (this.parsedHourValues = convertToArrayOfNumbers(this.hourValues));\n        const minuteValues = (this.parsedMinuteValues = convertToArrayOfNumbers(this.minuteValues));\n        const monthValues = (this.parsedMonthValues = convertToArrayOfNumbers(this.monthValues));\n        const yearValues = (this.parsedYearValues = convertToArrayOfNumbers(this.yearValues));\n        const dayValues = (this.parsedDayValues = convertToArrayOfNumbers(this.dayValues));\n        const todayParts = (this.todayParts = parseDate(getToday()));\n        this.processMinParts();\n        this.processMaxParts();\n        this.defaultParts = getClosestValidDate({\n            refParts: todayParts,\n            monthValues,\n            dayValues,\n            yearValues,\n            hourValues,\n            minuteValues,\n            minParts: this.minParts,\n            maxParts: this.maxParts,\n        });\n        this.processValue(this.value);\n        this.emitStyle();\n    }\n    emitStyle() {\n        this.ionStyle.emit({\n            interactive: true,\n            datetime: true,\n            'interactive-disabled': this.disabled,\n        });\n    }\n    /**\n     * Universal render methods\n     * These are pieces of datetime that\n     * are rendered independently of presentation.\n     */\n    renderFooter() {\n        const { disabled, readonly, showDefaultButtons, showClearButton } = this;\n        /**\n         * The cancel, clear, and confirm buttons\n         * should not be interactive if the datetime\n         * is disabled or readonly.\n         */\n        const isButtonDisabled = disabled || readonly;\n        const hasSlottedButtons = this.el.querySelector('[slot=\"buttons\"]') !== null;\n        if (!hasSlottedButtons && !showDefaultButtons && !showClearButton) {\n            return;\n        }\n        const clearButtonClick = () => {\n            this.reset();\n            this.setValue(undefined);\n        };\n        /**\n         * By default we render two buttons:\n         * Cancel - Dismisses the datetime and\n         * does not update the `value` prop.\n         * OK - Dismisses the datetime and\n         * updates the `value` prop.\n         */\n        return (h(\"div\", { class: \"datetime-footer\" }, h(\"div\", { class: \"datetime-buttons\" }, h(\"div\", { class: {\n                ['datetime-action-buttons']: true,\n                ['has-clear-button']: this.showClearButton,\n            } }, h(\"slot\", { name: \"buttons\" }, h(\"ion-buttons\", null, showDefaultButtons && (h(\"ion-button\", { id: \"cancel-button\", color: this.color, onClick: () => this.cancel(true), disabled: isButtonDisabled }, this.cancelText)), h(\"div\", { class: \"datetime-action-buttons-container\" }, showClearButton && (h(\"ion-button\", { id: \"clear-button\", color: this.color, onClick: () => clearButtonClick(), disabled: isButtonDisabled }, this.clearText)), showDefaultButtons && (h(\"ion-button\", { id: \"confirm-button\", color: this.color, onClick: () => this.confirm(true), disabled: isButtonDisabled }, this.doneText)))))))));\n    }\n    /**\n     * Wheel picker render methods\n     */\n    renderWheelPicker(forcePresentation = this.presentation) {\n        /**\n         * If presentation=\"time-date\" we switch the\n         * order of the render array here instead of\n         * manually reordering each date/time picker\n         * column with CSS. This allows for additional\n         * flexibility if we need to render subsets\n         * of the date/time data or do additional ordering\n         * within the child render functions.\n         */\n        const renderArray = forcePresentation === 'time-date'\n            ? [this.renderTimePickerColumns(forcePresentation), this.renderDatePickerColumns(forcePresentation)]\n            : [this.renderDatePickerColumns(forcePresentation), this.renderTimePickerColumns(forcePresentation)];\n        return h(\"ion-picker-internal\", null, renderArray);\n    }\n    renderDatePickerColumns(forcePresentation) {\n        return forcePresentation === 'date-time' || forcePresentation === 'time-date'\n            ? this.renderCombinedDatePickerColumn()\n            : this.renderIndividualDatePickerColumns(forcePresentation);\n    }\n    renderCombinedDatePickerColumn() {\n        const { defaultParts, disabled, workingParts, locale, minParts, maxParts, todayParts, isDateEnabled } = this;\n        const activePart = this.getActivePartsWithFallback();\n        /**\n         * By default, generate a range of 3 months:\n         * Previous month, current month, and next month\n         */\n        const monthsToRender = generateMonths(workingParts);\n        const lastMonth = monthsToRender[monthsToRender.length - 1];\n        /**\n         * Ensure that users can select the entire window of dates.\n         */\n        monthsToRender[0].day = 1;\n        lastMonth.day = getNumDaysInMonth(lastMonth.month, lastMonth.year);\n        /**\n         * Narrow the dates rendered based on min/max dates (if any).\n         * The `min` date is used if the min is after the generated min month.\n         * The `max` date is used if the max is before the generated max month.\n         * This ensures that the sliding window always stays at 3 months\n         * but still allows future dates to be lazily rendered based on any min/max\n         * constraints.\n         */\n        const min = minParts !== undefined && isAfter(minParts, monthsToRender[0]) ? minParts : monthsToRender[0];\n        const max = maxParts !== undefined && isBefore(maxParts, lastMonth) ? maxParts : lastMonth;\n        const result = getCombinedDateColumnData(locale, todayParts, min, max, this.parsedDayValues, this.parsedMonthValues);\n        let items = result.items;\n        const parts = result.parts;\n        if (isDateEnabled) {\n            items = items.map((itemObject, index) => {\n                const referenceParts = parts[index];\n                let disabled;\n                try {\n                    /**\n                     * The `isDateEnabled` implementation is try-catch wrapped\n                     * to prevent exceptions in the user's function from\n                     * interrupting the calendar rendering.\n                     */\n                    disabled = !isDateEnabled(convertDataToISO(referenceParts));\n                }\n                catch (e) {\n                    printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n                }\n                return Object.assign(Object.assign({}, itemObject), { disabled });\n            });\n        }\n        /**\n         * If we have selected a day already, then default the column\n         * to that value. Otherwise, set it to the default date.\n         */\n        const todayString = workingParts.day !== null\n            ? `${workingParts.year}-${workingParts.month}-${workingParts.day}`\n            : `${defaultParts.year}-${defaultParts.month}-${defaultParts.day}`;\n        return (h(\"ion-picker-column-internal\", { class: \"date-column\", color: this.color, disabled: disabled, items: items, value: todayString, onIonChange: (ev) => {\n                // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n                // Due to a Safari 14 issue we need to destroy\n                // the scroll listener before we update state\n                // and trigger a re-render.\n                if (this.destroyCalendarListener) {\n                    this.destroyCalendarListener();\n                }\n                const { value } = ev.detail;\n                const findPart = parts.find(({ month, day, year }) => value === `${year}-${month}-${day}`);\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), findPart));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), findPart));\n                // We can re-attach the scroll listener after\n                // the working parts have been updated.\n                this.initializeCalendarListener();\n                ev.stopPropagation();\n            } }));\n    }\n    renderIndividualDatePickerColumns(forcePresentation) {\n        const { workingParts, isDateEnabled } = this;\n        const shouldRenderMonths = forcePresentation !== 'year' && forcePresentation !== 'time';\n        const months = shouldRenderMonths\n            ? getMonthColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedMonthValues)\n            : [];\n        const shouldRenderDays = forcePresentation === 'date';\n        let days = shouldRenderDays\n            ? getDayColumnData(this.locale, workingParts, this.minParts, this.maxParts, this.parsedDayValues)\n            : [];\n        if (isDateEnabled) {\n            days = days.map((dayObject) => {\n                const { value } = dayObject;\n                const valueNum = typeof value === 'string' ? parseInt(value) : value;\n                const referenceParts = {\n                    month: workingParts.month,\n                    day: valueNum,\n                    year: workingParts.year,\n                };\n                let disabled;\n                try {\n                    /**\n                     * The `isDateEnabled` implementation is try-catch wrapped\n                     * to prevent exceptions in the user's function from\n                     * interrupting the calendar rendering.\n                     */\n                    disabled = !isDateEnabled(convertDataToISO(referenceParts));\n                }\n                catch (e) {\n                    printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', e);\n                }\n                return Object.assign(Object.assign({}, dayObject), { disabled });\n            });\n        }\n        const shouldRenderYears = forcePresentation !== 'month' && forcePresentation !== 'time';\n        const years = shouldRenderYears\n            ? getYearColumnData(this.locale, this.defaultParts, this.minParts, this.maxParts, this.parsedYearValues)\n            : [];\n        /**\n         * Certain locales show the day before the month.\n         */\n        const showMonthFirst = isMonthFirstLocale(this.locale, { month: 'numeric', day: 'numeric' });\n        let renderArray = [];\n        if (showMonthFirst) {\n            renderArray = [\n                this.renderMonthPickerColumn(months),\n                this.renderDayPickerColumn(days),\n                this.renderYearPickerColumn(years),\n            ];\n        }\n        else {\n            renderArray = [\n                this.renderDayPickerColumn(days),\n                this.renderMonthPickerColumn(months),\n                this.renderYearPickerColumn(years),\n            ];\n        }\n        return renderArray;\n    }\n    renderDayPickerColumn(days) {\n        var _a;\n        if (days.length === 0) {\n            return [];\n        }\n        const { disabled, workingParts } = this;\n        const activePart = this.getActivePartsWithFallback();\n        return (h(\"ion-picker-column-internal\", { class: \"day-column\", color: this.color, disabled: disabled, items: days, value: (_a = (workingParts.day !== null ? workingParts.day : this.defaultParts.day)) !== null && _a !== void 0 ? _a : undefined, onIonChange: (ev) => {\n                // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n                // Due to a Safari 14 issue we need to destroy\n                // the scroll listener before we update state\n                // and trigger a re-render.\n                if (this.destroyCalendarListener) {\n                    this.destroyCalendarListener();\n                }\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { day: ev.detail.value }));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), { day: ev.detail.value }));\n                // We can re-attach the scroll listener after\n                // the working parts have been updated.\n                this.initializeCalendarListener();\n                ev.stopPropagation();\n            } }));\n    }\n    renderMonthPickerColumn(months) {\n        if (months.length === 0) {\n            return [];\n        }\n        const { disabled, workingParts } = this;\n        const activePart = this.getActivePartsWithFallback();\n        return (h(\"ion-picker-column-internal\", { class: \"month-column\", color: this.color, disabled: disabled, items: months, value: workingParts.month, onIonChange: (ev) => {\n                // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n                // Due to a Safari 14 issue we need to destroy\n                // the scroll listener before we update state\n                // and trigger a re-render.\n                if (this.destroyCalendarListener) {\n                    this.destroyCalendarListener();\n                }\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { month: ev.detail.value }));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), { month: ev.detail.value }));\n                // We can re-attach the scroll listener after\n                // the working parts have been updated.\n                this.initializeCalendarListener();\n                ev.stopPropagation();\n            } }));\n    }\n    renderYearPickerColumn(years) {\n        if (years.length === 0) {\n            return [];\n        }\n        const { disabled, workingParts } = this;\n        const activePart = this.getActivePartsWithFallback();\n        return (h(\"ion-picker-column-internal\", { class: \"year-column\", color: this.color, disabled: disabled, items: years, value: workingParts.year, onIonChange: (ev) => {\n                // TODO(FW-1823) Remove this when iOS 14 support is dropped.\n                // Due to a Safari 14 issue we need to destroy\n                // the scroll listener before we update state\n                // and trigger a re-render.\n                if (this.destroyCalendarListener) {\n                    this.destroyCalendarListener();\n                }\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { year: ev.detail.value }));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), { year: ev.detail.value }));\n                // We can re-attach the scroll listener after\n                // the working parts have been updated.\n                this.initializeCalendarListener();\n                ev.stopPropagation();\n            } }));\n    }\n    renderTimePickerColumns(forcePresentation) {\n        if (['date', 'month', 'month-year', 'year'].includes(forcePresentation)) {\n            return [];\n        }\n        /**\n         * If a user has not selected a date,\n         * then we should show all times. If the\n         * user has selected a date (even if it has\n         * not been confirmed yet), we should apply\n         * the max and min restrictions so that the\n         * time picker shows values that are\n         * appropriate for the selected date.\n         */\n        const activePart = this.getActivePart();\n        const userHasSelectedDate = activePart !== undefined;\n        const { hoursData, minutesData, dayPeriodData } = getTimeColumnsData(this.locale, this.workingParts, this.hourCycle, userHasSelectedDate ? this.minParts : undefined, userHasSelectedDate ? this.maxParts : undefined, this.parsedHourValues, this.parsedMinuteValues);\n        return [\n            this.renderHourPickerColumn(hoursData),\n            this.renderMinutePickerColumn(minutesData),\n            this.renderDayPeriodPickerColumn(dayPeriodData),\n        ];\n    }\n    renderHourPickerColumn(hoursData) {\n        const { disabled, workingParts } = this;\n        if (hoursData.length === 0)\n            return [];\n        const activePart = this.getActivePartsWithFallback();\n        return (h(\"ion-picker-column-internal\", { color: this.color, disabled: disabled, value: activePart.hour, items: hoursData, numericInput: true, onIonChange: (ev) => {\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { hour: ev.detail.value }));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), { hour: ev.detail.value }));\n                ev.stopPropagation();\n            } }));\n    }\n    renderMinutePickerColumn(minutesData) {\n        const { disabled, workingParts } = this;\n        if (minutesData.length === 0)\n            return [];\n        const activePart = this.getActivePartsWithFallback();\n        return (h(\"ion-picker-column-internal\", { color: this.color, disabled: disabled, value: activePart.minute, items: minutesData, numericInput: true, onIonChange: (ev) => {\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { minute: ev.detail.value }));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), { minute: ev.detail.value }));\n                ev.stopPropagation();\n            } }));\n    }\n    renderDayPeriodPickerColumn(dayPeriodData) {\n        const { disabled, workingParts } = this;\n        if (dayPeriodData.length === 0) {\n            return [];\n        }\n        const activePart = this.getActivePartsWithFallback();\n        const isDayPeriodRTL = isLocaleDayPeriodRTL(this.locale);\n        return (h(\"ion-picker-column-internal\", { style: isDayPeriodRTL ? { order: '-1' } : {}, color: this.color, disabled: disabled, value: activePart.ampm, items: dayPeriodData, onIonChange: (ev) => {\n                const hour = calculateHourFromAMPM(workingParts, ev.detail.value);\n                this.setWorkingParts(Object.assign(Object.assign({}, workingParts), { ampm: ev.detail.value, hour }));\n                this.setActiveParts(Object.assign(Object.assign({}, activePart), { ampm: ev.detail.value, hour }));\n                ev.stopPropagation();\n            } }));\n    }\n    renderWheelView(forcePresentation) {\n        const { locale } = this;\n        const showMonthFirst = isMonthFirstLocale(locale);\n        const columnOrder = showMonthFirst ? 'month-first' : 'year-first';\n        return (h(\"div\", { class: {\n                [`wheel-order-${columnOrder}`]: true,\n            } }, this.renderWheelPicker(forcePresentation)));\n    }\n    /**\n     * Grid Render Methods\n     */\n    renderCalendarHeader(mode) {\n        const { disabled } = this;\n        const expandedIcon = mode === 'ios' ? chevronDown : caretUpSharp;\n        const collapsedIcon = mode === 'ios' ? chevronForward : caretDownSharp;\n        const prevMonthDisabled = disabled || isPrevMonthDisabled(this.workingParts, this.minParts, this.maxParts);\n        const nextMonthDisabled = disabled || isNextMonthDisabled(this.workingParts, this.maxParts);\n        // don't use the inheritAttributes util because it removes dir from the host, and we still need that\n        const hostDir = this.el.getAttribute('dir') || undefined;\n        return (h(\"div\", { class: \"calendar-header\" }, h(\"div\", { class: \"calendar-action-buttons\" }, h(\"div\", { class: \"calendar-month-year\" }, h(\"ion-item\", { part: \"month-year-button\", ref: (el) => (this.monthYearToggleItemRef = el), button: true, \"aria-label\": \"Show year picker\", detail: false, lines: \"none\", disabled: disabled, onClick: () => {\n                var _a;\n                this.toggleMonthAndYearView();\n                /**\n                 * TODO: FW-3547\n                 *\n                 * Currently there is not a way to set the aria-label on the inner button\n                 * on the `ion-item` and have it be reactive to changes. This is a workaround\n                 * until we either refactor `ion-item` to a button or Stencil adds a way to\n                 * have reactive props for built-in properties, such as `aria-label`.\n                 */\n                const { monthYearToggleItemRef } = this;\n                if (monthYearToggleItemRef) {\n                    const btn = (_a = monthYearToggleItemRef.shadowRoot) === null || _a === void 0 ? void 0 : _a.querySelector('.item-native');\n                    if (btn) {\n                        const monthYearAriaLabel = this.showMonthAndYear ? 'Hide year picker' : 'Show year picker';\n                        btn.setAttribute('aria-label', monthYearAriaLabel);\n                    }\n                }\n            } }, h(\"ion-label\", null, getMonthAndYear(this.locale, this.workingParts), h(\"ion-icon\", { \"aria-hidden\": \"true\", icon: this.showMonthAndYear ? expandedIcon : collapsedIcon, lazy: false, flipRtl: true })))), h(\"div\", { class: \"calendar-next-prev\" }, h(\"ion-buttons\", null, h(\"ion-button\", { \"aria-label\": \"Previous month\", disabled: prevMonthDisabled, onClick: () => this.prevMonth() }, h(\"ion-icon\", { dir: hostDir, \"aria-hidden\": \"true\", slot: \"icon-only\", icon: chevronBack, lazy: false, flipRtl: true })), h(\"ion-button\", { \"aria-label\": \"Next month\", disabled: nextMonthDisabled, onClick: () => this.nextMonth() }, h(\"ion-icon\", { dir: hostDir, \"aria-hidden\": \"true\", slot: \"icon-only\", icon: chevronForward, lazy: false, flipRtl: true }))))), h(\"div\", { class: \"calendar-days-of-week\", \"aria-hidden\": \"true\" }, getDaysOfWeek(this.locale, mode, this.firstDayOfWeek % 7).map((d) => {\n            return h(\"div\", { class: \"day-of-week\" }, d);\n        }))));\n    }\n    renderMonth(month, year) {\n        const { disabled, readonly } = this;\n        const yearAllowed = this.parsedYearValues === undefined || this.parsedYearValues.includes(year);\n        const monthAllowed = this.parsedMonthValues === undefined || this.parsedMonthValues.includes(month);\n        const isCalMonthDisabled = !yearAllowed || !monthAllowed;\n        const isDatetimeDisabled = disabled || readonly;\n        const swipeDisabled = disabled ||\n            isMonthDisabled({\n                month,\n                year,\n                day: null,\n            }, {\n                // The day is not used when checking if a month is disabled.\n                // Users should be able to access the min or max month, even if the\n                // min/max date is out of bounds (e.g. min is set to Feb 15, Feb should not be disabled).\n                minParts: Object.assign(Object.assign({}, this.minParts), { day: null }),\n                maxParts: Object.assign(Object.assign({}, this.maxParts), { day: null }),\n            });\n        // The working month should never have swipe disabled.\n        // Otherwise the CSS scroll snap will not work and the user\n        // can free-scroll the calendar.\n        const isWorkingMonth = this.workingParts.month === month && this.workingParts.year === year;\n        const activePart = this.getActivePartsWithFallback();\n        return (h(\"div\", { \"aria-hidden\": !isWorkingMonth ? 'true' : null, class: {\n                'calendar-month': true,\n                // Prevents scroll snap swipe gestures for months outside of the min/max bounds\n                'calendar-month-disabled': !isWorkingMonth && swipeDisabled,\n            } }, h(\"div\", { class: \"calendar-month-grid\" }, getDaysOfMonth(month, year, this.firstDayOfWeek % 7).map((dateObject, index) => {\n            const { day, dayOfWeek } = dateObject;\n            const { el, highlightedDates, isDateEnabled, multiple } = this;\n            const referenceParts = { month, day, year };\n            const isCalendarPadding = day === null;\n            const { isActive, isToday, ariaLabel, ariaSelected, disabled: isDayDisabled, text, } = getCalendarDayState(this.locale, referenceParts, this.activeParts, this.todayParts, this.minParts, this.maxParts, this.parsedDayValues);\n            const dateIsoString = convertDataToISO(referenceParts);\n            let isCalDayDisabled = isCalMonthDisabled || isDayDisabled;\n            if (!isCalDayDisabled && isDateEnabled !== undefined) {\n                try {\n                    /**\n                     * The `isDateEnabled` implementation is try-catch wrapped\n                     * to prevent exceptions in the user's function from\n                     * interrupting the calendar rendering.\n                     */\n                    isCalDayDisabled = !isDateEnabled(dateIsoString);\n                }\n                catch (e) {\n                    printIonError('Exception thrown from provided `isDateEnabled` function. Please check your function and try again.', el, e);\n                }\n            }\n            /**\n             * Some days are constrained through max & min or allowed dates\n             * and also disabled because the component is readonly or disabled.\n             * These need to be displayed differently.\n             */\n            const isCalDayConstrained = isCalDayDisabled && isDatetimeDisabled;\n            const isButtonDisabled = isCalDayDisabled || isDatetimeDisabled;\n            let dateStyle = undefined;\n            /**\n             * Custom highlight styles should not override the style for selected dates,\n             * nor apply to \"filler days\" at the start of the grid.\n             */\n            if (highlightedDates !== undefined && !isActive && day !== null) {\n                dateStyle = getHighlightStyles(highlightedDates, dateIsoString, el);\n            }\n            let dateParts = undefined;\n            // \"Filler days\" at the beginning of the grid should not get the calendar day\n            // CSS parts added to them\n            if (!isCalendarPadding) {\n                dateParts = `calendar-day${isActive ? ' active' : ''}${isToday ? ' today' : ''}${isCalDayDisabled ? ' disabled' : ''}`;\n            }\n            return (h(\"div\", { class: \"calendar-day-wrapper\" }, h(\"button\", {\n                // We need to use !important for the inline styles here because\n                // otherwise the CSS shadow parts will override these styles.\n                // See https://github.com/WICG/webcomponents/issues/847\n                // Both the CSS shadow parts and highlightedDates styles are\n                // provided by the developer, but highlightedDates styles should\n                // always take priority.\n                ref: (el) => {\n                    if (el) {\n                        el.style.setProperty('color', `${dateStyle ? dateStyle.textColor : ''}`, 'important');\n                        el.style.setProperty('background-color', `${dateStyle ? dateStyle.backgroundColor : ''}`, 'important');\n                    }\n                }, tabindex: \"-1\", \"data-day\": day, \"data-month\": month, \"data-year\": year, \"data-index\": index, \"data-day-of-week\": dayOfWeek, disabled: isButtonDisabled, class: {\n                    'calendar-day-padding': isCalendarPadding,\n                    'calendar-day': true,\n                    'calendar-day-active': isActive,\n                    'calendar-day-constrained': isCalDayConstrained,\n                    'calendar-day-today': isToday,\n                }, part: dateParts, \"aria-hidden\": isCalendarPadding ? 'true' : null, \"aria-selected\": ariaSelected, \"aria-label\": ariaLabel, onClick: () => {\n                    if (isCalendarPadding) {\n                        return;\n                    }\n                    this.setWorkingParts(Object.assign(Object.assign({}, this.workingParts), { month,\n                        day,\n                        year }));\n                    // multiple only needs date info, so we can wipe out other fields like time\n                    if (multiple) {\n                        this.setActiveParts({\n                            month,\n                            day,\n                            year,\n                        }, isActive);\n                    }\n                    else {\n                        this.setActiveParts(Object.assign(Object.assign({}, activePart), { month,\n                            day,\n                            year }));\n                    }\n                }\n            }, text)));\n        }))));\n    }\n    renderCalendarBody() {\n        return (h(\"div\", { class: \"calendar-body ion-focusable\", ref: (el) => (this.calendarBodyRef = el), tabindex: \"0\" }, generateMonths(this.workingParts, this.forceRenderDate).map(({ month, year }) => {\n            return this.renderMonth(month, year);\n        })));\n    }\n    renderCalendar(mode) {\n        return (h(\"div\", { class: \"datetime-calendar\", key: \"datetime-calendar\" }, this.renderCalendarHeader(mode), this.renderCalendarBody()));\n    }\n    renderTimeLabel() {\n        const hasSlottedTimeLabel = this.el.querySelector('[slot=\"time-label\"]') !== null;\n        if (!hasSlottedTimeLabel && !this.showDefaultTimeLabel) {\n            return;\n        }\n        return h(\"slot\", { name: \"time-label\" }, \"Time\");\n    }\n    renderTimeOverlay() {\n        const { disabled, hourCycle, isTimePopoverOpen, locale, formatOptions } = this;\n        const computedHourCycle = getHourCycle(locale, hourCycle);\n        const activePart = this.getActivePartsWithFallback();\n        return [\n            h(\"div\", { class: \"time-header\" }, this.renderTimeLabel()),\n            h(\"button\", { class: {\n                    'time-body': true,\n                    'time-body-active': isTimePopoverOpen,\n                }, part: `time-button${isTimePopoverOpen ? ' active' : ''}`, \"aria-expanded\": \"false\", \"aria-haspopup\": \"true\", disabled: disabled, onClick: async (ev) => {\n                    const { popoverRef } = this;\n                    if (popoverRef) {\n                        this.isTimePopoverOpen = true;\n                        popoverRef.present(new CustomEvent('ionShadowTarget', {\n                            detail: {\n                                ionShadowTarget: ev.target,\n                            },\n                        }));\n                        await popoverRef.onWillDismiss();\n                        this.isTimePopoverOpen = false;\n                    }\n                } }, getLocalizedTime(locale, activePart, computedHourCycle, formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.time)),\n            h(\"ion-popover\", { alignment: \"center\", translucent: true, overlayIndex: 1, arrow: false, onWillPresent: (ev) => {\n                    /**\n                     * Intersection Observers do not consistently fire between Blink and Webkit\n                     * when toggling the visibility of the popover and trying to scroll the picker\n                     * column to the correct time value.\n                     *\n                     * This will correctly scroll the element position to the correct time value,\n                     * before the popover is fully presented.\n                     */\n                    const cols = ev.target.querySelectorAll('ion-picker-column-internal');\n                    // TODO (FW-615): Potentially remove this when intersection observers are fixed in picker column\n                    cols.forEach((col) => col.scrollActiveItemIntoView());\n                }, style: {\n                    '--offset-y': '-10px',\n                    '--min-width': 'fit-content',\n                },\n                // Allow native browser keyboard events to support up/down/home/end key\n                // navigation within the time picker.\n                keyboardEvents: true, ref: (el) => (this.popoverRef = el) }, this.renderWheelPicker('time')),\n        ];\n    }\n    getHeaderSelectedDateText() {\n        var _a;\n        const { activeParts, formatOptions, multiple, titleSelectedDatesFormatter } = this;\n        const isArray = Array.isArray(activeParts);\n        let headerText;\n        if (multiple && isArray && activeParts.length !== 1) {\n            headerText = `${activeParts.length} days`; // default/fallback for multiple selection\n            if (titleSelectedDatesFormatter !== undefined) {\n                try {\n                    headerText = titleSelectedDatesFormatter(convertDataToISO(activeParts));\n                }\n                catch (e) {\n                    printIonError('Exception in provided `titleSelectedDatesFormatter`: ', e);\n                }\n            }\n        }\n        else {\n            // for exactly 1 day selected (multiple set or not), show a formatted version of that\n            headerText = getLocalizedDateTime(this.locale, this.getActivePartsWithFallback(), (_a = formatOptions === null || formatOptions === void 0 ? void 0 : formatOptions.date) !== null && _a !== void 0 ? _a : { weekday: 'short', month: 'short', day: 'numeric' });\n        }\n        return headerText;\n    }\n    renderHeader(showExpandedHeader = true) {\n        const hasSlottedTitle = this.el.querySelector('[slot=\"title\"]') !== null;\n        if (!hasSlottedTitle && !this.showDefaultTitle) {\n            return;\n        }\n        return (h(\"div\", { class: \"datetime-header\" }, h(\"div\", { class: \"datetime-title\" }, h(\"slot\", { name: \"title\" }, \"Select Date\")), showExpandedHeader && h(\"div\", { class: \"datetime-selected-date\" }, this.getHeaderSelectedDateText())));\n    }\n    /**\n     * Render time picker inside of datetime.\n     * Do not pass color prop to segment on\n     * iOS mode. MD segment has been customized and\n     * should take on the color prop, but iOS\n     * should just be the default segment.\n     */\n    renderTime() {\n        const { presentation } = this;\n        const timeOnlyPresentation = presentation === 'time';\n        return (h(\"div\", { class: \"datetime-time\" }, timeOnlyPresentation ? this.renderWheelPicker() : this.renderTimeOverlay()));\n    }\n    /**\n     * Renders the month/year picker that is\n     * displayed on the calendar grid.\n     * The .datetime-year class has additional\n     * styles that let us show/hide the\n     * picker when the user clicks on the\n     * toggle in the calendar header.\n     */\n    renderCalendarViewMonthYearPicker() {\n        return h(\"div\", { class: \"datetime-year\" }, this.renderWheelView('month-year'));\n    }\n    /**\n     * Render entry point\n     * All presentation types are rendered from here.\n     */\n    renderDatetime(mode) {\n        const { presentation, preferWheel } = this;\n        /**\n         * Certain presentation types have separate grid and wheel displays.\n         * If preferWheel is true then we should show a wheel picker instead.\n         */\n        const hasWheelVariant = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n        if (preferWheel && hasWheelVariant) {\n            return [this.renderHeader(false), this.renderWheelView(), this.renderFooter()];\n        }\n        switch (presentation) {\n            case 'date-time':\n                return [\n                    this.renderHeader(),\n                    this.renderCalendar(mode),\n                    this.renderCalendarViewMonthYearPicker(),\n                    this.renderTime(),\n                    this.renderFooter(),\n                ];\n            case 'time-date':\n                return [\n                    this.renderHeader(),\n                    this.renderTime(),\n                    this.renderCalendar(mode),\n                    this.renderCalendarViewMonthYearPicker(),\n                    this.renderFooter(),\n                ];\n            case 'time':\n                return [this.renderHeader(false), this.renderTime(), this.renderFooter()];\n            case 'month':\n            case 'month-year':\n            case 'year':\n                return [this.renderHeader(false), this.renderWheelView(), this.renderFooter()];\n            default:\n                return [\n                    this.renderHeader(),\n                    this.renderCalendar(mode),\n                    this.renderCalendarViewMonthYearPicker(),\n                    this.renderFooter(),\n                ];\n        }\n    }\n    render() {\n        const { name, value, disabled, el, color, readonly, showMonthAndYear, preferWheel, presentation, size, isGridStyle, } = this;\n        const mode = getIonMode(this);\n        const isMonthAndYearPresentation = presentation === 'year' || presentation === 'month' || presentation === 'month-year';\n        const shouldShowMonthAndYear = showMonthAndYear || isMonthAndYearPresentation;\n        const monthYearPickerOpen = showMonthAndYear && !isMonthAndYearPresentation;\n        const hasDatePresentation = presentation === 'date' || presentation === 'date-time' || presentation === 'time-date';\n        const hasWheelVariant = hasDatePresentation && preferWheel;\n        renderHiddenInput(true, el, name, formatValue(value), disabled);\n        return (h(Host, { key: '8490192beb6c5c6064ed8f2a7be2d51846f84f36', \"aria-disabled\": disabled ? 'true' : null, onFocus: this.onFocus, onBlur: this.onBlur, class: Object.assign({}, createColorClasses(color, {\n                [mode]: true,\n                ['datetime-readonly']: readonly,\n                ['datetime-disabled']: disabled,\n                'show-month-and-year': shouldShowMonthAndYear,\n                'month-year-picker-open': monthYearPickerOpen,\n                [`datetime-presentation-${presentation}`]: true,\n                [`datetime-size-${size}`]: true,\n                [`datetime-prefer-wheel`]: hasWheelVariant,\n                [`datetime-grid`]: isGridStyle,\n            })) }, h(\"div\", { key: 'a2959c07ed871f9004a2f11ab1385a5a7b5737fd', class: \"intersection-tracker\", ref: (el) => (this.intersectionTrackerRef = el) }), this.renderDatetime(mode)));\n    }\n    get el() { return this; }\n    static get watchers() { return {\n        \"formatOptions\": [\"formatOptionsChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"min\": [\"minChanged\"],\n        \"max\": [\"maxChanged\"],\n        \"presentation\": [\"presentationChanged\"],\n        \"yearValues\": [\"yearValuesChanged\"],\n        \"monthValues\": [\"monthValuesChanged\"],\n        \"dayValues\": [\"dayValuesChanged\"],\n        \"hourValues\": [\"hourValuesChanged\"],\n        \"minuteValues\": [\"minuteValuesChanged\"],\n        \"value\": [\"valueChanged\"]\n    }; }\n    static get style() { return {\n        ios: IonDatetimeIosStyle0,\n        md: IonDatetimeMdStyle0\n    }; }\n}, [33, \"ion-datetime\", {\n        \"color\": [1],\n        \"name\": [1],\n        \"disabled\": [4],\n        \"formatOptions\": [16],\n        \"readonly\": [4],\n        \"isDateEnabled\": [16],\n        \"min\": [1025],\n        \"max\": [1025],\n        \"presentation\": [1],\n        \"cancelText\": [1, \"cancel-text\"],\n        \"doneText\": [1, \"done-text\"],\n        \"clearText\": [1, \"clear-text\"],\n        \"yearValues\": [8, \"year-values\"],\n        \"monthValues\": [8, \"month-values\"],\n        \"dayValues\": [8, \"day-values\"],\n        \"hourValues\": [8, \"hour-values\"],\n        \"minuteValues\": [8, \"minute-values\"],\n        \"locale\": [1],\n        \"firstDayOfWeek\": [2, \"first-day-of-week\"],\n        \"titleSelectedDatesFormatter\": [16],\n        \"multiple\": [4],\n        \"highlightedDates\": [16],\n        \"value\": [1025],\n        \"showDefaultTitle\": [4, \"show-default-title\"],\n        \"showDefaultButtons\": [4, \"show-default-buttons\"],\n        \"showClearButton\": [4, \"show-clear-button\"],\n        \"showDefaultTimeLabel\": [4, \"show-default-time-label\"],\n        \"hourCycle\": [1, \"hour-cycle\"],\n        \"size\": [1],\n        \"preferWheel\": [4, \"prefer-wheel\"],\n        \"showMonthAndYear\": [32],\n        \"activeParts\": [32],\n        \"workingParts\": [32],\n        \"isTimePopoverOpen\": [32],\n        \"forceRenderDate\": [32],\n        \"confirm\": [64],\n        \"reset\": [64],\n        \"cancel\": [64]\n    }, undefined, {\n        \"formatOptions\": [\"formatOptionsChanged\"],\n        \"disabled\": [\"disabledChanged\"],\n        \"min\": [\"minChanged\"],\n        \"max\": [\"maxChanged\"],\n        \"presentation\": [\"presentationChanged\"],\n        \"yearValues\": [\"yearValuesChanged\"],\n        \"monthValues\": [\"monthValuesChanged\"],\n        \"dayValues\": [\"dayValuesChanged\"],\n        \"hourValues\": [\"hourValuesChanged\"],\n        \"minuteValues\": [\"minuteValuesChanged\"],\n        \"value\": [\"valueChanged\"]\n    }]);\nlet datetimeIds = 0;\nfunction defineCustomElement$1() {\n    if (typeof customElements === \"undefined\") {\n        return;\n    }\n    const components = [\"ion-datetime\", \"ion-backdrop\", \"ion-button\", \"ion-buttons\", \"ion-icon\", \"ion-item\", \"ion-label\", \"ion-note\", \"ion-picker-column-internal\", \"ion-picker-internal\", \"ion-popover\", \"ion-ripple-effect\"];\n    components.forEach(tagName => { switch (tagName) {\n        case \"ion-datetime\":\n            if (!customElements.get(tagName)) {\n                customElements.define(tagName, Datetime);\n            }\n            break;\n        case \"ion-backdrop\":\n            if (!customElements.get(tagName)) {\n                defineCustomElement$c();\n            }\n            break;\n        case \"ion-button\":\n            if (!customElements.get(tagName)) {\n                defineCustomElement$b();\n            }\n            break;\n        case \"ion-buttons\":\n            if (!customElements.get(tagName)) {\n                defineCustomElement$a();\n            }\n            break;\n        case \"ion-icon\":\n            if (!customElements.get(tagName)) {\n                defineCustomElement$9();\n            }\n            break;\n        case \"ion-item\":\n            if (!customElements.get(tagName)) {\n                defineCustomElement$8();\n            }\n            break;\n        case \"ion-label\":\n            if (!customElements.get(tagName)) {\n                defineCustomElement$7();\n            }\n            break;\n        case \"ion-note\":\n            if (!customElements.get(tagName)) {\n                defineCustomElement$6();\n            }\n            break;\n        case \"ion-picker-column-internal\":\n            if (!customElements.get(tagName)) {\n                defineCustomElement$5();\n            }\n            break;\n        case \"ion-picker-internal\":\n            if (!customElements.get(tagName)) {\n                defineCustomElement$4();\n            }\n            break;\n        case \"ion-popover\":\n            if (!customElements.get(tagName)) {\n                defineCustomElement$3();\n            }\n            break;\n        case \"ion-ripple-effect\":\n            if (!customElements.get(tagName)) {\n                defineCustomElement$2();\n            }\n            break;\n    } });\n}\n\nconst IonDatetime = Datetime;\nconst defineCustomElement = defineCustomElement$1;\n\nexport { IonDatetime, defineCustomElement };\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}