{"ast":null,"code":"import * as Leaflet from 'leaflet';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nexport class HelpCentersPage {\n  map;\n  propertyList = [];\n  constructor() {}\n  ngOnInit() {}\n  ionViewDidEnter() {\n    this.map = new Leaflet.Map('mapId').setView([-34.008045, 18.4669712], 12);\n    Leaflet.tileLayer('http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png', {\n      attribution: 'nseye.co.zw'\n    }).addTo(this.map);\n    fetch('./assets/data/data.json').then(res => res.json()).then(data => {\n      this.propertyList = data.map;\n      this.leafletMap();\n    }).catch(err => console.error(err));\n  }\n  leafletMap() {\n    var greenIcon = Leaflet.icon({\n      iconUrl: './assets/icons/leaf-green.png',\n      shadowUrl: './assets/icons/leaf-shadow.png',\n      iconSize: [38, 95],\n      // size of the icon\n      shadowSize: [50, 64],\n      // size of the shadow\n      iconAnchor: [22, 94],\n      // point of the icon which will correspond to marker's location\n      shadowAnchor: [4, 62],\n      // the same for the shadow\n      popupAnchor: [-3, -76] // point from which the popup should open relative to the iconAnchor\n    });\n    for (const property of this.propertyList) {\n      Leaflet.marker([property.lat, property.lng], {\n        icon: greenIcon\n      }).addTo(this.map).bindPopup(property.city).openPopup();\n    }\n  }\n  ionViewWillLeave() {\n    this.map.remove();\n  }\n  static ɵfac = function HelpCentersPage_Factory(t) {\n    return new (t || HelpCentersPage)();\n  };\n  static ɵcmp = (() => /*@__PURE__*/i0.ɵɵdefineComponent({\n    type: HelpCentersPage,\n    selectors: [[\"app-help-centers\"]],\n    decls: 8,\n    vars: 1,\n    consts: [[3, \"translucent\"], [\"color\", \"primary\"], [\"slot\", \"start\"], [\"id\", \"mapId\", 2, \"width\", \"100%\", \"height\", \"100%\"]],\n    template: function HelpCentersPage_Template(rf, ctx) {\n      if (rf & 1) {\n        i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\", 1)(2, \"ion-buttons\", 2);\n        i0.ɵɵelement(3, \"ion-menu-button\");\n        i0.ɵɵelementEnd();\n        i0.ɵɵelementStart(4, \"ion-title\");\n        i0.ɵɵtext(5, \" Help Centers \");\n        i0.ɵɵelementEnd()()();\n        i0.ɵɵelementStart(6, \"ion-content\");\n        i0.ɵɵelement(7, \"div\", 3);\n        i0.ɵɵelementEnd();\n      }\n      if (rf & 2) {\n        i0.ɵɵproperty(\"translucent\", true);\n      }\n    },\n    dependencies: [i1.IonButtons, i1.IonContent, i1.IonHeader, i1.IonMenuButton, i1.IonTitle, i1.IonToolbar],\n    styles: [\"/*# sourceMappingURL=data:application/json;charset=utf-8;base64,eyJ2ZXJzaW9uIjozLCJzb3VyY2VzIjpbXSwibmFtZXMiOltdLCJtYXBwaW5ncyI6IiIsInNvdXJjZVJvb3QiOiIifQ== */\"]\n  }))();\n}","map":{"version":3,"names":["Leaflet","HelpCentersPage","map","propertyList","constructor","ngOnInit","ionViewDidEnter","Map","setView","tileLayer","attribution","addTo","fetch","then","res","json","data","leafletMap","catch","err","console","error","greenIcon","icon","iconUrl","shadowUrl","iconSize","shadowSize","iconAnchor","shadowAnchor","popupAnchor","property","marker","lat","lng","bindPopup","city","openPopup","ionViewWillLeave","remove","selectors","decls","vars","consts","template","HelpCentersPage_Template","rf","ctx","i0","ɵɵelementStart","ɵɵelement","ɵɵelementEnd","ɵɵtext","ɵɵproperty"],"sources":["/home/nigel/work/safe-space/src/app/pages/help-centers/help-centers.page.ts","/home/nigel/work/safe-space/src/app/pages/help-centers/help-centers.page.html"],"sourcesContent":["import { Component, OnInit } from '@angular/core';\nimport * as Leaflet from 'leaflet';\nimport { antPath } from 'leaflet-ant-path';\n\n\n@Component({\n  selector: 'app-help-centers',\n  templateUrl: './help-centers.page.html',\n  styleUrls: ['./help-centers.page.scss'],\n})\nexport class HelpCentersPage implements OnInit {\n\n  map: Leaflet.Map;\n  propertyList = [];\n\n  constructor() { }\n\n  ngOnInit() {\n  }\n\n  ionViewDidEnter() {\n    this.map = new Leaflet.Map('mapId').setView([-34.008045, 18.4669712], 12);\n\n    Leaflet.tileLayer('http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png', {\n      attribution: 'nseye.co.zw'\n    }).addTo(this.map);\n\n    fetch('./assets/data/data.json')\n      .then(res => res.json())\n      .then(data => {\n        this.propertyList = data.map;\n        this.leafletMap();\n      })\n      .catch(err => console.error(err));\n  }\n\n  leafletMap() {\n    var greenIcon = Leaflet.icon({\n      iconUrl: './assets/icons/leaf-green.png',\n      shadowUrl: './assets/icons/leaf-shadow.png',\n  \n      iconSize:     [38, 95], // size of the icon\n      shadowSize:   [50, 64], // size of the shadow\n      iconAnchor:   [22, 94], // point of the icon which will correspond to marker's location\n      shadowAnchor: [4, 62],  // the same for the shadow\n      popupAnchor:  [-3, -76] // point from which the popup should open relative to the iconAnchor\n  });\n\n    for (const property of this.propertyList) {\n      Leaflet.marker([property.lat, property.lng], {icon: greenIcon}).addTo(this.map)\n        .bindPopup(property.city)\n        .openPopup();\n    }\n  }\n\n  ionViewWillLeave() {\n    this.map.remove();\n  }\n\n}\n","<ion-header [translucent]=\"true\">\n  <ion-toolbar color=\"primary\">\n    <ion-buttons slot=\"start\">\n      <ion-menu-button></ion-menu-button>\n    </ion-buttons>\n    <ion-title>\n       Help Centers\n    </ion-title>\n  </ion-toolbar>\n</ion-header>\n\n<ion-content>\n  <div id=\"mapId\" style=\"width: 100%; height: 100%\">\n  </div>\n</ion-content>"],"mappings":"AACA,OAAO,KAAKA,OAAO,MAAM,SAAS;;;AASlC,OAAM,MAAOC,eAAe;EAE1BC,GAAG;EACHC,YAAY,GAAG,EAAE;EAEjBC,YAAA,GAAgB;EAEhBC,QAAQA,CAAA,GACR;EAEAC,eAAeA,CAAA;IACb,IAAI,CAACJ,GAAG,GAAG,IAAIF,OAAO,CAACO,GAAG,CAAC,OAAO,CAAC,CAACC,OAAO,CAAC,CAAC,CAAC,SAAS,EAAE,UAAU,CAAC,EAAE,EAAE,CAAC;IAEzER,OAAO,CAACS,SAAS,CAAC,4DAA4D,EAAE;MAC9EC,WAAW,EAAE;KACd,CAAC,CAACC,KAAK,CAAC,IAAI,CAACT,GAAG,CAAC;IAElBU,KAAK,CAAC,yBAAyB,CAAC,CAC7BC,IAAI,CAACC,GAAG,IAAIA,GAAG,CAACC,IAAI,EAAE,CAAC,CACvBF,IAAI,CAACG,IAAI,IAAG;MACX,IAAI,CAACb,YAAY,GAAGa,IAAI,CAACd,GAAG;MAC5B,IAAI,CAACe,UAAU,EAAE;IACnB,CAAC,CAAC,CACDC,KAAK,CAACC,GAAG,IAAIC,OAAO,CAACC,KAAK,CAACF,GAAG,CAAC,CAAC;EACrC;EAEAF,UAAUA,CAAA;IACR,IAAIK,SAAS,GAAGtB,OAAO,CAACuB,IAAI,CAAC;MAC3BC,OAAO,EAAE,+BAA+B;MACxCC,SAAS,EAAE,gCAAgC;MAE3CC,QAAQ,EAAM,CAAC,EAAE,EAAE,EAAE,CAAC;MAAE;MACxBC,UAAU,EAAI,CAAC,EAAE,EAAE,EAAE,CAAC;MAAE;MACxBC,UAAU,EAAI,CAAC,EAAE,EAAE,EAAE,CAAC;MAAE;MACxBC,YAAY,EAAE,CAAC,CAAC,EAAE,EAAE,CAAC;MAAG;MACxBC,WAAW,EAAG,CAAC,CAAC,CAAC,EAAE,CAAC,EAAE,CAAC,CAAC;KAC3B,CAAC;IAEA,KAAK,MAAMC,QAAQ,IAAI,IAAI,CAAC5B,YAAY,EAAE;MACxCH,OAAO,CAACgC,MAAM,CAAC,CAACD,QAAQ,CAACE,GAAG,EAAEF,QAAQ,CAACG,GAAG,CAAC,EAAE;QAACX,IAAI,EAAED;MAAS,CAAC,CAAC,CAACX,KAAK,CAAC,IAAI,CAACT,GAAG,CAAC,CAC5EiC,SAAS,CAACJ,QAAQ,CAACK,IAAI,CAAC,CACxBC,SAAS,EAAE;IAChB;EACF;EAEAC,gBAAgBA,CAAA;IACd,IAAI,CAACpC,GAAG,CAACqC,MAAM,EAAE;EACnB;;qBA/CWtC,eAAe;EAAA;;UAAfA,eAAe;IAAAuC,SAAA;IAAAC,KAAA;IAAAC,IAAA;IAAAC,MAAA;IAAAC,QAAA,WAAAC,yBAAAC,EAAA,EAAAC,GAAA;MAAA,IAAAD,EAAA;QCRxBE,EAFJ,CAAAC,cAAA,oBAAiC,qBACF,qBACD;QACxBD,EAAA,CAAAE,SAAA,sBAAmC;QACrCF,EAAA,CAAAG,YAAA,EAAc;QACdH,EAAA,CAAAC,cAAA,gBAAW;QACRD,EAAA,CAAAI,MAAA,qBACH;QAEJJ,EAFI,CAAAG,YAAA,EAAY,EACA,EACH;QAEbH,EAAA,CAAAC,cAAA,kBAAa;QACXD,EAAA,CAAAE,SAAA,aACM;QACRF,EAAA,CAAAG,YAAA,EAAc;;;QAdFH,EAAA,CAAAK,UAAA,qBAAoB","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}