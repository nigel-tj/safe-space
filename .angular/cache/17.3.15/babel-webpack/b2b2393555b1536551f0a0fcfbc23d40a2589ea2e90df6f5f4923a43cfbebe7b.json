{"ast":null,"code":"import _asyncToGenerator from \"/home/nigel/work/safe-space/node_modules/@babel/runtime/helpers/esm/asyncToGenerator.js\";\nimport { createUserWithEmailAndPassword, signInWithEmailAndPassword, signOut, onAuthStateChanged, sendPasswordResetEmail } from 'firebase/auth';\nimport { from, BehaviorSubject } from 'rxjs';\nimport * as i0 from \"@angular/core\";\nexport class AuthenticationService {\n  auth;\n  currentUserSubject = (() => new BehaviorSubject(null))();\n  currentUser$ = this.currentUserSubject.asObservable();\n  constructor(auth) {\n    this.auth = auth;\n    // Initialize the current user from the auth state\n    onAuthStateChanged(this.auth, user => {\n      this.currentUserSubject.next(user);\n    });\n  }\n  isAuthenticated() {\n    var _this = this;\n    return _asyncToGenerator(function* () {\n      return new Promise(resolve => {\n        onAuthStateChanged(_this.auth, user => {\n          resolve(!!user);\n        });\n      });\n    })();\n  }\n  registerUser(value) {\n    return from(createUserWithEmailAndPassword(this.auth, value.email, value.password));\n  }\n  login(value) {\n    return from(signInWithEmailAndPassword(this.auth, value.email, value.password));\n  }\n  logoutUser() {\n    return from(signOut(this.auth));\n  }\n  userDetails() {\n    return this.currentUser$;\n  }\n  currentUserWithScope() {\n    return this.auth.currentUser;\n  }\n  resetPassword(email) {\n    return from(sendPasswordResetEmail(this.auth, email));\n  }\n  static ɵfac = function AuthenticationService_Factory(t) {\n    return new (t || AuthenticationService)(i0.ɵɵinject('auth'));\n  };\n  static ɵprov = (() => /*@__PURE__*/i0.ɵɵdefineInjectable({\n    token: AuthenticationService,\n    factory: AuthenticationService.ɵfac,\n    providedIn: 'root'\n  }))();\n}","map":{"version":3,"names":["createUserWithEmailAndPassword","signInWithEmailAndPassword","signOut","onAuthStateChanged","sendPasswordResetEmail","from","BehaviorSubject","AuthenticationService","auth","currentUserSubject","currentUser$","asObservable","constructor","user","next","isAuthenticated","_this","_asyncToGenerator","Promise","resolve","registerUser","value","email","password","login","logoutUser","userDetails","currentUserWithScope","currentUser","resetPassword","i0","ɵɵinject","factory","ɵfac","providedIn"],"sources":["/home/nigel/work/safe-space/src/app/services/authentication.service.ts"],"sourcesContent":["import { Injectable, Inject } from '@angular/core';\nimport {\n  Auth,\n  createUserWithEmailAndPassword,\n  signInWithEmailAndPassword,\n  signOut,\n  onAuthStateChanged,\n  sendPasswordResetEmail,\n  User\n} from 'firebase/auth';\nimport { Observable, from, BehaviorSubject } from 'rxjs';\n\n@Injectable({\n  providedIn: 'root'\n})\nexport class AuthenticationService {\n  private currentUserSubject = new BehaviorSubject<User | null>(null);\n  currentUser$ = this.currentUserSubject.asObservable();\n\n  constructor(@Inject('auth') private auth: Auth) {\n    // Initialize the current user from the auth state\n    onAuthStateChanged(this.auth, (user) => {\n      this.currentUserSubject.next(user);\n    });\n  }\n\n  async isAuthenticated(): Promise<boolean> {\n    return new Promise((resolve) => {\n      onAuthStateChanged(this.auth, (user) => {\n        resolve(!!user);\n      });\n    });\n  }\n\n  registerUser(value: { email: string, password: string }) {\n    return from(createUserWithEmailAndPassword(\n      this.auth,\n      value.email,\n      value.password\n    ));\n  }\n\n  login(value: { email: string, password: string }) {\n    return from(signInWithEmailAndPassword(\n      this.auth,\n      value.email,\n      value.password\n    ));\n  }\n\n  logoutUser() {\n    return from(signOut(this.auth));\n  }\n\n  userDetails() {\n    return this.currentUser$;\n  }\n\n  currentUserWithScope() {\n    return this.auth.currentUser;\n  }\n\n  resetPassword(email: string) {\n    return from(sendPasswordResetEmail(this.auth, email));\n  }\n}\n"],"mappings":";AACA,SAEEA,8BAA8B,EAC9BC,0BAA0B,EAC1BC,OAAO,EACPC,kBAAkB,EAClBC,sBAAsB,QAEjB,eAAe;AACtB,SAAqBC,IAAI,EAAEC,eAAe,QAAQ,MAAM;;AAKxD,OAAM,MAAOC,qBAAqB;EAIIC,IAAA;EAH5BC,kBAAkB,UAAG,IAAIH,eAAe,CAAc,IAAI,CAAC;EACnEI,YAAY,GAAG,IAAI,CAACD,kBAAkB,CAACE,YAAY,EAAE;EAErDC,YAAoCJ,IAAU;IAAV,KAAAA,IAAI,GAAJA,IAAI;IACtC;IACAL,kBAAkB,CAAC,IAAI,CAACK,IAAI,EAAGK,IAAI,IAAI;MACrC,IAAI,CAACJ,kBAAkB,CAACK,IAAI,CAACD,IAAI,CAAC;IACpC,CAAC,CAAC;EACJ;EAEME,eAAeA,CAAA;IAAA,IAAAC,KAAA;IAAA,OAAAC,iBAAA;MACnB,OAAO,IAAIC,OAAO,CAAEC,OAAO,IAAI;QAC7BhB,kBAAkB,CAACa,KAAI,CAACR,IAAI,EAAGK,IAAI,IAAI;UACrCM,OAAO,CAAC,CAAC,CAACN,IAAI,CAAC;QACjB,CAAC,CAAC;MACJ,CAAC,CAAC;IAAC;EACL;EAEAO,YAAYA,CAACC,KAA0C;IACrD,OAAOhB,IAAI,CAACL,8BAA8B,CACxC,IAAI,CAACQ,IAAI,EACTa,KAAK,CAACC,KAAK,EACXD,KAAK,CAACE,QAAQ,CACf,CAAC;EACJ;EAEAC,KAAKA,CAACH,KAA0C;IAC9C,OAAOhB,IAAI,CAACJ,0BAA0B,CACpC,IAAI,CAACO,IAAI,EACTa,KAAK,CAACC,KAAK,EACXD,KAAK,CAACE,QAAQ,CACf,CAAC;EACJ;EAEAE,UAAUA,CAAA;IACR,OAAOpB,IAAI,CAACH,OAAO,CAAC,IAAI,CAACM,IAAI,CAAC,CAAC;EACjC;EAEAkB,WAAWA,CAAA;IACT,OAAO,IAAI,CAAChB,YAAY;EAC1B;EAEAiB,oBAAoBA,CAAA;IAClB,OAAO,IAAI,CAACnB,IAAI,CAACoB,WAAW;EAC9B;EAEAC,aAAaA,CAACP,KAAa;IACzB,OAAOjB,IAAI,CAACD,sBAAsB,CAAC,IAAI,CAACI,IAAI,EAAEc,KAAK,CAAC,CAAC;EACvD;;qBAjDWf,qBAAqB,EAAAuB,EAAA,CAAAC,QAAA,CAIZ,MAAM;EAAA;;WAJfxB,qBAAqB;IAAAyB,OAAA,EAArBzB,qBAAqB,CAAA0B,IAAA;IAAAC,UAAA,EAFpB;EAAM","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}