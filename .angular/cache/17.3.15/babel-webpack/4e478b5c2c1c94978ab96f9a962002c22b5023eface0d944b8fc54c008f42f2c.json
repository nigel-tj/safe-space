{"ast":null,"code":"import * as Leaflet from 'leaflet';\nimport * as i0 from \"@angular/core\";\nimport * as i1 from \"@ionic/angular\";\nexport let HelpCentersPage = /*#__PURE__*/(() => {\n  class HelpCentersPage {\n    map;\n    propertyList = [];\n    constructor() {}\n    ngOnInit() {}\n    ionViewDidEnter() {\n      this.map = new Leaflet.Map('mapId').setView([-34.008045, 18.4669712], 12);\n      Leaflet.tileLayer('http://{s}.basemaps.cartocdn.com/light_all/{z}/{x}/{y}.png', {\n        attribution: 'nseye.co.zw'\n      }).addTo(this.map);\n      fetch('./assets/data/data.json').then(res => res.json()).then(data => {\n        this.propertyList = data.map;\n        this.leafletMap();\n      }).catch(err => console.error(err));\n    }\n    leafletMap() {\n      var greenIcon = Leaflet.icon({\n        iconUrl: './assets/icons/leaf-green.png',\n        shadowUrl: './assets/icons/leaf-shadow.png',\n        iconSize: [38, 95],\n        // size of the icon\n        shadowSize: [50, 64],\n        // size of the shadow\n        iconAnchor: [22, 94],\n        // point of the icon which will correspond to marker's location\n        shadowAnchor: [4, 62],\n        // the same for the shadow\n        popupAnchor: [-3, -76] // point from which the popup should open relative to the iconAnchor\n      });\n      for (const property of this.propertyList) {\n        Leaflet.marker([property.lat, property.lng], {\n          icon: greenIcon\n        }).addTo(this.map).bindPopup(property.city).openPopup();\n      }\n    }\n    ionViewWillLeave() {\n      this.map.remove();\n    }\n    static ɵfac = function HelpCentersPage_Factory(t) {\n      return new (t || HelpCentersPage)();\n    };\n    static ɵcmp = (() => /*@__PURE__*/i0.ɵɵdefineComponent({\n      type: HelpCentersPage,\n      selectors: [[\"app-help-centers\"]],\n      decls: 8,\n      vars: 1,\n      consts: [[3, \"translucent\"], [\"color\", \"primary\"], [\"slot\", \"start\"], [\"id\", \"mapId\", 2, \"width\", \"100%\", \"height\", \"100%\"]],\n      template: function HelpCentersPage_Template(rf, ctx) {\n        if (rf & 1) {\n          i0.ɵɵelementStart(0, \"ion-header\", 0)(1, \"ion-toolbar\", 1)(2, \"ion-buttons\", 2);\n          i0.ɵɵelement(3, \"ion-menu-button\");\n          i0.ɵɵelementEnd();\n          i0.ɵɵelementStart(4, \"ion-title\");\n          i0.ɵɵtext(5, \" Help Centers \");\n          i0.ɵɵelementEnd()()();\n          i0.ɵɵelementStart(6, \"ion-content\");\n          i0.ɵɵelement(7, \"div\", 3);\n          i0.ɵɵelementEnd();\n        }\n        if (rf & 2) {\n          i0.ɵɵproperty(\"translucent\", true);\n        }\n      },\n      dependencies: [i1.IonButtons, i1.IonContent, i1.IonHeader, i1.IonMenuButton, i1.IonTitle, i1.IonToolbar]\n    }))();\n  }\n  return HelpCentersPage;\n})();","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}