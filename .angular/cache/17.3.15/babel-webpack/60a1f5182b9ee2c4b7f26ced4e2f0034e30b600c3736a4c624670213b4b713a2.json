{"ast":null,"code":"/*!\n * (C) Ionic http://ionicframework.com - MIT License\n */\nimport { proxyCustomElement, HTMLElement, h, Host } from '@stencil/core/internal/client';\nimport { b as getIonMode } from './ionic-global.js';\nconst thumbnailCss = \":host{--size:48px;--border-radius:0;border-radius:var(--border-radius);display:block;width:var(--size);height:var(--size)}::slotted(ion-img),::slotted(img){border-radius:var(--border-radius);width:100%;height:100%;-o-object-fit:cover;object-fit:cover;overflow:hidden}\";\nconst IonThumbnailStyle0 = thumbnailCss;\nconst Thumbnail = /*@__PURE__*/proxyCustomElement(class Thumbnail extends HTMLElement {\n  constructor() {\n    super();\n    this.__registerHost();\n    this.__attachShadow();\n  }\n  render() {\n    return h(Host, {\n      key: 'd2667635930e4c0896805f452357e7dc9086bc72',\n      class: getIonMode(this)\n    }, h(\"slot\", {\n      key: '66eb1487f3da4da2ef71b812a8d0f0fe884c7d81'\n    }));\n  }\n  static get style() {\n    return IonThumbnailStyle0;\n  }\n}, [1, \"ion-thumbnail\"]);\nfunction defineCustomElement$1() {\n  if (typeof customElements === \"undefined\") {\n    return;\n  }\n  const components = [\"ion-thumbnail\"];\n  components.forEach(tagName => {\n    switch (tagName) {\n      case \"ion-thumbnail\":\n        if (!customElements.get(tagName)) {\n          customElements.define(tagName, Thumbnail);\n        }\n        break;\n    }\n  });\n}\nconst IonThumbnail = Thumbnail;\nconst defineCustomElement = defineCustomElement$1;\nexport { IonThumbnail, defineCustomElement };","map":null,"metadata":{},"sourceType":"module","externalDependencies":[]}